<!DOCTYPE html >

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<title>CT MODULE</title>

	<style>

	body{
		//background-image: url("Common/img/logo.png");
		background-size: 180px;
		background-repeat: no-repeat;
    		background-attachment: fixed;
    		background-position: right 40px top 30px;
		font-family: Arial;
	}
	#app_header {
 		padding: 10px;
 		padding-left: 40px;
 		padding-top: 15px;
 		padding-bottom: 0px;
		height:80px;
		width:400px;
		text-align: center;
	}
	#app_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		color: #007dc0;
		margin-bottom; 20px;
	}
	#app_menu {
		width:400px;
		text-align: center;
		font-family: Arial,Helvetica,sans-serif;
	}
	#page_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:28px;
		color: #cfcfcf;
	}
	#mesm_content {
 		padding: 30px;
 		padding-top: 40px;
	}
	#__button0, #__button1, #__button2 {
		margin-top:10px;
		margin-left:5px;
		margin-right:5px;
	}

	#MatrixP, #MatrixT, #MatrixB {
		margin:10px auto;
	}

 	#B-New,#B-Edit,#B-Delete,#B-View{
		width:100px;
		height:35px;
		font-size:14px;
	}
	
	#MatrixNP , #MatrixEP,#MatrixVP {
		margin:10px auto;
	}

	#L-NewProduct,#L-EditProduct ,#L-ViewProduct{
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:27px;
		height:35px;
		color: #007dc0;
	}

	#B-NPSave,#B-EPSave  {
		width:100px;
		height:35px;
		font-size:14px;
	}

	#__cell0,#__cell2, #__cell4{
		text-align:right;
	} 

	#__cell8, #__cell9, #__cell10, #__cell11{
		text-align:center;
	} 

	
	#__cell13{
		text-align:center;
	} 
	 #__cell14,#__cell15, #__cell16, #__cell17, #__cell18,#__cell19, #__cell20, #__cell21, #__cell22, #__cell23,#__cell25,#__cell26{
		text-align:center;
	} 

	
	#__cell27{
		text-align:center;
	} 

	#__cell30{
		text-align:center;
	} 
	#__cell31, #__cell32, #__cell33,#__cell34, #__cell35, #__cell36, #__cell37, #__cell38, #__cell39, #__cell40, #__cell42, #__cell43, #__cell44{
		text-align:center;
	} 

	</style>

	
	<link rel="stylesheet" type="text/css" href="Common/js/jquerydatetimepicker/jquery.datetimepicker.css"/>

	<script id="sap-ui-bootstrap"
		src="/sapui5/resources/sap-ui-core.js"
		data-sap-ui-theme="sap_goldreflection"
		data-sap-ui-libs="sap.ui.core,sap.ui.commons,sap.ui.table,sap.ui.ux3"
		data-sap-ui-language="en" >
	</script>
	<script type="text/javascript" src="Common/js/default.js"></script>
	<script src="Common/js/jquerydatetimepicker/build/jquery.datetimepicker.full.js"></script>

	<script type="text/javascript" id="app-init">

	// ***************************************************

	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	var nrRows = 13;
	var nrRowsView = 7;
	var selectedIndex =  -1;

	// **************************************************

	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var clock_ID = '';
	var plant_ID = '';
	var user_name = "";

	// filters
	var selectedRouteID = '8' ;
       	var selectedLineID =  3 ;
	var selectedPlantID = 1;
	var selectedWorkcenterID = 0 ;


	// selected row values 

	var selectedOrderRecordID = 0;

	var selectedRowID = 0;
	var selectedSerialNumber  ='';		
	var selectedYieldConfirmed = 0;
	var selectedScrapConfirmed = 0;
	var selectedScrapReasonCode = '';
	var selectedConfirmationNumber  = '';
	var selectedConfirmationProccessed = '';
	var selectedNotes = '';
	var selectedFirstOrderID = '0' ;
	var selectedLastOrderID = '0' ;

	// flag main table creatde

	var isMainTableCreated = 0;
		
	
	// ****************************************************************************************

	function roleSecurity() {
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "MESM_" + document.getElementById("user_role").value;
		user_name = document.getElementById("user_name").value;
		//alert(user_name);
		// alert(role2Access);
 		if(myRoles.indexOf(role2Access)<0) {
			 window.location.assign("security.irpt");
		  } else {
			var roleString = document.getElementById("user_role").value;
			var roleArray = roleString.split("_");
			level2Access = roleArray[0]; 
			// 	alert("level : " + level2Access);
			plant2Access =  roleArray[1];
			//	alert("plant : " + plant2Access);
			//updatePlants(plant2Access); 
			document.getElementById("page_title").innerHTML=role2Access;
			// functions called when page LOADED
			//updateDashboardOrdersList();
			updateCarrierLinesList();
			// enable homepage
			oCore.byId("item3-0-3").setEnabled(true);
			// show menus
			oMenuButton1.placeAt("app_menu");
			oMenuButton2.placeAt("app_menu");
			oMenuButton3.placeAt("app_menu");

			var role_ADM = "MESM_ADM_"+plant2Access;
			var role_ENG = "MESM_ENG_"+plant2Access;
			var role_SUP = "MESM_SUP_"+plant2Access;
			var role_OPS = "MESM_OPS_"+plant2Access;

			switch(role2Access) {

			case "MESM_ADM_ALL":

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-4-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-4-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-4-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-4-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-6-2").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// update screen
					document.getElementById("page_title").innerHTML="ADM ALL PLANTS";
					oMatrixP.placeAt('mesm_content');
					oMatrixT.placeAt('mesm_content');
					oMatrixB.placeAt('mesm_content');
					break;
			case role_ADM:

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-4-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-4-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-4-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-4-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-6-2").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// update screen
				document.getElementById("page_title").innerHTML="ADM PLANT "+plant2Access;
				oMatrixP.placeAt('mesm_content');
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case "MESM_OPS_ALL":

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS ALL PLANTS";
				oMatrixP.placeAt('mesm_content');
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_OPS:

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS PLANT "+plant2Access;
				oMatrixP.placeAt('mesm_content');
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			default:
				alert("MES Module Role Unknown: " + role2Access);
				break;
			}
		  }
	}
	// ******************************************************************************************************************************************************************
	var oMenuButton1 = new sap.ui.commons.MenuButton({text: "Settings", icon: "Common/img/map.png"}); 
	var oMenuButton2 = new sap.ui.commons.MenuButton({ text: "Dashboards", icon: "Common/img/cloud.png"}); 
	var oMenuButton3 = new sap.ui.commons.MenuButton({text: "Reports", icon: "Common/img/list.png"});

	// Create the menu
	var oMenu1 = new sap.ui.commons.Menu("menu1", {ariaDescription: "Application Setup", enabled:true});
	// Create the items and add them to the menu
	var oMenuItem1 = new sap.ui.commons.MenuItem("item1-0-1",{text: "Enterprise Hierarchy", enabled: false});
	oMenu1.addItem(oMenuItem1);
	var oMenuItem2 = new sap.ui.commons.MenuItem("item1-0-2",{text: " ???", enabled: false});
	//oMenu1.addItem(oMenuItem2);
	var oMenuItem3 = new sap.ui.commons.MenuItem("item1-0-3",{text: "MES Memory Maps", enabled: false});
	oMenu1.addItem(oMenuItem3);
	var oMenuItem4 = new sap.ui.commons.MenuItem("item1-0-4",{text: "Plant Connectivity", enabled: false});
	oMenu1.addItem(oMenuItem4);
	var oMenuItem5 = new sap.ui.commons.MenuItem("item1-0-5",{text: "Master Data Setup", enabled: false});
	oMenu1.addItem(oMenuItem5);

	var oMenu4 = new sap.ui.commons.Menu("menu4", {ariaDescription: "Memory Maps Setup", enabled:true});
	oMenuItem3.setSubmenu(oMenu4);
	//Create the items and add them to the sub menu
	var oMenuItem41 = new sap.ui.commons.MenuItem("item1-4-1",{text: "Memory Map Tags", enabled: false});
	oMenu4.addItem(oMenuItem41);
	var oMenuItem45 = new sap.ui.commons.MenuItem("item1-4-5",{text: "Memory Map Transactions", enabled: false});
	oMenu4.addItem(oMenuItem45);
	var oMenuItem44 = new sap.ui.commons.MenuItem("item1-4-4",{text: "PLC Tag Groups", enabled: false});
	oMenu4.addItem(oMenuItem44);
	var oMenuItem42 = new sap.ui.commons.MenuItem("item1-4-2",{text: "PLC Tag Types", enabled: false});
	oMenu4.addItem(oMenuItem42);
	var oMenuItem43 = new sap.ui.commons.MenuItem("item1-4-3",{text: "PLC Tag Functions", enabled: false});
	oMenu4.addItem(oMenuItem43);

	var oMenu5 = new sap.ui.commons.Menu("menu5", {ariaDescription: "Connectivity Setup", enabled:true});
	oMenuItem4.setSubmenu(oMenu5);
	//Create the items and add them to the sub menu
	var oMenuItem55 = new sap.ui.commons.MenuItem("item1-5-5",{text: "Shop Floor Operators", enabled: false});
	oMenu5.addItem(oMenuItem55);
	var oMenuItem51 = new sap.ui.commons.MenuItem("item1-5-1",{text: "Shop Floor Computers", enabled: false});
	oMenu5.addItem(oMenuItem51);
	var oMenuItem52 = new sap.ui.commons.MenuItem("item1-5-2",{text: "Shop Floor Printers", enabled: false});
	oMenu5.addItem(oMenuItem52);
	var oMenuItem53 = new sap.ui.commons.MenuItem("item1-5-3",{text: "Plant Connectivity Servers", enabled: false});
	oMenu5.addItem(oMenuItem53);
	var oMenuItem54 = new sap.ui.commons.MenuItem("item1-5-4",{text: "Plant Connectivity Agents", enabled: false});
	oMenu5.addItem(oMenuItem54);

	var oMenu6 = new sap.ui.commons.Menu("menu6", {ariaDescription: "Hierarchy Setup", enabled:true});
	oMenuItem1.setSubmenu(oMenu6);
	//Create the items and add them to the sub menu
	var oMenuItem61 = new sap.ui.commons.MenuItem("item1-6-1",{text: "Hierarchy Management", enabled: false});
	oMenu6.addItem(oMenuItem61);
	var oMenuItem62 = new sap.ui.commons.MenuItem("item1-6-2",{text: "Hierarchy Levels Setup", enabled: false});
	oMenu6.addItem(oMenuItem62);

	var oMenu7 = new sap.ui.commons.Menu("menu7", {ariaDescription: "Master Data", enabled:true});
	oMenuItem5.setSubmenu(oMenu7);
	//Create the items and add them to the sub menu
	var oMenuItem71 = new sap.ui.commons.MenuItem("item1-7-1",{text: "Units Of Measure", enabled: false});
		oMenu7.addItem(oMenuItem71);
	var oMenuItem72 = new sap.ui.commons.MenuItem("item1-7-2",{text: "Products Management", enabled: false});
		oMenu7.addItem(oMenuItem72);
	var oMenuItem73 = new sap.ui.commons.MenuItem("item1-7-3",{text: "Bills of Materials", enabled: false});
		oMenu7.addItem(oMenuItem73);
	var oMenuItem74 = new sap.ui.commons.MenuItem("item1-7-4",{text: "Products Routing", enabled: false});
	oMenu7.addItem(oMenuItem74);

	// Create the menu
	var oMenu2 = new sap.ui.commons.Menu("menu2", {ariaDescription: "User Dashboards"});
	// Create the items and add them to the menu
	var oMenuItem21 = new sap.ui.commons.MenuItem("item2-0-1",{text: "Work Order Management", enabled:false});
	oMenu2.addItem(oMenuItem21);
	var oMenuItem22 = new sap.ui.commons.MenuItem("item2-0-2",{text: "Carrier Station Dashboard", enabled:false});
	oMenu2.addItem(oMenuItem22);
	var oMenuItem23 = new sap.ui.commons.MenuItem("item2-0-3",{text: "Assembly Station Dashboard", enabled:false});
	oMenu2.addItem(oMenuItem23);

	// Create the menu
	var oMenu3 = new sap.ui.commons.Menu("menu3", {ariaDescription: "User Reports", enabled:true});
	// Create the items and add them to the menu
	var oMenuItem31 = new sap.ui.commons.MenuItem("item3-0-1",{text: "Production Status Report", enabled:false});
	oMenu3.addItem(oMenuItem31);
	var oMenuItem32 = new sap.ui.commons.MenuItem("item3-0-2",{text: "Item Traceability Report", enabled:false});
	oMenu3.addItem(oMenuItem32);
	var oMenuItem33 = new sap.ui.commons.MenuItem("item3-0-3",{text: "Connector Diagnostics", enabled:false});
	oMenu3.addItem(oMenuItem33);

	//Attach the Menu to the MenuButton
	oMenuButton1.setMenu(oMenu1);
	oMenuButton2.setMenu(oMenu2);
	oMenuButton3.setMenu(oMenu3);

	//Attach an event to raise an alert when an item is selected (Button 1)
	oMenuButton1.attachItemSelected(function (oEvent){
	switch( oEvent.getParameter("itemId")) {
		// Menu Settings 1
		case "item1-6-1":
				setTimeout("location.href = '" + "MgtHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-6-2":
				setTimeout("location.href = '" + "LvlHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 2
		case "item1-4-1":
				setTimeout("location.href = '" + "MemMapTags.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-5":
				setTimeout("location.href = '" + "MemMapTrxs.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-4":
				setTimeout("location.href = '" + "TagCommGroups.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-2":
				setTimeout("location.href = '" + "TagTypes.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-3":
				setTimeout("location.href = '" + "TagFunctions.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 3
		case "item1-5-5":
				setTimeout("location.href = '" + "Operators.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-1":
				setTimeout("location.href = '" + "Stations.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-2":
				setTimeout("location.href = '" + "Printers.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-3":
				setTimeout("location.href = '" + "PCoServers.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-4":
				setTimeout("location.href = '" + "PCoAgents.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 4
		case "item1-7-1":
			setTimeout("location.href = '" + "UnitsOfMeasure.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-2":
			setTimeout("location.href = '" + "ProductsMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-3":
			setTimeout("location.href = '" + "BomMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-4":
			setTimeout("location.href = '" + "RoutingMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Default
		default:
				// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
	}
	});

	//Attach an event to raise an alert when an item is selected. (Button 2)
	oMenuButton2.attachItemSelected(function (oEvent){
		switch( oEvent.getParameter("itemId")) {
		case "item2-0-1":
			setTimeout("location.href = '" + "WorkOrders.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
				break;
		case "item2-0-2":
			setTimeout("location.href = '" + "CarrierDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
				break;
		case "item2-0-3":
			setTimeout("location.href = '" + "AssemblyDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
				break;
			default:
				// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
		}
	});

	//Attach an event to raise an alert when an item is selected. (Button 3)
	oMenuButton3.attachItemSelected(function (oEvent){
	switch( oEvent.getParameter("itemId")) {
		// Menu Reports
		case "item3-0-1":
			setTimeout("location.href = '" + "ProductionStatus.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item3-0-2":
			setTimeout("location.href = '" + "ItemTraceability.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item3-0-3":
				setTimeout("location.href = '" + "MESM.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
				break;
		default:
				//alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
	}
	});


// ****************************************************************************************************************************************************

	var oMatrixP = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixP',
		layoutFixed : true,
		width: '1080px',
		columns : 6,
		widths : ['100px','230px','70px','230px','190px','250px'] });

// ****************************************************************************************************************************************************

	var oLabelDashboardCarrierLines = new sap.ui.commons.Label({
		id : 'L-DashboardCarrierLines',
		visible : true,
		text : 'CARRIER LINES' });

	var oDropdownBoxDashboardCarrierLines = new sap.ui.commons.DropdownBox({
		id : "DashboardCarrierLines",
		tooltip : 'Carrier Lines',
		editable : true,
		width : '200px',
		change: function(oEvent){
		
			selectedLineID= oDropdownBoxDashboardCarrierLines.getSelectedKey();
		         	updateDashboardOrdersList();
		}
	})

	var oLabelDashboardOrders = new sap.ui.commons.Label({
		id : 'L-DashboardOrders',
		visible : true,
		text : 'ORDERS' });

	var oDropdownBoxDashboardOrders = new sap.ui.commons.DropdownBox({
		id : "DashboardOrders",
		tooltip : 'Orders',
		editable : true,
		width : '200px',
		change: function(oEvent){
		
			selectedOrderRecordID= oDropdownBoxDashboardOrders.getSelectedKey();
		          //alert(selectedOrderRecordID);
			selectedOrderID = oDropdownBoxDashboardOrders.getSelectedItemId();
			selectedFirstOrderID =  selectedOrderID.substring(selectedOrderID.indexOf ("_")+1,selectedOrderID.indexOf ("-"));
			selectedLastOrderID = selectedOrderID.substring(selectedOrderID.indexOf ("-")+1, selectedOrderID.length);

			updateTableCarrierDashboard();
		}
	})

	var oLabelLineWorkCenters = new sap.ui.commons.Label({
		id : 'L-LineWorkCenters',
		visible : true,
		text : 'WORKCENTER OPERATIONS' });

	var oDropdownBoxLineWorkCenters= new sap.ui.commons.DropdownBox({
		id : "LineWorkCenters",
		tooltip : 'Line Work Centers',
		editable : true,
		width : '250px',
		change: function(oEvent){
			selectedWorkcenterID = oDropdownBoxLineWorkCenters.getSelectedKey();
			//alert(selectedLastOrderID)
			updateTableCarrierDashboard();
		}
	})

	oMatrixP.createRow( oLabelDashboardCarrierLines,oDropdownBoxDashboardCarrierLines,oLabelDashboardOrders,oDropdownBoxDashboardOrders,oLabelLineWorkCenters, oDropdownBoxLineWorkCenters );

	// ****************************************************************************************************************************************************

	function updateCarrierLinesList() {
		var timestamp = new Date().getTime();
		var Param1 = selectedPlantID;
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		//alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_CarrierLinesList&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonCarrierLinesList);
		function parseJsonCarrierLinesList(jsondata){
			oDropdownBoxDashboardCarrierLines.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				// alert(jsondata[i]['unitDescr'] + '   ' + jsondata[i]['recordID']);
				item_id = jsondata[i]['recordID'];
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['lineName'];
				oItem = new sap.ui.core.ListItem("line_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxDashboardCarrierLines.addItem(oItem);
			}
			selectedLineID = oDropdownBoxDashboardCarrierLines.getSelectedKey();
			//createTableCarrierDashboard();
			updateDashboardOrdersList();
			updateLineWorkCentersList();
		}
	}

	// **************************************

	function updateDashboardOrdersList() {
		var Param1 = selectedPlantID;
		var Param2 = selectedLineID;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2);
		//	alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_DashboardOrdersListAll&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxDashboardOrders.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = "order_" +  jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				item_key = jsondata[i]['orderRecordID'];
				item_text = jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				oItem = new sap.ui.core.ListItem(item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxDashboardOrders.addItem(oItem);
			}
			selectedOrderID = oDropdownBoxDashboardOrders.getSelectedItemId();
			selectedFirstOrderID =  selectedOrderID.substring(selectedOrderID.indexOf ("_")+1,selectedOrderID.indexOf ("-"));
			selectedLastOrderID = selectedOrderID.substring(selectedOrderID.indexOf ("-")+1, selectedOrderID.length);

			selectedOrderRecordID= oDropdownBoxDashboardOrders.getSelectedKey();
			// alert(selectedOrderRecordID);

			//updateLineWorkCentersList();
			if (isMainTableCreated ==0){
				createTableCarrierDashboard();
			}else{
				updateTableCarrierDashboard();
			}

		}
	}

	// ****************************************************************************************************************************************************

	function updateLineWorkCentersList() {
		var timestamp = new Date().getTime();
		var Param1 = selectedLineID;
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		//alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_LineWorkCentersListAll&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxLineWorkCenters.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				// alert(jsondata[i]['unitDescr'] + '   ' + jsondata[i]['recordID']);
				item_id = jsondata[i]['recordID'];
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['unitDescr'];
				oItem = new sap.ui.core.ListItem("workcenter_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxLineWorkCenters.addItem(oItem);
			}
			selectedWorkcenterID = oDropdownBoxLineWorkCenters.getSelectedKey();
			//createTableCarrierDashboard();
		}
	}


// ****************************************************************************************************************************************************

	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixT',
		layoutFixed : true,
		width: '1080px',
		columns : 3,
		widths : ['360px', '360px', '360px'] });

// ****************************************************************************************************************************************************

	function createTableCarrierDashboard() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
	         	var Param1 = selectedFirstOrderID;
		var Param2 = selectedLastOrderID;
		var Param3 =  selectedWorkcenterID ;	
		var Param4 =  selectedOrderRecordID ;		
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2) +"&Param.3="+encodeURIComponent(Param3) +"&Param.4="+encodeURIComponent(Param4) ;  
	// alert( "Create " + paramStr);		
 		oModelCD.loadData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_Production&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		createColumnsTableCarrierDashboard();
		oTableCD.setModel(oModelCD);
		oTableCD.bindRows("/Rowset/Row");
		isMainTableCreated = 1;
	}

	// ********************************************************************

	function updateTableCarrierDashboard() { 
		oTableCD.clearSelection();
		var timestamp = new Date().getTime();
 	  	var Param1 = selectedFirstOrderID;
		var Param2 = selectedLastOrderID;
		var Param3 =  selectedWorkcenterID ;	
		var Param4 =  selectedOrderRecordID ;	
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2) +"&Param.3="+encodeURIComponent(Param3) +"&Param.4="+encodeURIComponent(Param4);  
		// alert("Update " + paramStr);		
 		oModelCD.loadData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_Production&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTableCD.setModel(oModelCD);
		oTableCD.bindRows("/Rowset/Row");
	}

	// *******************************************************************************

	function createColumnsTableCarrierDashboard() {
		//Define the columns and the control templates to be used
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Serial #"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "serialNumber"),
			sortProperty: "serialNumber",
			filterProperty: "serialNumber",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Yield"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "yieldConfirmed"),
			sortProperty: "yieldConfirmed",
			filterProperty: "yieldConfirmed",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Reject"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scrapConfirmed"),
			sortProperty: "scrapConfirmed",
			filterProperty: "scrapConfirmed",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Reason"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scrapReasonCode"),
			sortProperty: "scrapReasonCode",
			filterProperty: "scrapReasonCode",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Time"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty: "CreatedOn",
			filterProperty: "CreatedOn",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Confirmed"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "confirmationNumber"),
			sortProperty: "confirmationNumber",
			filterProperty: "confirmationNumber",
			width: "110px"
		}));
		oTableCD.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Status"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "confirmationProccessed"),
			sortProperty: "confirmationProccessed",
			filterProperty: "confirmationProccessed",
			width: "110px"
		}));
	}

	// *****************************************************************************************

	//Create an instance of the table control
	var oTableCD = new sap.ui.table.Table({
		visibleRowCount: nrRows,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1080px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});

	// ******************************************************************************************************
	oTableCD.attachRowSelectionChange(function(oEvent) {
		// Retrieve the selected row
		var selIndex = oTableCD.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex  >= 0) {
			oButtonNew.setEnabled(false); 
			oButtonEdit.setEnabled(true); 
			oButtonView.setEnabled(true); 
			oButtonDelete.setEnabled(true); 
			// Retrieve the selected row
			var selectedRow = oTableCD.getRows()[selIndex];
			// sap.ui.commons.MessageBox.alert(selectedRow);
			var selectedRowContext = oEvent.getParameter("rowContext");

			selectedRowID = oModelCD.getProperty("recordID", selectedRowContext);   		
			selectedSerialNumber  = oModelCD.getProperty("serialNumber", selectedRowContext);   								
			selectedYieldConfirmed  = oModelCD.getProperty("yieldConfirmed", selectedRowContext);   		
			selectedScrapConfirmed  = oModelCD.getProperty("scrapConfirmed", selectedRowContext); 					
			selectedScrapReasonCode  = oModelCD.getProperty("scrapReasonCode", selectedRowContext);   			
			selectedConfirmationNumber  = oModelCD.getProperty("confirmationNumber", selectedRowContext);   
			selectedConfirmationProccessed  = oModelCD.getProperty("confirmationProccessed", selectedRowContext);   
			selectedNotes  = oModelCD.getProperty("operatorsNotes", selectedRowContext);   	
			selectedOrderRecordID = oModelCD.getProperty("orderRecordID", selectedRowContext);   			
	
 	 	} else {
			oButtonNew.setEnabled(true); 
			oButtonEdit.setEnabled(false); 
			oButtonView.setEnabled(false); 			
			oButtonDelete.setEnabled(false); 

			selectedRowID= 0;
			selectedSerialNumber  ="";								
			selectedYieldConfirmed  = 0;   		
			selectedScrapConfirmed  = 0; 					
			selectedScrapReasonCode  ="";	
			selectedConfirmationNumber  = "";   
			selectedConfirmationProccessed  = "";
			selectedNotes  = "";   	
			//selectedOrderRecordID = 50;

		}
	});

	var oModelCD =  new sap.ui.model.xml.XMLModel();

	var oCellCD = new sap.ui.commons.layout.MatrixLayoutCell({	colSpan: 3 });
	oCellCD.addContent(oTableCD);

	//Bring the table onto the UI 
	oMatrixT.createRow(oCellCD);

// **************************	main buttons matrix**************************************************************************************************************************

	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixB',
		layoutFixed : true,
		width: '1080px',
		columns : 6,
		widths : ['140px','200px','200px','200px','200px','140px'] 
	});

// ****************************************************************************************************************************************************
	
	var oButtonNew = new sap.ui.commons.Button({
		id : 'B-New',
		tooltip : "Add New Order",
		text : 'Add',
		enabled: true
	});
	oButtonNew.attachPress(doNew);

	var oButtonView = new sap.ui.commons.Button({
		id : 'B-View',
		tooltip : "View Order",
		text : 'View',
		enabled: false
	});
	oButtonView.attachPress(doView);

	var oButtonEdit = new sap.ui.commons.Button({
		id : 'B-Edit',
		tooltip : "Edit",
		text : 'Edit',
		enabled: false
	});
	oButtonEdit.attachPress(doEdit);

	var oButtonDelete = new sap.ui.commons.Button({
		id : 'B-Delete',
		tooltip : "Delete",
		text : 'Delete',
		enabled: false
	});
	oButtonDelete.attachPress(doDelete);

	// ********************************

	function doDelete (){
	 	// alert(selectedRowID);
		if (  selectedRowID > 0){
			var Param1 = selectedRowID ;
		   	var oReqData;
      			if (window.XMLHttpRequest) {
     	     			oReqData = new XMLHttpRequest();
      			}
			if (oReqData != null) {
				var timestamp = new Date().getTime();
				var paramStr = "Param.1="+encodeURIComponent(Param1)
				//alert(paramStr);
				var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/delete_Production&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
				// alert(queryStr);
				oReqData.open("GET", queryStr, true); 
				oReqData.onreadystatechange = function() {
					if (oReqData.readyState == 4) 
						if (oReqData.status == 200) {
							// Successful -- rebuild the screen
							updateTableCarrierDashboard();	
						} else {
							// Not Successful -- alert the user
							alert("Error: " + oReqData.statusText);
						}
				}
				oReqData.send();
       			} else {
          				window.alert("Error creating XmlHttpRequest object.");
       			}
		}
	};

	oMatrixB.createRow('',oButtonNew,oButtonView,oButtonEdit,oButtonDelete,'');

// ********************************	Create NEW Product Overlay	**********************************************************************************

	var oMatrixNP = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixNP',
		layoutFixed : true,
		width: '660px',
		columns : 2,
		widths : ['330px','330px']
	});

// ****************************************************************************************************************************************************

	var oTitleNP = new sap.ui.commons.Label({
		id : 'L-NewProduct',
		text : 'ADD PRODUCTION'
	});

	oCell_NPRow1 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 3,hAlign:'Center',separation:'Large'});
	oCell_NPRow1 .addContent(oTitleNP);
	oMatrixNP.createRow( oCell_NPRow1 );
	
	var oLabelNPOrderID = new sap.ui.commons.Label({
		id : 'L-NPOrderID',
		visible : true,
		text : 'ORDER ID' });

	var oLabelNPWorkcenterID = new sap.ui.commons.Label({
		id : 'L-NPWorkcenterID',
		visible : true,
		text : 'WORK CENTER ID' });

	oMatrixNP.createRow( oLabelNPOrderID,oLabelNPWorkcenterID);

	var oDropdownBoxDashboardOrdersNP = new sap.ui.commons.DropdownBox({
		id : "DashboardOrdersNP",
		tooltip : 'Orders',
		editable : true,
		width : '250px',
		change: function(oEvent){
			//
		//	getCurrantSerialNumber() ;
		}
	})
	oDropdownBoxDashboardOrdersNP.setTextAlign(sap.ui.core.TextAlign.Center);	

	var oDropdownBoxLineWorkCentersNP= new sap.ui.commons.DropdownBox({
		id : "LineWorkCentersNP",
		tooltip : 'Line Work Centers',
		editable : true,
		width : '250px',
		change: function(oEvent){
			//
		}
	})
	oDropdownBoxLineWorkCentersNP.setTextAlign(sap.ui.core.TextAlign.Center);	

	oMatrixNP.createRow( oDropdownBoxDashboardOrdersNP,oDropdownBoxLineWorkCentersNP)

	var oLabelNPSerialID= new sap.ui.commons.Label({
		id : 'L-NPSerialID',
		visible : true,
		text : 'SERIAL #' });

	var oLabelNPQty= new sap.ui.commons.Label({
		id : 'L-NPQty',
		visible : true,
		text : 'QUONTITY' });

	oMatrixNP.createRow( oLabelNPSerialID,oLabelNPQty);

	var oTF_NPSerialID = new sap.ui.commons.TextField({
		id : 'TF-NPSerialID',
		tooltip : 'Serial #',
		editable : true,
		visible : true,
		width : '250px' 
	});
	oTF_NPSerialID.setTextAlign(sap.ui.core.TextAlign.Center);	

	var oTF_NPQty = new sap.ui.commons.TextField({
		id : 'TF-NPQty',
		tooltip : 'Quontity',
		editable : true,
		visible : true,
		value: '1',
		width : '250px' 
	});
	oTF_NPQty.setTextAlign(sap.ui.core.TextAlign.Center);	

	oMatrixNP.createRow( oTF_NPSerialID,oTF_NPQty);

	var oLabelNPYieldScrap= new sap.ui.commons.Label({
		id : 'L-NPYieldScrap',
		visible : true,
		text : 'YIELD' });

	var oLabelNPReason= new sap.ui.commons.Label({
		id : 'L-NPReason',
		visible : true,
		text : 'REASON CODE' });

	oMatrixNP.createRow( oLabelNPYieldScrap,oLabelNPReason);

	var oLabelNPRow6Space1= new sap.ui.commons.Label({
		id : 'L-NPRow6Space1',
		visible : true,
		width : '30px' ,
		text : '' });

	var oRBYieldNP = new sap.ui.commons.RadioButton({
		id:'YieldNP',
		text : 'YES',
		tooltip : 'Select for Yield',
		groupName : 'Group1',
		selected : true,
		select : function() {
			oCore.byId('TF-NPReason').setValue('');
			oTF_NPReason.setEditable(false); 
		}
	});

	var oLabelNPRow6Space2= new sap.ui.commons.Label({
		id : 'L-NPRow6Space2',
		visible : true,
		width : '50px' ,
		text : '' });

	var oRBScrapNP = new sap.ui.commons.RadioButton({
		id:'ScrapNP',
		text : 'NO',
		tooltip : 'Select for Scrap',
		groupName : 'Group1',
		selected : false,
		select : function() {
			oTF_NPReason.setEditable(true); 
		}
	});

	oCell_NPRow6 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 1,hAlign:'Left',separation:'Large'});
	oCell_NPRow6 .addContent(oLabelNPRow6Space1);
	oCell_NPRow6 .addContent(oRBYieldNP);
	oCell_NPRow6 .addContent(oLabelNPRow6Space2);
	oCell_NPRow6 .addContent(oRBScrapNP);

	var oTF_NPReason = new sap.ui.commons.TextField({
		id : 'TF-NPReason',
		tooltip : 'Reason',
		editable : false,
		visible : true,
		width : '250px' 
	});
	oTF_NPReason.setTextAlign(sap.ui.core.TextAlign.Center);

	oMatrixNP.createRow(  oCell_NPRow6, oTF_NPReason );
	
 	var oLabelNPNotes= new sap.ui.commons.Label({
		id : 'L-NPNotes',
		visible : true,
		text : 'NOTES' });

	oCell_NPRow7 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Left'});
	oCell_NPRow7 .addContent(oLabelNPNotes);

	oMatrixNP.createRow( oCell_NPRow7);

	var oTF_NPNotes = new sap.ui.commons.TextField({
		id : 'TF-NPNotes',
		tooltip : 'Notes',
		editable : true,
		visible : true,
		width : '580px' 
	});
	oTF_NPNotes.setTextAlign(sap.ui.core.TextAlign.Center);

	oCell_NPRow8 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Left'});
	oCell_NPRow8 .addContent(oTF_NPNotes);

	oMatrixNP.createRow( oCell_NPRow8);

	var oLabelNPRow10Space1 = new sap.ui.commons.Label({
		id : 'L-NPRow10Space1',
		height : '150px',
		width : '50px', 
		text : '  ' })

	oMatrixNP.createRow(oLabelNPRow10Space1 );

	var oButtonNPSave = new sap.ui.commons.Button({
		id : 'B-NPSave',
		tooltip : "Save",
		text : 'Save',
		enabled: true
	});
	oButtonNPSave.attachPress(doAddProduct);

	oCell_NPRow11 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Center',separation:'Large'});
	oCell_NPRow11 .addContent(oButtonNPSave);

	oMatrixNP.createRow(oCell_NPRow11 );

	var oOverlayContainerNew = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
		oOverlayContainerNew .setHeight('400px');
		oOverlayContainerNew .setWidth('660px');
		oOverlayContainerNew.addContent(oMatrixNP);

	// ************************************************************************************

	function updateLineWorkCentersListNP() {
		var Param1 = selectedLineID;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		//	alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_LineWorkCentersList&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxLineWorkCentersNP.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = jsondata[i]['recordID'];
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['unitDescr'];
				oItem = new sap.ui.core.ListItem("workcenterNP_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxLineWorkCentersNP.addItem(oItem);
			}
		}
	}

	//*****************************************************************

	function updateDashboardOrdersListNP() {
		var Param1 = selectedPlantID;
		var Param2 = selectedLineID;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2);
		//alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_DashboardOrdersList&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxDashboardOrdersNP.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				// alert(jsondata[i]['PLANT'] + '   ' + jsondata[i]['DESC']);
				item_id = "orderNP_" +  jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				item_key = jsondata[i]['orderRecordID'];
				item_text = jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				oItem = new sap.ui.core.ListItem(item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxDashboardOrdersNP.addItem(oItem);
			}
			oDropdownBoxDashboardOrdersNP.setSelectedKey(selectedOrderRecordID);
		}
	}

		//*****************************************************************

	function getCurrantSerialNumber() {
		var order_id =  oDropdownBoxDashboardOrdersNP.getSelectedItemId();
		//alert(order_id);
		var	first_order_id =  selectedOrderID.substring(selectedOrderID.indexOf ("_")+1,selectedOrderID.indexOf ("-"));
		//alert(first_order_id);
		var last_order_id = selectedOrderID.substring(selectedOrderID.indexOf ("-")+1, selectedOrderID.length);
		//alert(last_order_id);
		var Param1 = first_order_id;
		var Param2 = last_order_id;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2);
	//	alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_NewSerialNumberForOrder&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonNewSerialNumber);
		function parseJsonNewSerialNumber(jsondata){
			//alert(jsondata)
			for (var i=0; i<jsondata.length; i++){
				var new_serial_number = jsondata[i]['new_serial_number'];
				//alert(new_serial_number );
				oCore.byId( 'TF-NPSerialID').setValue(new_serial_number);
			}
		}
	}

	//*****************************************************************

	function resetAdd() {
		oCore.byId( 'TF-NPSerialID').setValue('');
		oCore.byId('TF-NPQty').setValue('1');
		oCore.byId('YieldNP').setSelected(true);
		oCore.byId('ScrapNP').setSelected(false);
		 oCore.byId('TF-NPReason').setValue('');
		oCore.byId('TF-NPNotes').setValue('');
	}


	//*****************************************************************

	function doNew() {
		if(!oOverlayContainerNew.isOpen()){
			oOverlayContainerNew.open();
			updateLineWorkCentersListNP();
			updateDashboardOrdersListNP();
			
			// getCurrantSerialNumber() ;
		}
	}

	// ************************************************************************************

	function doAddProduct() {
		// retrieve values
		 var order_record_id = oDropdownBoxDashboardOrdersNP.getSelectedKey();
		var order_id =  oDropdownBoxDashboardOrdersNP.getSelectedItemId();
		var first_order_id =  selectedOrderID.substring(selectedOrderID.indexOf ("_")+1,selectedOrderID.indexOf ("-"));
		var last_order_id = selectedOrderID.substring(selectedOrderID.indexOf ("-")+1, selectedOrderID.length);

		var workcenter_id = oDropdownBoxLineWorkCentersNP.getSelectedKey();

		//alert(workcenter_id);

		var serial_number  = oCore.byId('TF-NPSerialID').getValue();								
		var quantity = oCore.byId('TF-NPQty').getValue();
		var isScrap = 1
		var isYield =  oCore.byId('YieldNP').getSelected();
		if( isYield) { isScrap = 0}
		var reason_code =  oCore.byId('TF-NPReason').getValue();
		var notes = oCore.byId('TF-NPNotes').getValue();
		// check the values : TODO SQL escape
		if(serial_number=="") {
			alert("Please Input serial #..");
			oCore.byId("TF-NPSerialID").focus();
		}else {
			if(quantity=="") {
				alert("Please Input quontity");
				oCore.byId("TF-NPQty").focus();
			}else {
				// all good. Try to write them ..
				var Param1 = first_order_id
				var Param2 = last_order_id;
				var Param3 = workcenter_id;
				var Param4 = serial_number;
				var Param5 = quantity;
				var Param6 =  isScrap ;
				var Param7 = reason_code ;
				var Param8 = notes ; 
				var Param9 = user_name ; 
				var Param10 = order_record_id ;
				var Param11 = selectedLineID;

			
				var oReqData;
      				if (window.XMLHttpRequest) {
     	     				oReqData = new XMLHttpRequest();
      				}
				if (oReqData != null) {
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6)+"&Param.7="+encodeURIComponent(Param7)+"&Param.8="+encodeURIComponent(Param8)+"&Param.9="+encodeURIComponent(Param9)+"&Param.10="+encodeURIComponent(Param10)+"&Param.11="+encodeURIComponent(Param11);				
				//	alert (paramStr);	
					var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/add_Production&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
					oReqData.open("GET", queryStr, true); 
					oReqData.onreadystatechange = function() {
						if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
								// Successful -- rebuild the screen
								updateTableCarrierDashboard();	
								oOverlayContainerNew.close();	
								resetAdd();
							} else {
								// Not Successful -- alert the user
								alert("Error: " + oReqData.statusText);
							}
					}
					oReqData.send();
       				} else {
          					window.alert("Error creating XmlHttpRequest object.");
       				}
			}
		}
	}

// ********************************	Create EDIT Product Overlay	**********************************************************************************

	var oMatrixEP = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEP',
		layoutFixed : true,
		width: '660px',
		columns : 2,
		widths : ['330px','330px']
	});

// ****************************************************************************************************************************************************

	var oTitleEP = new sap.ui.commons.Label({
		id : 'L-EditProduct',
		text : 'EDIT PRODUCTION'
	});

	oCell_EPRow1 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 3,hAlign:'Center',separation:'Large'});
	oCell_EPRow1 .addContent(oTitleEP);
	oMatrixEP.createRow( oCell_EPRow1 );
	
	var oLabelEPOrderID = new sap.ui.commons.Label({
		id : 'L-EPOrderID',
		visible : true,
		text : 'ORDER ID' });

	var oLabelEPWorkcenterID = new sap.ui.commons.Label({
		id : 'L-EPWorkcenterID',
		visible : true,
		text : 'WORK CENTER ID' });

	oMatrixEP.createRow( oLabelEPOrderID,oLabelEPWorkcenterID);

	var oDropdownBoxDashboardOrdersEP = new sap.ui.commons.DropdownBox({
		id : "DashboardOrdersEP",
		tooltip : 'Orders',
		editable : true,
		width : '250px',
		change: function(oEvent){
			//
		}
	})
	oDropdownBoxDashboardOrdersEP.setTextAlign(sap.ui.core.TextAlign.Center);	

	var oDropdownBoxLineWorkCentersEP= new sap.ui.commons.DropdownBox({
		id : "LineWorkCentersEP",
		tooltip : 'Line Work Centers',
		editable : true,
		width : '250px',
		change: function(oEvent){
			//
		}
	})
	oDropdownBoxLineWorkCentersEP.setTextAlign(sap.ui.core.TextAlign.Center);	

	oMatrixEP.createRow( oDropdownBoxDashboardOrdersEP,oDropdownBoxLineWorkCentersEP)

	var oLabelEPSerialID= new sap.ui.commons.Label({
		id : 'L-EPSerialID',
		visible : true,
		text : 'SERIAL #' });

	var oLabelEPQty= new sap.ui.commons.Label({
		id : 'L-EPQty',
		visible : true,
		text : 'QUONTITY' });

	oMatrixEP.createRow( oLabelEPSerialID,oLabelEPQty);

	var oTF_EPSerialID = new sap.ui.commons.TextField({
		id : 'TF-EPSerialID',
		tooltip : 'Serial #',
		editable : true,
		visible : true,
		width : '250px' 
	});
	oTF_EPSerialID.setTextAlign(sap.ui.core.TextAlign.Center);	

	var oTF_EPQty = new sap.ui.commons.TextField({
		id : 'TF-EPQty',
		tooltip : 'Quontity',
		editable : true,
		visible : true,
		value: '1',
		width : '250px' 
	});
	oTF_EPQty.setTextAlign(sap.ui.core.TextAlign.Center);	

	oMatrixEP.createRow( oTF_EPSerialID,oTF_EPQty);

	var oLabelEPYieldScrap= new sap.ui.commons.Label({
		id : 'L-EPYieldScrap',
		visible : true,
		text : 'YIELD' });

	var oLabelEPReason= new sap.ui.commons.Label({
		id : 'L-EPReason',
		visible : true,
		text : 'REASON CODE' });

	oMatrixEP.createRow( oLabelEPYieldScrap,oLabelEPReason);

	var oLabelEPRow6Space1= new sap.ui.commons.Label({
		id : 'L-EPRow6Space1',
		visible : true,
		width : '30px' ,
		text : '' });


	var oRBYieldEP = new sap.ui.commons.RadioButton({
		id:'YieldEP',
		text : 'YES',
		tooltip : 'Select for Yield',
		groupName : 'Group1',
		selected : true,
		select : function() {
			oCore.byId('TF-EPReason').setValue('');
			oTF_EPReason.setEditable(false); 
		}
	});

	var oLabelEPRow6Space2= new sap.ui.commons.Label({
		id : 'L-EPRow6Space2',
		visible : true,
		width : '50px' ,
		text : '' });

	var oRBScrapEP = new sap.ui.commons.RadioButton({
		id:'ScrapEP',
		text : 'NO',
		tooltip : 'Select for Scrap',
		groupName : 'Group1',
		selected : false,
		select : function() {
			oTF_EPReason.setEditable(true); 
		}
	});

	oCell_EPRow6 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 1,hAlign:'Left',separation:'Large'});
	oCell_EPRow6 .addContent(oLabelEPRow6Space1);
	oCell_EPRow6 .addContent(oRBYieldEP);
	oCell_EPRow6 .addContent(oLabelEPRow6Space2);
	oCell_EPRow6 .addContent(oRBScrapEP);

	var oTF_EPReason = new sap.ui.commons.TextField({
		id : 'TF-EPReason',
		tooltip : 'Reason',
		editable : false,
		visible : true,
		width : '250px' 
	});
	oTF_EPReason.setTextAlign(sap.ui.core.TextAlign.Center);

	oMatrixEP.createRow(  oCell_EPRow6, oTF_EPReason );

	
 	var oLabelEPNotes= new sap.ui.commons.Label({
		id : 'L-EPNotes',
		visible : true,
		text : 'NOTES' });

	oCell_EPRow7 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Left'});
	oCell_EPRow7 .addContent(oLabelEPNotes);

	oMatrixEP.createRow( oCell_EPRow7);

	var oTF_EPNotes = new sap.ui.commons.TextField({
		id : 'TF-EPNotes',
		tooltip : 'Notes',
		editable : true,
		visible : true,
		width : '580px' 
	});
	oTF_EPNotes.setTextAlign(sap.ui.core.TextAlign.Center);

	oCell_EPRow8 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Left'});
	oCell_EPRow8 .addContent(oTF_EPNotes);

	oMatrixEP.createRow( oCell_EPRow8);

	var oLabelEPRow10Space1 = new sap.ui.commons.Label({
		id : 'L-EPRow10Space1',
		height : '150px',
		width : '50px', 
		text : '  ' })

	oMatrixEP.createRow(oLabelEPRow10Space1 );

	var oButtonEPSave = new sap.ui.commons.Button({
		id : 'B-EPSave',
		tooltip : "Save",
		text : 'Save',
		enabled: true
	});
	oButtonEPSave.attachPress(doEditProduct);

	oCell_EPRow11 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Center',separation:'Large'});
	oCell_EPRow11 .addContent(oButtonEPSave);


	oMatrixEP.createRow(oCell_EPRow11 );

	var oOverlayContainerEdit = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
		oOverlayContainerEdit .setHeight('400px');
		oOverlayContainerEdit .setWidth('660px');
		oOverlayContainerEdit.addContent(oMatrixEP);

	// *******************************************************************************************

	function updateLineWorkCentersListEP() {
		var Param1 = selectedLineID;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		//	alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_LineWorkCentersList&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxLineWorkCentersEP.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = jsondata[i]['recordID'];
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['unitDescr'];
				oItem = new sap.ui.core.ListItem("workcenterEP_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxLineWorkCentersEP.addItem(oItem);
			}
		}
	}

	//*****************************************************************

	function updateDashboardOrdersListEP() {
		var Param1 = selectedPlantID;
		var Param2 = selectedLineID;
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2);
		//	alert(paramStr);
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_DashboardOrdersList&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonLineWorkCentersList);
		function parseJsonLineWorkCentersList(jsondata){
			oDropdownBoxDashboardOrdersEP.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = "orderEP_" +  jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				item_key = jsondata[i]['orderRecordID'];
				item_text = jsondata[i]['orderFirstID'] + "-" +jsondata[i]['orderLastID'];
				oItem = new sap.ui.core.ListItem(item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxDashboardOrdersEP.addItem(oItem);
			}
		}
		//oDropdownBoxDashboardOrdersEP.setSelectedKey(selectedOrderRecordID);
	}

	//*****************************************************************

	function resetEdit() {
		oCore.byId( 'TF-EPSerialID').setValue('');
		oCore.byId('TF-EPQty').setValue('1');
		oCore.byId('YieldEP').setSelected(true);
		oCore.byId('ScrapEP').setSelected(false);
		 oCore.byId('TF-EPReason').setValue('');
		oCore.byId('TF-EPNotes').setValue('');
	}


	//*****************************************************************

	function doEdit() {
		if(!oOverlayContainerEdit.isOpen()){
			oOverlayContainerEdit.open();
			updateLineWorkCentersListEP();
			updateDashboardOrdersListEP();
			setEditData();
		}
	}

	// *******************************************************
/*
	var selectedRowID = 0;
	var selectedSerialNumber  ='';		
	var selectedYieldConfirmed = 0;
	var selectedScrapConfirmed = 0;
	var selectedScrapReasonCode = '';
	var selectedConfirmationNumber  = '';
	var selectedConfirmationProccessed = '';
	var selectedNotes = '';
	var selectedOrderRecordID = 0;
*/

	function setEditData(){
		oCore.byId('TF-EPSerialID').setValue(selectedSerialNumber);			
		var this_value  = 0;
		// alert(selectedScrapConfirmed);	
		if (selectedScrapConfirmed == "0"){
			this_value = selectedYieldConfirmed ;
			oCore.byId('YieldEP').setSelected(true);
			oCore.byId('ScrapEP').setSelected(false)
		} else {
			this_value = selectedScrapConfirmed;
			oCore.byId('YieldEP').setSelected(false);
			oCore.byId('ScrapEP').setSelected(true)
		}
		oCore.byId('TF-EPQty').setValue(this_value);
		oCore.byId('TF-EPReason').setValue(selectedScrapReasonCode);
		//oCore.byId('TF-EPNotes').setValue(selectedNotes);
	//	alert(selectedOrderRecordID);
		oDropdownBoxDashboardOrdersEP.setSelectedKey(selectedOrderRecordID);
		oDropdownBoxLineWorkCentersEP.setSelectedKey(selectedWorkcenterID);
		// set radio button
	}

	// *******************************************************

	function doEditProduct() {

	//	var order_id = oDropdownBoxDashboardOrdersEP.getSelectedKey();
		var order_id =  oDropdownBoxDashboardOrdersEP.getSelectedItemId();
		var	first_order_id =  selectedOrderID.substring(selectedOrderID.indexOf ("_")+1,selectedOrderID.indexOf ("-"));
		var last_order_id = selectedOrderID.substring(selectedOrderID.indexOf ("-")+1, selectedOrderID.length);

		var updare_order_row_id = oDropdownBoxDashboardOrdersEP.getSelectedKey();

		var workcenter_id = oDropdownBoxLineWorkCentersEP.getSelectedKey();
		var serial_number  = oCore.byId('TF-EPSerialID').getValue();							
		var quantity = oCore.byId('TF-EPQty').getValue();
		var isScrap = 1;
		var isYield =  oCore.byId('YieldEP').getSelected();
		if( isYield) { isScrap = 0}
		var reason_code =  oCore.byId('TF-EPReason').getValue();
		var notes = oCore.byId('TF-EPNotes').getValue();
	//	var id = updare_order_row_id;
		// check the values : TODO SQL escape
		if(serial_number=="") {
			alert("Please Input serial #..");
			oCore.byId("TF-EPSerialID").focus();
		}else {
			if(quantity=="") {
				alert("Please Input quontity");
				oCore.byId("TF-EPQty").focus();
			}else {
				// all good. Try to write them ..
				var Param1 = first_order_id;
				var Param2 = last_order_id;
				var Param3 = workcenter_id;
				var Param4 = serial_number;
				var Param5 = quantity;
				var Param6 =  isScrap;
				var Param7 = reason_code ;
				var Param8 = notes ; 
				var Param9 = user_name ; 
				var Param10 = selectedRowID;
				var Param11 = selectedOrderRecordID ;
				var Param12 = selectedLineID ;
			
				var oReqData;
      				if (window.XMLHttpRequest) {
     	     				oReqData = new XMLHttpRequest();
      				}
				if (oReqData != null) {
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6)+"&Param.7="+encodeURIComponent(Param7)+"&Param.8="+encodeURIComponent(Param8)+"&Param.9="+encodeURIComponent(Param9)+"&Param.10="+encodeURIComponent(Param10)+"&Param.11="+encodeURIComponent(Param11)+"&Param.12="+encodeURIComponent(Param12)	;				
					// alert (paramStr);	
					var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/edit_Production&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
					oReqData.open("GET", queryStr, true); 
					oReqData.onreadystatechange = function() {
						if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
							// Successful -- rebuild the screen
								updateTableCarrierDashboard();	
								oOverlayContainerEdit.close();	
								resetEdit();
							} else {
								// Not Successful -- alert the user
								alert("Error: " + oReqData.statusText);
							}
					}
					oReqData.send();
       				} else {
          					window.alert("Error creating XmlHttpRequest object.");
       				}
			}
		}
	}

// ********************************	Create View Product Overlay	**********************************************************************************

	var oMatrixVP = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixVP',
		layoutFixed : true,
		width: '1010px',
		columns : 2,
		widths : ['505px','505px']
	});

// ****************************************************************************************************************************************************

	var oTitleVP = new sap.ui.commons.Label({
		id : 'L-ViewProduct',
		text : 'VIEW PRODUCTION'
	});

	oCell_VPRow1 = new sap.ui.commons.layout.MatrixLayoutCell({colSpan : 2,hAlign:'Center',separation:'Large'});
	oCell_VPRow1 .addContent(oTitleVP);
	oMatrixVP.createRow( oCell_VPRow1 );

	var tableCreatedCV =  false ;


	function createTableCarrierView() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
	         	var Param1 = selectedSerialNumber	
		var paramStr = "Param.1="+encodeURIComponent(Param1)  ;  
		//	alert( "Create " + paramStr);		
 		oModelCV.loadData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_DataForSerialNumber&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		if (!tableCreatedCV) createColumnsTableCarrierView();
		oTableCV.setModel(oModelCV);
		oTableCV.bindRows("/Rowset/Row");
		tableCreatedCV =  true ;
	}

	// *******************************************************************************

	function createColumnsTableCarrierView() {
		//Define the columns and the control templates to be used
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Stations"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "unitDescr"),
			sortProperty: "unitDescr",
			filterProperty: "unitDescr",
			width: "200px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Serial #"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "serialNumber"),
			sortProperty: "serialNumber",
			filterProperty: "serialNumber",
			width: "80px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Yield"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "yieldConfirmed"),
			sortProperty: "yieldConfirmed",
			filterProperty: "yieldConfirmed",
			width: "60px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Scrap"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scrapConfirmed"),
			sortProperty: "scrapConfirmed",
			filterProperty: "scrapConfirmed",
			width: "60px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Reason"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scrapReasonCode"),
			sortProperty: "scrapReasonCode",
			filterProperty: "scrapReasonCode",
			width: "80px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Time"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty: "CreatedOn",
			filterProperty: "CreatedOn",
			width: "160px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Confirmed"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "confirmationNumber"),
			sortProperty: "confirmationNumber",
			filterProperty: "confirmationNumber",
			width: "160px"
		}));
		oTableCV.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "Status"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "confirmationProccessed"),
			sortProperty: "confirmationProccessed",
			filterProperty: "confirmationProccessed",
			width: "70px"
		}));
	
	}

	// *****************************************************************************************

	//Create an instance of the table control
	var oTableCV = new sap.ui.table.Table({
		visibleRowCount: nrRowsView,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1000px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});

	// ******************************************************************************************************
	oTableCV.attachRowSelectionChange(function(oEvent) {
		// Retrieve the selected row
		var selIndex = oTableCV.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex  >= 0) {
			// Retrieve the selected row
			var selectedRow = oTableCV.getRows()[selIndex];
			// sap.ui.commons.MessageBox.alert(selectedRow);
			var selectedRowContext = oEvent.getParameter("rowContext");

		
 	 	} else {
			
		}
	});

	var oModelCV =  new sap.ui.model.xml.XMLModel();

	var oCellCV = new sap.ui.commons.layout.MatrixLayoutCell({	colSpan: 2 });
	oCellCV.addContent(oTableCV);

	//Bring the table onto the UI 
	oMatrixVP.createRow(oCellCV);
	
	var oOverlayContainerView= new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
		oOverlayContainerView .setHeight('360px');
		oOverlayContainerView .setWidth('1030px');
		oOverlayContainerView.addContent(oMatrixVP);


	//*****************************************************************

	function resetView() {
 
	}

	function doView() {
		if(!oOverlayContainerView.isOpen()){
			createTableCarrierView();
			oOverlayContainerView.open();
	
		}
	}

	// *******************************************************

	function setViewData(){
	
	}

	// *******************************************************

	function doViewProduct() {
	
	}

	</script>

</head>

<body onLoad="roleSecurity()">

<input id="user_roles" type="hidden" value="{IllumLoginRoles}" style="display:block;width:1000px;" readonly />
<input id="user_role" type="hidden" value="{ROLE}" style="display:block;width:1000px;" readonly />
<input id="user_name" type="hidden" value="{IllumLoginName}" style="display: block;width:1000px;" readonly />
<input id="user_height" type="hidden" value="{HEIGHT}" style="display: block;width:100px;" readonly />
<input id="user_address" type="hidden" value="{Machine}" style="display:block;width:1000px;" readonly />

<div id="app_header" >
	<div id="app_title">CARRIER DASHBOARD</div>
	<div id="app_menu"></div>
	<div id="page_title">DEFAULT SCREEN</div>
</div>

<div id="mesm_content" ></div>

</body>
</html>