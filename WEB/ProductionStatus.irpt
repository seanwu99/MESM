<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>CT MODULE</title>
	<style>
	body{
		//background-image: url("Common/img/logo.png");
		background-size: 180px;
		background-repeat: no-repeat;
    		background-attachment: fixed;
    		background-position: right 40px top 30px;
		font-family: Arial;
	}
	#app_header {
 		padding: 10px;
 		padding-left: 40px;
 		padding-top: 15px;
 		padding-bottom: 0px;
		height:80px;
		width:400px;
		text-align: center;
	}
	#app_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		color: #007dc0;
		margin-bottom; 20px;
	}
	#app_menu {
		width:400px;
		text-align: center;
		font-family: Arial,Helvetica,sans-serif;
	}
	#page_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:28px;
		color: #cfcfcf;
	}
	#mesm_content {
 		padding: 30px;
 		padding-top: 40px;
	}
	#__button0, #__button1, #__button2 {
		margin-top:10px;
		margin-left:5px;
		margin-right:5px;
	}
	#MatrixT, #MatrixB, #MatrixP {
		margin:10px auto;
	}
	#MatrixMail,#MatrixMailF{
		margin:10px auto;
	}
 	#__cell4 {
		padding-left:35px;
	} 
/*
 	#__cell9 {
		text-align:right;
	} 
 	#__cell11, #__cell12,#__cell13, #__cell14, #__cell15, #__cell16, #__cell17 {
		text-align:center;
	} 
	#__cell18, #__cell19, #__cell20, #__cell22, #__cell25 {
		text-align:center;
	}
	#__cell21 {
		text-align:right;
	}
	#__cell23 {
		text-align:left;
	}
*/
	#B-PrintList, #B-Email {
		width:100px;
		height:35px;
		font-size:14px;
	}
	#L-MailInfo{
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:27px;
		height:35px;
		color: #007dc0;
	}
/*
	#__cell27, #__cell56,#__cell62, #__cell91{
		text-align:center;
	}
*/
	#B-SendMail {
		margin-top:10px;
		width:100px;
		height:35px;
		font-size:14px;
	}
	</style>
	<link rel="stylesheet" type="text/css" href="Common/js/jquerydatetimepicker/jquery.datetimepicker.css"/>
	<link rel="stylesheet" type="text/css" media="print" href="Common/css/print.css" />
	<script id="sap-ui-bootstrap"
		src="/sapui5/resources/sap-ui-core.js"
		data-sap-ui-theme="sap_goldreflection"
		data-sap-ui-libs="sap.ui.core,sap.ui.commons,sap.ui.table,sap.ui.ux3,sap.m"
		data-sap-ui-language="en" >
	</script>
	<script type="text/javascript" src="Common/js/default.js"></script>
	<script src="Common/js/jquerydatetimepicker/build/jquery.datetimepicker.full.js"></script>

	<script type="text/javascript" id="app-init">
	// ******************************************************************************************************************************************************************
	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	// Initialize screen
	var nrRows = 13;
	var selectedIndex =  -1;
	// ******************************************************************************************************************************************************************
	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var selectedPlant = 0;
	var user_name = "";

	var user = {
    		email : "zarko.klasnja@rtsautomation.com"
	};

	// FILTERS
 	var selectedLine = 0;
 	var selectedFrom = '';
 	var selectedTo = '';

	var initialTime = new Date().getTime();
	var tableCreated = 0;

	// ****************************************************************************************************************************************************
	function roleSecurity() {
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "MESM_" + document.getElementById("user_role").value;
		user_name = document.getElementById("user_name").value;
		if(myRoles.indexOf(role2Access)<0) {
			 window.location.assign("security.irpt");
		  } else {
			var roleString = document.getElementById("user_role").value;
			var roleArray = roleString.split("_");
			level2Access = roleArray[0]; 
				// alert("level : " + level2Access);
			plant2Access =  roleArray[1];
				// alert("plant : " + plant2Access);
			updatePlants(plant2Access);
			document.getElementById("page_title").innerHTML=role2Access;
			// enable homepage
			oCore.byId("item3-0-3").setEnabled(true);
			// show menus
			oMenuButton1.placeAt("app_menu");
			oMenuButton2.placeAt("app_menu");
			oMenuButton3.placeAt("app_menu");
			var role_ADM = "MESM_ADM_"+plant2Access;
			var role_ENG = "MESM_ENG_"+plant2Access;
			var role_SUP = "MESM_SUP_"+plant2Access;
			var role_OPS = "MESM_OPS_"+plant2Access;
			switch(role2Access) {
			case "MESM_ADM_ALL":

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-4-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-4-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-4-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-4-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-5-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-5-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-6-2").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// update screen
					document.getElementById("page_title").innerHTML="ADM ALL PLANTS";
					oMatrixP.placeAt('mesm_content');
					oMatrixT.placeAt('mesm_content');
					oMatrixB.placeAt('mesm_content');
				break;
			case role_ADM:

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-4-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-4-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-4-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-4-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-5-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-5-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-6-2").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// update screen
					document.getElementById("page_title").innerHTML="ADM PLANT "+plant2Access;
					oMatrixP.placeAt('mesm_content');
					oMatrixT.placeAt('mesm_content');
					oMatrixB.placeAt('mesm_content');
				break;
			case "MESM_OPS_ALL":

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS ALL PLANTS";
					oMatrixP.placeAt('mesm_content');
					oMatrixT.placeAt('mesm_content');
					oMatrixB.placeAt('mesm_content');
				break;
			case role_OPS:

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS PLANT "+plant2Access;
					oMatrixP.placeAt('mesm_content');
					oMatrixT.placeAt('mesm_content');
					oMatrixB.placeAt('mesm_content');
				break;
			default:
				alert("MES Module Role Unknown: " + role2Access);
				break;
			}
		  }
	}
	// ******************************************************************************************************************************************************************
	var oMenuButton1 = new sap.ui.commons.MenuButton({text: "Settings", icon: "Common/img/map.png"}); 
	var oMenuButton2 = new sap.ui.commons.MenuButton({ text: "Dashboards", icon: "Common/img/cloud.png"}); 
	var oMenuButton3 = new sap.ui.commons.MenuButton({text: "Reports", icon: "Common/img/list.png"});

	// Create the menu
	var oMenu1 = new sap.ui.commons.Menu("menu1", {ariaDescription: "Application Setup"});
	// Create the items and add them to the menu
	var oMenuItem1 = new sap.ui.commons.MenuItem("item1-0-1",{text: "Enterprise Hierarchy", enabled: false});
	oMenu1.addItem(oMenuItem1);
	var oMenuItem2 = new sap.ui.commons.MenuItem("item1-0-2",{text: " ???", enabled: false});
	//oMenu1.addItem(oMenuItem2);
	var oMenuItem3 = new sap.ui.commons.MenuItem("item1-0-3",{text: "MES Memory Maps", enabled: true});
	oMenu1.addItem(oMenuItem3);
	var oMenuItem4 = new sap.ui.commons.MenuItem("item1-0-4",{text: "Plant Connectivity", enabled: true});
	oMenu1.addItem(oMenuItem4);
	var oMenuItem5 = new sap.ui.commons.MenuItem("item1-0-5",{text: "Master Data Setup", enabled: false});
	oMenu1.addItem(oMenuItem5);

	var oMenu4 = new sap.ui.commons.Menu("menu4", {ariaDescription: "Memory Maps Setup", enabled:true});
	oMenuItem3.setSubmenu(oMenu4);
	//Create the items and add them to the sub menu
	var oMenuItem41 = new sap.ui.commons.MenuItem("item1-4-1",{text: "Memory Map Tags", enabled: false});
	oMenu4.addItem(oMenuItem41);
	var oMenuItem45 = new sap.ui.commons.MenuItem("item1-4-5",{text: "Memory Map Transactions", enabled: false});
	oMenu4.addItem(oMenuItem45);
	var oMenuItem44 = new sap.ui.commons.MenuItem("item1-4-4",{text: "PLC Tag Groups", enabled: false});
	oMenu4.addItem(oMenuItem44);
	var oMenuItem42 = new sap.ui.commons.MenuItem("item1-4-2",{text: "PLC Tag Types", enabled: false});
	oMenu4.addItem(oMenuItem42);
	var oMenuItem43 = new sap.ui.commons.MenuItem("item1-4-3",{text: "PLC Tag Functions", enabled: false});
	oMenu4.addItem(oMenuItem43);

	var oMenu5 = new sap.ui.commons.Menu("menu5", {ariaDescription: "Connectivity Setup", enabled:true});
	oMenuItem4.setSubmenu(oMenu5);
	//Create the items and add them to the sub menu
	var oMenuItem56 = new sap.ui.commons.MenuItem("item1-5-6",{text: "Shop Floor Operators", enabled: false});
	oMenu5.addItem(oMenuItem56);
	var oMenuItem51 = new sap.ui.commons.MenuItem("item1-5-1",{text: "Shop Floor Computers", enabled: false});
	oMenu5.addItem(oMenuItem51);
	var oMenuItem52 = new sap.ui.commons.MenuItem("item1-5-2",{text: "Shop Floor Printers", enabled: false});
	oMenu5.addItem(oMenuItem52);
	var oMenuItem53 = new sap.ui.commons.MenuItem("item1-5-3",{text: "Plant Connectivity Servers", enabled: false});
	oMenu5.addItem(oMenuItem53);
	var oMenuItem54 = new sap.ui.commons.MenuItem("item1-5-4",{text: "Plant Connectivity Agents", enabled: false});
	oMenu5.addItem(oMenuItem54);
	var oMenuItem55 = new sap.ui.commons.MenuItem("item1-5-5",{text: "Line Side SQL Servers", enabled: false});
	oMenu5.addItem(oMenuItem55);

	var oMenu6 = new sap.ui.commons.Menu("menu6", {ariaDescription: "Hierarchy Setup", enabled:true});
	oMenuItem1.setSubmenu(oMenu6);
	//Create the items and add them to the sub menu
	var oMenuItem61 = new sap.ui.commons.MenuItem("item1-6-1",{text: "Hierarchy Management", enabled: false});
	oMenu6.addItem(oMenuItem61);
	var oMenuItem62 = new sap.ui.commons.MenuItem("item1-6-2",{text: "Hierarchy Levels Setup", enabled: false});
	oMenu6.addItem(oMenuItem62);

	var oMenu7 = new sap.ui.commons.Menu("menu7", {ariaDescription: "Master Data", enabled:true});
	oMenuItem5.setSubmenu(oMenu7);
	//Create the items and add them to the sub menu
	var oMenuItem71 = new sap.ui.commons.MenuItem("item1-7-1",{text: "Units Of Measure", enabled: false});
	oMenu7.addItem(oMenuItem71);
	var oMenuItem72 = new sap.ui.commons.MenuItem("item1-7-2",{text: "Products Management", enabled: false});
	oMenu7.addItem(oMenuItem72);
	var oMenuItem73 = new sap.ui.commons.MenuItem("item1-7-3",{text: "Bills of Materials", enabled: false});
	oMenu7.addItem(oMenuItem73);
	var oMenuItem74 = new sap.ui.commons.MenuItem("item1-7-4",{text: "Products Routing", enabled: false});
	oMenu7.addItem(oMenuItem74);

	// Create the menu
	var oMenu2 = new sap.ui.commons.Menu("menu2", {ariaDescription: "User Dashboards"});
	// Create the items and add them to the menu
	var oMenuItem21 = new sap.ui.commons.MenuItem("item2-0-1",{text: "Work Order Management", enabled:false});
	oMenu2.addItem(oMenuItem21);
	var oMenuItem22 = new sap.ui.commons.MenuItem("item2-0-2",{text: "Carrier Station Dashboard", enabled:false});
	oMenu2.addItem(oMenuItem22);
	var oMenuItem23 = new sap.ui.commons.MenuItem("item2-0-3",{text: "Assembly Station Dashboard", enabled:false});
	oMenu2.addItem(oMenuItem23);

	// Create the menu
	var oMenu3 = new sap.ui.commons.Menu("menu3", {ariaDescription: "User Reports"});
	// Create the items and add them to the menu
	var oMenuItem31 = new sap.ui.commons.MenuItem("item3-0-1",{text: "Production Status Report", enabled:false});
	oMenu3.addItem(oMenuItem31);
	var oMenuItem32 = new sap.ui.commons.MenuItem("item3-0-2",{text: "Item Traceability Report", enabled:false});
	oMenu3.addItem(oMenuItem32);
	var oMenuItem33 = new sap.ui.commons.MenuItem("item3-0-3",{text: "Connector Diagnostics", enabled:false});
	oMenu3.addItem(oMenuItem33);

	//Attach the Menu to the MenuButton
	oMenuButton1.setMenu(oMenu1);
	oMenuButton2.setMenu(oMenu2);
	oMenuButton3.setMenu(oMenu3);

	//Attach an event to raise an alert when an item is selected (Button 1)
	oMenuButton1.attachItemSelected(function (oEvent){
	switch( oEvent.getParameter("itemId")) {
		// Menu Settings 1
		case "item1-6-1":
				setTimeout("location.href = '" + "MgtHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-6-2":
				setTimeout("location.href = '" + "LvlHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 2
		case "item1-4-1":
				setTimeout("location.href = '" + "MemMapTags.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-5":
				setTimeout("location.href = '" + "MemMapTrxs.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-4":
				setTimeout("location.href = '" + "TagCommGroups.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-2":
				setTimeout("location.href = '" + "TagTypes.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-4-3":
				setTimeout("location.href = '" + "TagFunctions.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 3
		case "item1-5-6":
				setTimeout("location.href = '" + "Operators.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-1":
				setTimeout("location.href = '" + "Stations.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-2":
				setTimeout("location.href = '" + "Printers.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-3":
				setTimeout("location.href = '" + "PCoServers.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-4":
				setTimeout("location.href = '" + "PCoAgents.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-5-5":
				setTimeout("location.href = '" + "SqlServers.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Settings 4
		case "item1-7-1":
			setTimeout("location.href = '" + "UnitsOfMeasure.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-2":
			setTimeout("location.href = '" + "ProductsMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-3":
			setTimeout("location.href = '" + "BomMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item1-7-4":
			setTimeout("location.href = '" + "RoutingMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;

		// Menu Default
		default:
				// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
	}
	});

	//Attach an event to raise an alert when an item is selected. (Button 2)
	oMenuButton2.attachItemSelected(function (oEvent){
	switch( oEvent.getParameter("itemId")) {
		case "item2-0-1":
			setTimeout("location.href = '" + "WorkOrders.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item2-0-2":
			setTimeout("location.href = '" + "CarrierDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item2-0-3":
			setTimeout("location.href = '" + "AssemblyDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		default:
				// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
	}
	});

	//Attach an event to raise an alert when an item is selected. (Button 3)
	oMenuButton3.attachItemSelected(function (oEvent){
	switch( oEvent.getParameter("itemId")) {
		// Menu Reports
		case "item3-0-1":
			setTimeout("location.href = '" + "ProductionStatus.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item3-0-2":
			setTimeout("location.href = '" + "ItemTraceability.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		case "item3-0-3":
			setTimeout("location.href = '" + "MESM.irpt?ROLE=" + document.getElementById("user_role").value + "'",0);
			break;
		default:
				//alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
	}
	});
	// ****************************************************************************************************************************************************
	function getCurrentDateTime() {
		var srvDate = new Date();

		var day = srvDate.getDate();
		if(String(day).length ==1) day = "0" +day ;
		var month = srvDate.getMonth();
		month = (month +1);
		if(String(length).length ==1) month = "0" +month ;
		var year = srvDate.getFullYear();

		var fromDate =  month + "-" + day + "-" + year + " 00:00";
		var toDate =  month + "-" + day + "-" + year + " 23:55";

		oCore.byId('TF-FromDateTime').setValue(fromDate);
		oCore.byId('TF-ToDateTime').setValue(toDate);
	};
	// ****************************************************************************************************************************************************
	var oMatrixP = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixP',
		layoutFixed : true,
		width: '1200px',
		columns : 5,
		widths : ['240px', '240px', '240px', '240px', '240px'] 
	});

	var oLabelPlants = new sap.ui.commons.Label({
		id : 'L-Plants',
		visible : true,
		text : 'SELECTED PLANT ' });

	var oLabelLines = new sap.ui.commons.Label({
		id : 'L-Lines',
		visible : true,
		text : 'SELECTED LINE ' });

	var oLabelFrom = new sap.ui.commons.Label({
		id : 'L-From',
		visible : true,
		text : 'FROM ' });

	var oLabelTo = new sap.ui.commons.Label({
		id : 'L-To',
		visible : true,
		text : 'TO ' });

	oMatrixP.createRow(oLabelLines,oLabelFrom,oLabelTo,"",oLabelPlants);

	var oDropdownBoxLines = new sap.ui.commons.DropdownBox({
		id : "LinesList",
		tooltip : 'Lines',
		editable : true,
		width : '200px',
		change: function(oEvent){
			selectedLine = oDropdownBoxLines.getSelectedKey();
			updateTableProductionStatus();
		}
	});

	var oTF_FromDateTime = new sap.ui.commons.TextField({
		id : 'TF-FromDateTime',
		tooltip : 'From Time Stamp',
		editable : true,
		visible : true,
		width : '160px' 
	});

	var oBtn_FromDateTime = new sap.ui.commons.Button({
		id : 'B-DateTimeFrom',
		tooltip : 'From Time Stamp',
		text : ''
	});
	oBtn_FromDateTime.setIcon("Common/img/asr_calendar.png");
	oBtn_FromDateTime.attachPress(doOpenPickerFrom);

	var oLayoutOrdersFrom = new sap.ui.layout.HorizontalLayout("OrdersFrom", {
		content: [oTF_FromDateTime, oBtn_FromDateTime]
	});

	// ****************************************************************************************************************************************************
	function doOpenPickerFrom(oControlEvent){
         		// find the input fields and apply the time select to them.
		$('#TF-FromDateTime').datetimepicker('show');
      	};
	// ****************************************************************************************************************************************************		
	oBtn_FromDateTime.attachBrowserEvent("mouseover", function() {
		$('#TF-FromDateTime').datetimepicker({
			format:'m-d-Y H:i',
			step: 5,
			onChangeDateTime:function(){
				var d = $('#TF-FromDateTime').val();
				oCore.byId('TF-FromDateTime').setValue(d);
				selectedFrom = d;
				updateTableProductionStatus();
			}
		});
	});

	var oTF_ToDateTime = new sap.ui.commons.TextField({
		id : 'TF-ToDateTime',
		tooltip : 'To Time Stamp',
		editable : true,
		visible : true,
		width : '160px' 
	});

	var oBtn_ToDateTime = new sap.ui.commons.Button({
		id : 'B-DateTimeTo',
		tooltip : 'To Time Stamp',
		text : ''
	});
	oBtn_ToDateTime.setIcon("Common/img/asr_calendar.png");
	oBtn_ToDateTime.attachPress(doOpenPickerTo);

	var oLayoutOrdersTo = new sap.ui.layout.HorizontalLayout("OrdersTo", {
		content: [oTF_ToDateTime, oBtn_ToDateTime]
	});

	// ****************************************************************************************************************************************************
	function doOpenPickerTo(oControlEvent){
         		// find the input fields and apply the time select to them.
		$('#TF-ToDateTime').datetimepicker('show');
      	};
	// ****************************************************************************************************************************************************		
	oBtn_ToDateTime.attachBrowserEvent("mouseover", function() {
		$('#TF-ToDateTime').datetimepicker({
			format:'m-d-Y H:i',
			step: 5,		          
			onChangeDateTime:function(){
				var d = $('#TF-ToDateTime').val();
				oCore.byId('TF-ToDateTime').setValue(d);
				selectedTo = d;
				updateTableProductionStatus();
			}
		});
	});

	var oDropdownBoxPlants = new sap.ui.commons.DropdownBox({
		id : "PlantList",
		tooltip : 'Plants',
		editable : true,
		width : '200px',
		change: function(oEvent){
			// alert(oEvent.oSource.getSelectedKey());
			var endplant = oDropdownBoxPlants.getSelectedItemId();
			var result = endplant.substring(6,endplant.length);
			selectedPlant = result;
			displayProductionLineList(selectedPlant);
		}
	})

	oMatrixP.createRow( oDropdownBoxLines,oLayoutOrdersFrom,oLayoutOrdersTo,"",oDropdownBoxPlants );

	// ****************************************************************************************************************************************************

	function updatePlants(idPlant) {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PLANTS/TRANSACTIONS/getActivePlants_xAcute&Param.1="+idPlant+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonPlantsList);
		function parseJsonPlantsList(jsondata){
			oDropdownBoxPlants.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = jsondata[i]['ID'];
				item_key = jsondata[i]['PLANT'];
				item_text = jsondata[i]['DESC'];
				oItem = new sap.ui.core.ListItem("plant_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxPlants.addItem(oItem);
			}
			oDropdownBoxPlants.setSelectedKey(idPlant);
			var endplant = oDropdownBoxPlants.getSelectedItemId();
			var result = endplant.substring(6,endplant.length);
			selectedPlant = result;
			displayProductionLineList(selectedPlant);
		}
	};

	// ****************************************************************************************************************************************************
	function displayProductionLineList(selPlant) {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/ORDERS/QUERIES/get_ProductionLineListALL&Param.1="+selPlant+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonProductionLineList);
		function parseJsonProductionLineList(jsondata){
			oDropdownBoxLines.destroyItems();
			for (var i=0; i<jsondata.length; i++){
				item_id = jsondata[i]['recordID'];
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['unitName'];
				oItem = new sap.ui.core.ListItem("line_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxLines.addItem(oItem);
			}
			selectedLine = oDropdownBoxLines.getSelectedKey();
			if(tableCreated == 0) {
				getCurrentDateTime();
				createTableProductionStatus();
				tableCreated = 1;
			}
			else{
				updateTableProductionStatus();
			}
		}
	};
	// ****************************************************************************************************************************************************
	function createTableProductionStatus() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
		// alert(selectedPlant); 
	         	var Param1 = escapeSQLString(selectedPlant);
		var Param2 = escapeSQLString(selectedLine);
		var Param3 = escapeSQLString(oCore.byId('TF-FromDateTime').getValue());
		var Param4 = escapeSQLString(oCore.byId('TF-ToDateTime').getValue());
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4);
		//alert(paramStr);		
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/REPORTS/QUERIES/getProductionStatus&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModel.getXML());
		createColumnsProductionStatus();
		oTable.setModel(oModel);
		oTable.bindRows("/Rowset/Row");
	};
	// ****************************************************************************************************************************
	function updateTableProductionStatus() { 
		oTable.clearSelection();
		var timestamp = new Date().getTime();
		// alert(selectedPlant); 
 	  	var Param1 = escapeSQLString(selectedPlant);
		var Param2 = escapeSQLString(selectedLine);
		var Param3 = escapeSQLString(oCore.byId('TF-FromDateTime').getValue());
		var Param4 = escapeSQLString(oCore.byId('TF-ToDateTime').getValue());
		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4);
		//alert(paramStr);		
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/REPORTS/QUERIES/getProductionStatus&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTable.getModel().refresh(true);
	};
	// ****************************************************************************************************************************
	function createColumnsProductionStatus() {
		//Define the columns and the control templates to be used
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CNF NO"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "confirmationNumber"),
			sortProperty: "confirmationNumber",
			filterProperty: "confirmationNumber",
			width: "70px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ORDER LAST ID"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "orderLastID"),
			sortProperty: "orderLastID",
			filterProperty: "orderLastID",
			width: "80px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SER NUM"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "serialNumber"),
			sortProperty: "serialNumber",
			filterProperty: "serialNumber",
			width: "80px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SER PHANTOM"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "serialPhantom"),
			sortProperty: "serialPhantom",
			filterProperty: "serialPhantom",
			width: "80px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SCH START"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scheduledStart"),
			sortProperty: "scheduledStart",
			filterProperty: "scheduledStart",
			width: "100px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SCH END"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scheduledFinish"),
			sortProperty: "scheduledFinish",
			filterProperty: "scheduledFinish",
			width: "100px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "YIELD CNF"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "yieldConfirmed"),
			sortProperty: "yieldConfirmed",
			filterProperty: "yieldConfirmed",
			width: "75px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SCRAP CNF"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "scrapConfirmed"),
			sortProperty: "scrapConfirmed",
			filterProperty: "scrapConfirmed",
			width: "75px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "DWT CNF"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "downtimeConfirmed"),
			sortProperty: "downtimeConfirmed",
			filterProperty: "downtimeConfirmed",
			width: "75px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "RECORD ID"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "recordID"),
			sortProperty: "recordID",
			filterProperty: "recordID",
			width: "1px",
			visible:false
		}));
	}
	// ****************************************************************************************************************************************************
	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixT',
		layoutFixed : true,
		width: '1200px',
		columns : 1,
		widths : ['1200px'] 
	});

	//Create an instance of the table control
	var oTable = new sap.ui.table.Table({
		visibleRowCount: nrRows,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1200px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});
	// ****************************************************************************************************************************************************
	oTable.attachRowSelectionChange(function(oEvent) {
		var selIndex = oTable.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex  >= 0) {
			oButtonPrintList.setEnabled(true); 
			oButtonEmail.setEnabled(true); 

			// Retrieve the selected row
			var selectedRow = oTable.getRows()[selIndex];
			var selectedRowContext = oEvent.getParameter("rowContext");

		} else {
			oButtonPrintList.setEnabled(true); 
			oButtonEmail.setEnabled(true); 

			selectedIndex =  -1;
			// alert ("No Selection ..");
		}
	});

	var oModel =  new sap.ui.model.xml.XMLModel();

	//Bring the table onto the UI 
	oMatrixT.createRow(oTable);

	// ****************************************************************************************************************************************************
	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixB',
		layoutFixed : true,
		width: '1200px',
		columns : 4,
		widths : ['400px','200px','200px','400px'] 
	});
	
	var oButtonPrintList = new sap.ui.commons.Button({
		id : 'B-PrintList',
		tooltip : "Print",
		text : 'Print',
		enabled: true
	});
	oButtonPrintList.attachPress(doOnPrintPage);

	var oButtonEmail = new sap.ui.commons.Button({
		id : 'B-Email',
		tooltip : "Email",
		text : 'Email',
		enabled: true
	});
	oButtonEmail.attachPress(doEmail);

	oMatrixB.createRow("",oButtonPrintList,oButtonEmail,"");

	// ****************************************************************************************************************************************************
	function doOnPrintPage() {
		// retrieve parameters
		var Param1 = escapeSQLString(selectedPlant);
		var Param2 = escapeSQLString(selectedLine);
		var Param3 = escapeSQLString(oCore.byId('TF-FromDateTime').getValue());
		var Param4 = escapeSQLString(oCore.byId('TF-ToDateTime').getValue());
		var Param5 = escapeSQLString(oDropdownBoxLines.getValue());

		var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4) +"&Param.5="+encodeURIComponent(Param5);
	
		var w = window.innerWidth
			|| document.documentElement.clientWidth
			|| document.body.clientWidth;
		w = w-40;
		var h = window.innerHeight
			|| document.documentElement.clientHeight
			|| document.body.clientHeight;
		h=h-20;
		var WindowObject = window.open("PrintProductionStatus.irpt?"+paramStr, "PrintWindow","width="+w+",height="+h+",top=10,left=10,toolbars=no,scrollbars=yes,status=no,resizable=yes");
		WindowObject.focus();
	};
	// ****************************************************************************************************************************************************
	var oMatrixMail = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixMail',
		layoutFixed : true,
		width: '490px',
		columns : 1,
		widths : ['500px'] 
	});

	var oMatrixMailF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixMailF',
		layoutFixed : true,
		width: '490px',
		columns : 3,
		widths : ['180px','140px','170px'] 
	});

	var oTitleMail = new sap.ui.commons.Label({
		id : 'L-MailInfo',
		text : 'EMAIL INFORMATION'
	});
	oMatrixMail.createRow( oTitleMail );

	var oLabelSystemMail = new sap.ui.commons.Label({
		id : 'L-SysMail',
		text : ' System Mail : '
	});
	oMatrixMail.createRow( oLabelSystemMail );

	var oLabelSystemNote = new sap.ui.commons.Label({
		id : 'L-SysNote',
		text : ' Messages can be relayed to xxxxxxxxxxx@dana.com addresses only! '
	});
	oMatrixMail.createRow( oLabelSystemNote );

	var oLabelRecipient = new sap.ui.commons.Label({
		id : 'L-Recipient',
		text : ' Send eMail To  '
	});

	var oInputRecipient = new sap.ui.commons.TextField('input_recipient');
	oInputRecipient.setTextAlign(sap.ui.core.TextAlign.Right);

	var oLabelDomain = new sap.ui.commons.Label({
		id : 'L-Domain',
		text : ' @dana.com '
	});

	oMatrixMailF.createRow( oLabelRecipient, oInputRecipient, oLabelDomain );
	oMatrixMail.createRow( oMatrixMailF );

	var oButtonMail = new sap.ui.commons.Button({
		id : 'B-SendMail',
		tooltip : "Send report data via eMail",
		text : 'SUBMIT',
		enabled: true
	});
	oButtonMail.attachPress(doSendEmail);
	oMatrixMail.createRow( oButtonMail );

	var oOverlayContainerMail = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerMail.setHeight('240px');
	oOverlayContainerMail.setWidth('700px');
	oOverlayContainerMail.addContent(oMatrixMail);	

	// ******************************************************************************************************************************************************************
	function doEmail() {
		 // collect email data
		var recipient = document.getElementById("user_email").value;

	// hardcoded to test 
		recipient = "paul.radulescu.dana.com"

		recipient = recipient.toLowerCase();
		var firstname = document.getElementById("user_firstname").value;
		var lastname = document.getElementById("user_lastname").value;
		
	// hardcoded to test 
		firstname = "paul";
		lastname= "radulescu"

		var allname = firstname+"."+lastname;
		// show email overlay
		if(!oOverlayContainerMail.isOpen()){
          			oCore.byId("L-SysMail").setText("System configured eMail address : " + recipient);
			if (recipient.indexOf("@dana.com")>0 ) {
          			    oCore.byId("input_recipient").setValue(recipient.substr(0, recipient.indexOf("@dana.com")));
			} else {
          			    oCore.byId("input_recipient").setValue(allname.toLowerCase());
			}
			oOverlayContainerMail.open();
		}
	};
	// ******************************************************************************************************************************************************************
	function doSendEmail() {
		var Param1 = escapeSQLString(selectedPlant);
		var Param2 = escapeSQLString(selectedLine);
		var Param3 = escapeSQLString(oCore.byId('TF-FromDateTime').getValue());
		var Param4 = escapeSQLString(oCore.byId('TF-ToDateTime').getValue());
		var Param5 = escapeSQLString(oDropdownBoxLines.getValue());
		var recipient = oCore.byId("input_recipient").getValue() + "@dana.com";
		//var recipient = oCore.byId("input_recipient").getValue() + "@rtsautomation.com";
       		var oSendMail;
      		if (window.XMLHttpRequest) {
     	     		oSendMail = new XMLHttpRequest();
      		}
		if (oSendMail != null) {
			var timestamp = new Date().getTime();
			var paramStr = "PlantID="+encodeURIComponent(Param1)+"&LineID="+encodeURIComponent(Param2)+"&ShowFrom="+encodeURIComponent(Param3)+"&ShowTo="+encodeURIComponent(Param4)+"&MailRecipient="+encodeURIComponent(recipient)+"&LineName="+encodeURIComponent(Param5);
			// alert(paramStr);
			var queryStr = "/XMII/Runner?Transaction=MESM/REPORTS/TRANSACTIONS/mailProductionStatusList&OutputParameter=XML_RESULT&Content-Type=text/xml&"+paramStr+"&ts="+timestamp;
			// alert(queryStr);
			oSendMail.open("GET", queryStr, true); 
			oSendMail.onreadystatechange = function() {
				if (oSendMail.readyState == 4) 
					if (oSendMail.status == 200) {
						// Successful -- rebuild the screen
						var xmlDOC = oSendMail.responseXML;
						if(xmlDOC.getElementsByTagName("TRXRESULT")[0] && xmlDOC.getElementsByTagName("TRXRESULT")[0].childNodes[0]) {
							var trxMessage = xmlDOC.getElementsByTagName("TRXRESULT")[0].childNodes[0].nodeValue;
							alert(trxMessage);
							oOverlayContainerMail.close();
						} else { 
							alert("Please do try again later .. ");
						}
					} else {
						alert("Error: " + oSendMail.statusText);
					}
				}
			oSendMail.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	};

	// ****************************************************************************************************************************************************


	</script>
</head>

<body onLoad="roleSecurity()">

<input id="user_roles" type="hidden" value="{IllumLoginRoles}" style="display:block;width:1000px;" readonly />
<input id="user_role" type="hidden" value="{ROLE}" style="display:block;width:1000px;" readonly />
<input id="user_name" type="hidden" value="{IllumLoginName}" style="display: block;width:1000px;" readonly />
<input id="user_height" type="hidden" value="{HEIGHT}" style="display: block;width:100px;" readonly />
<input id="user_address" type="hidden" value="{Machine}" style="display:block;width:1000px;" readonly />
<input id="user_email" type="hidden" value="{email}" style="display:block;width:800px;" readonly />
<input id="user_firstname" type="hidden" value="{firstname}" style="display:block;width:800px;" readonly />
<input id="user_lastname" type="hidden" value="{lastname}" style="display:block;width:800px;" readonly />
<div id="app_header" >
<div id="app_title">PRODUCTION STATUS</div>
<div id="app_menu"></div>
<div id="page_title">DEFAULT SCREEN</div>
</div>
<div id="mesm_content" ></div>
</body>
</html>