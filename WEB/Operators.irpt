<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>CT MODULE</title>
	<style>
	body {
		background-image: url("Common/img/logo.png");
		background-size: 180px;
		background-repeat: no-repeat;
    		background-attachment: fixed;
    		background-position: right 40px top 30px;
		font-family: Arial;
	}
	#app_header {
 		padding: 10px;
 		padding-left: 40px;
 		padding-top: 15px;
 		padding-bottom: 0px;
		height:80px;
		width:400px;
		text-align: center;
	}
	#app_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		color: #007dc0;
		margin-bottom; 20px;
	}
	#app_menu {
		width:400px;
		text-align: center;
		font-family: Arial,Helvetica,sans-serif;
	}
	#page_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:28px;
		color: #cfcfcf;
	}
	#mesm_content {
 		padding: 30px;
 		padding-top: 40px;
	}
	#__button0, #__button1, #__button2 {
		margin-top:10px;
		margin-left:5px;
		margin-right:5px;
	}
	#MatrixT, #MatrixB, #MatrixA, #MatrixE {
		margin:10px auto;
	}
	#__cell2, #__cell3, #__cell4, #__cell5, #__cell6 {
		text-align:center;
	} 
	#B-Add, #B-Edit, #B-Delete {
		width:100px;
		height:35px;
		font-size:14px;
	}
	#B-AssignStations {
		width:200px;
	}
	#L-AddOperator, #L-EditOperator {
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		height:35px;
		color: #007dc0;
	}
	#__cell7, #__cell19, #__cell20, #__cell32 {
		text-align:center;
		height: 36px;
	}
	#__cell8, #__cell10, #__cell12, #__cell14, #__cell16, #__cell21, #__cell23, #__cell25, #__cell27, #__cell29 {
		padding:10px;
		padding-right:20px;
		text-align:right;
	}
	#B-AddOperator, #B-EditOperator {
		margin-top:0px;
		width:100px;
		height:35px;
		font-size:14px;
	}
	#input_clid, #input_clide {
		width:40px;
	}
	#__cell36, #__cell42 {
		text-align:left;
		height: 36px;
	}
	#__cell37, #__cell38 {
		text-align: left;
	}
	#tbl_stationlist, #tbl_assignstation {
		margin:2px auto;
		margin-bottom: 15px;
	}
	#L-SOperator {
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:27px;
		height:35px;
		color: #007dc0;
	}
	#L-DPOperator {
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:27px;
		height:35px;
		color: #007dc0;
	}
	#MatrixST, #MatrixDPT {
		margin-left: 10px;
	}
	</style>

	<script id="sap-ui-bootstrap"
		src="/sapui5/resources/sap-ui-core.js"
		data-sap-ui-theme="sap_goldreflection"
		data-sap-ui-libs="sap.ui.core,sap.ui.commons,sap.ui.table,sap.ui.ux3"
		data-sap-ui-language="en" >
	</script>
	<script type="text/javascript" src="Common/js/default.js"></script>

	<script type="text/javascript" id="app-init">
	// ******************************************************************************************************************************************************************
	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	// Initialize screen
	var nrRows = 13;
	var selectedIndex =  -1;
	// ******************************************************************************************************************************************************************
	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var selectedPlant = 0;
 	 var clock_ID = '';
	  var plant_ID = '';
       	  var operator_FNAME = '';
	  var operator_LNAME = '';
	  var operator_ACT_src ="";
	  var operator_CreatedBy = '';
	  var operator_CreatedOn = '';
	  var operator_ModifiedBy = '';
	  var operator_ModifiedOn = '';
	  var arr_IDStation = [];
	  var arr_IDDataPoint = [];
	// ******************************************************************************************************************************************************************
	function roleSecurity() {
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "MESM_" + document.getElementById("user_role").value;
		// alert(role2Access);
 		if(myRoles.indexOf(role2Access)<0) {
			window.location.assign("security.irpt");
		 } else {
			var roleString = document.getElementById("user_role").value;
			var roleArray = roleString.split("_");
			level2Access = roleArray[0]; 
				// alert("level : " + level2Access);
			plant2Access =  roleArray[1];
				// alert("plant : " + plant2Access);
			updatePlants(plant2Access); 
			document.getElementById("page_title").innerHTML=role2Access;

			// enable homepage
			oCore.byId("item3-0-3").setEnabled(true);
			// show menus
			oMenuButton1.placeAt("app_menu");
			oMenuButton2.placeAt("app_menu");
			oMenuButton3.placeAt("app_menu");

			var role_ADM = "MESM_ADM_"+plant2Access;
			var role_ENG = "MESM_ENG_"+plant2Access;
			var role_SUP = "MESM_SUP_"+plant2Access;
			var role_OPS = "MESM_OPS_"+plant2Access;

			switch(role2Access) {
			case "MESM_ADM_ALL":

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Shifts Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_ADM:
				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable   Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM PLANT "+plant2Access;
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case "MESM_OPS_ALL":
				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_OPS:
		// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS PLANT "+plant2Access;
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			default:
				alert("MES Module Role Unknown: " + role2Access);
				break;
			}
		  }
	}

	// ************************************	MENU		******************************************************************************************************************************

	var timestamp = new Date().getTime();

	var jsFile=document.createElement('script');
	jsFile.setAttribute("type","text/javascript");
	jsFile.setAttribute("src", "Common/js/menu.js?ts="+timestamp);
	document.getElementsByTagName("head")[0].appendChild(jsFile);

	// ****************************************************************************************************************************************************
	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixT',
		layoutFixed : true,
		width: '1200px',
		columns : 4,
		widths : ['250px', '250px', '450px', '250px']
	});

	var oButton0 = new sap.ui.commons.Button({
		id : 'B-AssignStations',
		tooltip : "Assign Operator to Shop-Floor Stations",
		text : 'Assign Shop-Floor Stations',
		enabled: false
	});
	oButton0.attachPress(doAssignStations);

	var oLabelPlants = new sap.ui.commons.Label({
		id : 'L-Plants',
		visible : true,
		text : 'SELECTED PLANT ' });

	var oCell02 = new sap.ui.commons.layout.MatrixLayoutCell({
		id : 'Cell-0-2',
		hAlign : sap.ui.commons.layout.HAlign.Right,
		colSpan : 1 });
	oCell02.addContent(oLabelPlants);

       	var oDropdownBoxPlants = new sap.ui.commons.DropdownBox({
		id : "PlantsList",
		tooltip : 'Active Plants',
		editable : true,
		width : '230px',
		change: function(oEvent){
		 //alert(oEvent.oSource.getSelectedItemId());
		var endplant = oEvent.oSource.getSelectedItemId();
		var result =  endplant.substring(6,endplant.length);
		selectedPlant =result;
		// alert(result);
		updateTableOperators(result);
		updateTableStationsList(result); 
		updateTableDataPointsList(result); 
		}
	});

	var oCell03 = new sap.ui.commons.layout.MatrixLayoutCell({
		id : 'Cell-0-3',
		hAlign : sap.ui.commons.layout.HAlign.Right,
		colSpan : 1 });
	oCell03.addContent(oDropdownBoxPlants);

	oMatrixT.createRow( oButton0, '', oCell02, oCell03 );
	// ******************************************************************************************************************************************************************
	function updatePlants(idPlant) {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PLANTS/TRANSACTIONS/getActivePlants_xAcute&Param.1="+idPlant+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonPlantsList);
		function parseJsonPlantsList(jsondata){
			oDropdownBoxPlants.destroyItems();

			for (var i=0; i<jsondata.length; i++){
				//	alert(jsondata[i]['PLANT'] + '   ' + jsondata[i]['DESC']);
				item_id = jsondata[i]['ID'];
				item_key = jsondata[i]['PLANT'];
				item_text = jsondata[i]['DESC'];
				oItem = new sap.ui.core.ListItem("plant_"+item_id,{
					key : item_key,
					text : item_text });
				oDropdownBoxPlants.addItem(oItem);
			}
			oDropdownBoxPlants.setSelectedKey(idPlant);
			var endplant = oDropdownBoxPlants.getSelectedItemId();
			var result = endplant.substring(6,endplant.length);
			selectedPlant = result;
			// alert(result);
			setTimeout(createTableOperators(result), 1000);	
		}
	}

	// ******************************************************************************************************************************************************************
	function createTableOperators(thePlant) {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
		// alert(thePlant); 
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_Operators&Param.1="+thePlant+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModel.getXML());
		createColumnsOperators();
		oTable.setModel(oModel);
		oTable.bindRows("/Rowset/Row");
	}

	// ******************************************************************************************************************************************************************
	function updateTableOperators(thePlant) {
		oTable.clearSelection();
		var timestamp = new Date().getTime();
		// alert(thePlant); 
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_Operators&Param.1="+thePlant+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTable.getModel().refresh(true);
	}

	// ******************************************************************************************************************************************************************
	function createColumnsOperators() {
		//Define the columns and the control templates to be used
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CRT"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "idPlant"),
			sortProperty: "idPlant",
			filterProperty: "idPlant",
			width: "0px",
			hAlign: "Center"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ID"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "idClock"),
			sortProperty: "idClock",
			filterProperty: "idClock",
			width: "50px",
			hAlign: "Center"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " FIRST NAME"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "FirstName"),
			sortProperty: "FirstName",
			filterProperty: "FirstName",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "LAST NAME"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "LastName"),
			sortProperty: "LastName",
			filterProperty: "LastName",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " MODIFIED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
			sortProperty: "ModifiedBy",
			filterProperty: "ModifiedBy",
			width: "100px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "MODIFIED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
			sortProperty: "ModifiedOn",
			filterProperty: "ModifiedOn",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " CREATED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
			sortProperty: "CreatedBy",
			filterProperty: "CreatedBy",
			width: "100px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CREATED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty: "CreatedOn",
			filterProperty: "CreatedOn",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ACTIVE"}),
			template: new sap.ui.commons.Image().bindProperty("src", "src"),
			width: "75px",
			hAlign: "Center"
		}));
	}
	// ******************************************************************************************************************************************************************

	//Create an instance of the table control
	var oTable = new sap.ui.table.Table({
		visibleRowCount: nrRows,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1200px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});

	// ******************************************************************************************************************************************************************
	oTable.attachRowSelectionChange(function(oEvent) {
		// Retrieve the selected row
		var selIndex = oTable.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex >= 0) {
			oButton0.setEnabled(true); 
			oButton1.setEnabled(false); 
			oButton2.setEnabled(true);
			oButton3.setEnabled(true);
			// Retrieve the selected row
			var selectedRow = oTable.getRows()[selIndex];
			// sap.ui.commons.MessageBox.alert(selectedRow);
			var selectedRowContext = oEvent.getParameter("rowContext");
 	 		clock_ID = oModel.getProperty("idClock", selectedRowContext);    
	  		plant_ID = oModel.getProperty("idPlant", selectedRowContext); 
       	  		operator_FNAME = oModel.getProperty("FirstName", selectedRowContext);
	  		operator_LNAME = oModel.getProperty("LastName", selectedRowContext);
	  		operator_ACT_src = oModel.getProperty("src", selectedRowContext);
	  		operator_CreatedBy = oModel.getProperty("CreatedBy", selectedRowContext);
	  		operator_CreatedOn = oModel.getProperty("CreatedOn", selectedRowContext);
	  		operator_ModifiedBy = oModel.getProperty("ModifiedBy", selectedRowContext);
	  		operator_ModifiedOn = oModel.getProperty("ModifiedOn", selectedRowContext);
		} else {
			oButton0.setEnabled(false); 
			oButton1.setEnabled(true);
			oButton2.setEnabled(false);
			oButton3.setEnabled(false);
			selectedIndex =  -1;
 	 		clock_ID = ""; 
	  		plant_ID = "";
       	  		operator_FNAME = "";
	  		operator_LNAME = "";
	  		operator_ACT_src = "";
	  		operator_CreatedBy = "";
	  		operator_CreatedOn = "";
	  		operator_ModifiedBy = "";
	  		operator_ModifiedOn = "";
			// alert ("No Selection ..");
		}
	});

	var oModel =  new sap.ui.model.xml.XMLModel();

	//Bring the table onto the UI 
	var oCellTable = new sap.ui.commons.layout.MatrixLayoutCell({
		id : 'Cell-Table',
		colSpan : 4 });
	oCellTable.addContent(oTable);

	oMatrixT.createRow(oCellTable);

	// build buttons matrix
	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixB',
		layoutFixed : true,
		width: '1200px',
		columns : 5,
		widths : ['150px','200px','200px','200px','150px'] 
	});

	var oButton1 = new sap.ui.commons.Button({
		id : 'B-Add',
		tooltip : "Add Operator",
		text : 'Add',
		enabled: true
	});
	oButton1.attachPress(doAdd);
	var oButton2 = new sap.ui.commons.Button({
		id : 'B-Edit',
		tooltip : "Edit Operator",
		text : 'Edit',
		enabled: false
	});
	oButton2.attachPress(doEdit);
	var oButton3 = new sap.ui.commons.Button({
		id : 'B-Delete',
		tooltip : "Delete Operator",
		text : 'Delete',
		enabled: false
	});
	oButton3.attachPress(doDelete);
	oMatrixB.createRow('', oButton1, oButton2, oButton3, '');

	// ******************************************************************************************************************************************************************
	// Create Add Operator Overlay
	var oMatrixA = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixA',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});

	var oMatrixAF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixAF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['295px','385px'] 
	});

	var oTitleA = new sap.ui.commons.Label({
		id : 'L-AddOperator',
		text : 'ADD OPERATOR'
	});
	oMatrixA.createRow( oTitleA );

	var oLabelPLT_ID = new sap.ui.commons.Label({
		id : 'L-PLTID',
		text : ' SELECTED PLANT '
	});

       	var oDropBoxSelPlant = new sap.ui.commons.DropdownBox({
		id : "SelPlant",
		tooltip : 'Selected Plant',
		editable : true,
		change: function(oEvent){
		 //alert(oEvent.oSource.getSelectedItemId());
		}
	})

	oMatrixAF.createRow( oLabelPLT_ID,oDropBoxSelPlant );

	oLabel_CLID = new sap.ui.commons.Label({
		id : 'L-CLID',
		text : ' CLOCK ID'
	});

	var oInput_CLID = new sap.ui.commons.TextField('input_clid');

	oMatrixAF.createRow( oLabel_CLID,oInput_CLID );

	oLabel_FNAME = new sap.ui.commons.Label({
		id : 'L-FNAME',
		text : ' FIRST NAME'
	});

	var oInput_FNAME = new sap.ui.commons.TextField('input_fname');

	oMatrixAF.createRow( oLabel_FNAME,oInput_FNAME );

	oLabel_LNAME = new sap.ui.commons.Label({
		id : 'L-LNAME',
		text : ' LAST NAME'
	});

	var oInput_LNAME = new sap.ui.commons.TextField('input_lname');

	oMatrixAF.createRow( oLabel_LNAME,oInput_LNAME );

	oLabel_ACTIVE = new sap.ui.commons.Label({
		id : 'L-ACTIVE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVE = new sap.ui.commons.CheckBox('checkbox_active',{
		checked : false
	});

	oMatrixAF.createRow( oLabel_ACTIVE,oCheckbox_ACTIVE );

	oMatrixA.createRow( oMatrixAF );

	var oButton4 = new sap.ui.commons.Button({
		id : 'B-AddOperator',
		tooltip : "Submit Operator Data",
		text : 'SUBMIT',
		enabled: true
	});
	oButton4.attachPress(doAddOperator);

	oMatrixA.createRow( oButton4 );

	var oOverlayContainerAdd = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerAdd.setHeight('360px');
	oOverlayContainerAdd.setWidth('700px');
	oOverlayContainerAdd.addContent(oMatrixA);
	// ******************************************************************************************************************************************************************
	function updateSelPlant(idPlant) {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PLANTS/TRANSACTIONS/getSelectedPlant_xAcute&Param.1="+idPlant+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonPlantsList);
		function parseJsonPlantsList(jsondata){
			oDropBoxSelPlant.destroyItems();

			for (var i=0; i<jsondata.length; i++){
				//	alert(jsondata[i]['PLANT'] + '   ' + jsondata[i]['DESC']);
				item_id = jsondata[i]['ID'];
				item_key = jsondata[i]['PLANT'];
				item_text = jsondata[i]['DESC'];
				oItem = new sap.ui.core.ListItem("plt_"+item_id,{
					key : item_key,
					text : item_text });
				oDropBoxSelPlant.addItem(oItem);
			}
			oDropBoxSelPlant.setSelectedKey(idPlant);
		}
	}	
	// ******************************************************************************************************************************************************************
	function doAdd() {
		if(!oOverlayContainerAdd.isOpen()){
			updateSelPlant(plant2Access);
          			oCore.byId("input_clid").setValue("");
          			oCore.byId("input_fname").setValue("");
          			oCore.byId("input_lname").setValue("");
          			oCore.byId("checkbox_active").setChecked(false);
			oOverlayContainerAdd.open();
		}
	}
	// ******************************************************************************************************************************************************************
	function doAddOperator() {
		// retrieve values
		var endplant = oDropBoxSelPlant.getSelectedItemId();
		var result = endplant.substring(4,endplant.length);
		var input_plantID = result;
		var input_operatorCLID = oCore.byId("input_clid").getValue();
		var input_operatorFNAME = oCore.byId("input_fname").getValue();
		var input_operatorLNAME = oCore.byId("input_lname").getValue();
		var input_userNAME = document.getElementById("user_name").value;
		if (oCore.byId("checkbox_active").getChecked() ) {
			var input_operatorACTIVE = 1;
		} else {
			var input_operatorACTIVE = 0;
		}
		if(input_plantID=="0") {
			alert("Please Select Plant ..");
			oCore.byId("SelPlant").focus();
		} else {
			if(input_operatorCLID=="") {
				alert("Please Input Operator CLOCK ID ..");
				oCore.byId("input_clid").focus();
			} else {
				if(input_operatorFNAME=="") {
					alert("Please Input Operator First Name ..");
					oCore.byId("input_fname").focus();
				} else {
					if(input_operatorLNAME=="") {
						alert("Please Input Operator Last Name ..");
						oCore.byId("input_lname").focus();
					} else {
						// all good. Try to write them ..
						var Param1 = escapeSQLString(input_plantID);
						var Param2 = escapeSQLString(input_operatorCLID);
						var Param3 = escapeSQLString(input_operatorFNAME);
						var Param4 = escapeSQLString(input_operatorLNAME);
						var Param5 = escapeSQLString(input_operatorACTIVE);
						var Param6 = escapeSQLString(input_userNAME);
       						var oReqData;
      						if (window.XMLHttpRequest) {
     	     						oReqData = new XMLHttpRequest();
      						}
						if (oReqData != null) {
							var timestamp = new Date().getTime();
							var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6);
						 	// alert(paramStr);
							var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/add_Operator&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
						 	// alert(queryStr);
							oReqData.open("GET", queryStr, true); 
							oReqData.onreadystatechange = function() {
								if (oReqData.readyState == 4) 
								if (oReqData.status == 200) {
									// Successful -- rebuild the screen
							 		updateTableOperators(selectedPlant);	
							 		oOverlayContainerAdd.close();	
								} else {
									// Not Successful -- alert the user
									alert("Error: " + oReqData.statusText);
								}
							}
							oReqData.send();
       						} else {
          							window.alert("Error creating XmlHttpRequest object.");
       						}
					}
				}
			}
		}
	}
	// ******************************************************************************************************************************************************************
	// Create Edit Operator Overlay
	var oMatrixE = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixE',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});
	var oMatrixEF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['295px','385px'] 
	});

	var oTitleE = new sap.ui.commons.Label({
		id : 'L-EditOperator',
		text : 'EDIT OPERATOR'
	});
	oMatrixE.createRow( oTitleE );

	oLabel_CLIDE = new sap.ui.commons.Label({
		id : 'L-CLIDE',
		text : ' CLOCK ID'
	});

	var oInput_CLIDE = new sap.ui.commons.TextField('input_clide');
	oInput_CLIDE.setEditable(false);

	oMatrixEF.createRow( oLabel_CLIDE,oInput_CLIDE );

	var oLabelPLT_IDE = new sap.ui.commons.Label({
		id : 'L-PLTIDE',
		text : ' SELECTED PLANT '
	});

       	var oDropBoxSelPlantE = new sap.ui.commons.DropdownBox({
		id : "SelPlantE",
		tooltip : 'Selected Plant',
		editable : true,
		change: function(oEvent){
		 //alert(oEvent.oSource.getSelectedKey());
		}
	})

	oDropBoxSelPlantE.setEditable(false);
	oMatrixEF.createRow( oLabelPLT_IDE,oDropBoxSelPlantE );

	oLabel_FNAMEE = new sap.ui.commons.Label({
		id : 'L-FNAMEE',
		text : ' FIRST NAME'
	});

	var oInput_FNAMEE = new sap.ui.commons.TextField('input_fnamee');

	oMatrixEF.createRow( oLabel_FNAMEE,oInput_FNAMEE );

	oLabel_LNAMEE = new sap.ui.commons.Label({
		id : 'L-LNAMEE',
		text : ' LAST NAME'
	});

	var oInput_LNAMEE = new sap.ui.commons.TextField('input_lnamee');

	oMatrixEF.createRow( oLabel_LNAMEE,oInput_LNAMEE );

	oLabel_ACTIVEE = new sap.ui.commons.Label({
		id : 'L-ACTIVEE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVEE = new sap.ui.commons.CheckBox('checkbox_activee',{
		checked : false
	});

	oMatrixEF.createRow( oLabel_ACTIVEE,oCheckbox_ACTIVEE );

	oMatrixE.createRow( oMatrixEF );

	var oButton5 = new sap.ui.commons.Button({
		id : 'B-EditOperator',
		tooltip : "Submit Operator Data",
		text : 'SUBMIT',
		enabled: true
	});
	oButton5.attachPress(doEditOperator);

	oMatrixE.createRow( oButton5 );

	var oOverlayContainerEdit = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerEdit.setHeight('360px');
	oOverlayContainerEdit.setWidth('700px');
	oOverlayContainerEdit.addContent(oMatrixE);

	// ******************************************************************************************************************************************************************
	function updateSelPlantE(allPlants,idPlant) {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PLANTS/TRANSACTIONS/getSelectedPlantE_xAcute&Param.1="+allPlants+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonStationsList);
		function parseJsonStationsList(jsondata){
			oDropBoxSelPlantE.destroyItems();

			for (var i=0; i<jsondata.length; i++){
				//	alert(jsondata[i]['ID'] + '   ' + jsondata[i]['DESC']);
				item_id = jsondata[i]['ID'];
				item_key = jsondata[i]['ID'];
				item_text = jsondata[i]['DESC'];
				oItem = new sap.ui.core.ListItem("item_"+item_id,{
					key : item_key,
					text : item_text });
				oDropBoxSelPlantE.addItem(oItem);
			}
			oDropBoxSelPlantE.setSelectedKey(idPlant);
		}
	}	

	// ******************************************************************************************************************************************************************
	function doEdit() {
		if(!oOverlayContainerEdit.isOpen()){

			updateSelPlantE(selectedPlant,plant_ID);
          			oCore.byId("input_clide").setValue(clock_ID);
          			oCore.byId("input_fnamee").setValue(operator_FNAME);
          			oCore.byId("input_lnamee").setValue(operator_LNAME);
			if (operator_ACT_src=="Common/img/blank.png") {
          				oCore.byId("checkbox_activee").setChecked(false);
			} else {
          				oCore.byId("checkbox_activee").setChecked(true);
			}
			oOverlayContainerEdit.open();
		}
	}
	// ******************************************************************************************************************************************************************
	function doEditOperator() {
		var input_plantID = oCore.byId("SelPlantE").getSelectedKey();
		var input_operatorCLID = oCore.byId("input_clide").getValue();
 		var input_operatorFNAME = oCore.byId("input_fnamee").getValue();
		var input_operatorLNAME = oCore.byId("input_lnamee").getValue();
		if (oCore.byId("checkbox_activee").getChecked() ) {
			var input_operatorACTIVE = 1;
		} else {
			var input_operatorACTIVE = 0;
		}
		var input_userNAME = document.getElementById("user_name").value;
		if(!input_plantID>0) {
			alert("Please Select Plant ..");
			oCore.byId("SelPlantE").focus();
		} else {
			if(input_operatorCLID=="") {
				alert("Please Input Operator Clock ID ..");
				oCore.byId("input_clide").focus();
			} else {
				if(input_operatorFNAME=="") {
					alert("Please Input Operator First Name ..");
					oCore.byId("input_fnamee").focus();
				} else {
					if(input_operatorLNAME=="") {
						alert("Please Input Operator Last Name ..");
						oCore.byId("input_lnamee").focus();
					} else {
						// all good. Try to write them ..
						var Param1 = escapeSQLString(input_plantID);
						var Param2 = escapeSQLString(input_operatorCLID);
						var Param3 = escapeSQLString(input_operatorFNAME);
						var Param4 = escapeSQLString(input_operatorLNAME);
						var Param5 = escapeSQLString(input_operatorACTIVE);
						var Param6 = escapeSQLString(input_userNAME);
       						var oReqData;
      						if (window.XMLHttpRequest) {
     	     						oReqData = new XMLHttpRequest();
      						}
						if (oReqData != null) {
							var timestamp = new Date().getTime();
							var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6); 
							// alert(paramStr);
							var queryStr = 	"/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/upd_Operator&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
							// alert(queryStr);
							oReqData.open("GET", queryStr, true); 
							oReqData.onreadystatechange = function() {
								if (oReqData.readyState == 4) 
								if (oReqData.status == 200) {
									// Successful -- rebuild the screen
							 		updateTableOperators(selectedPlant);	
							 		oOverlayContainerEdit.close();	
								} else {
									// Not Successful -- alert the user
									alert("Error: " + oReqData.statusText);
								}
							}
							oReqData.send();
       						} else {
          							window.alert("Error creating XmlHttpRequest object.");
       						}
					}
				}
			}
		}
	}
	// ******************************************************************************************************************************************************************
	function doDelete() {
		// Retrieve the selected row
		var Param1 = escapeSQLString(clock_ID);
		var Param2 = escapeSQLString(plant_ID);
		var Param3 = escapeSQLString(operator_FNAME);
       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);  
			// alert(paramStr);
			var queryStr = 	"/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/del_Operator&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					// Successful -- rebuild the screen
					updateTableOperators(selectedPlant);	
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	}
	// ******************************************************************************************************************************************************************
	// Create Assign Station Operator Overlay
	var oMatrixS = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixS',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});

	var oMatrixST = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixST',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['345px','345px'] 
	});

	var oTitleSL = new sap.ui.commons.Label({
		id : 'L-SOperator',
		text : 'OPERATOR:'
	});
	oMatrixS.createRow( oTitleSL );

	//Create an instance of the table control
	var oTableSL = new sap.ui.table.Table({
		id : "tbl_stationlist",
		visibleRowCount: 7,
		firstVisibleRow: 0,
		width: "330px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Multi
	});

	var oModelSL =  new sap.ui.model.xml.XMLModel();

	// ******************************************************************************************************************************************************************
	function createColumnsStationsList() {
		//Define the columns and the control templates to be used
		oTableSL.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ID"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "idStation"),
			sortProperty: "idStations",
			filterProperty: "idStations",
			width: "50px",
			hAlign: "Center"
		}));
		oTableSL.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "STATIONS LIST"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "stationName"),
			sortProperty: "stationName",
			filterProperty: "stationName",
			width: "100px",
			hAlign: "Center"
		}));
		oTableSL.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ACTIVE"}),
			template: new sap.ui.commons.Image().bindProperty("src", "src"),
			width: "75px",
			hAlign: "Center"
		}));
	}

	// ******************************************************************************************************************************************************************
	function createTableStationsList() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
		// alert(selectedPlant); 
 		oModelSL.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_StationsList&Param.1="+selectedPlant+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModelSL.getXML());
		createColumnsStationsList();
		oTableSL.setModel(oModelSL);
		oTableSL.bindRows("/Rowset/Row");
	}
	setTimeout(createTableStationsList(), 1000);

	// ******************************************************************************************************************************************************************
	function updateTableStationsList() {
		oTableSL.clearSelection();
		var timestamp = new Date().getTime();
		// alert(selectedPlant); 
 		oModelSL.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_StationsList&Param.1="+selectedPlant+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTableSL.getModel().refresh(true);
	}

	//Create an instance of the table control
	var oTableAS = new sap.ui.table.Table({
		id : "tbl_assignstation",
		visibleRowCount: 7,
		firstVisibleRow: 0,
		width: "330px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Multi
	});

	var oModelAS =  new sap.ui.model.xml.XMLModel();

	// ******************************************************************************************************************************************************************
	function createColumnsAssignStations() {
		//Define the columns and the control templates to be used
		oTableAS.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ASSIGNED STATIONS"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "stationName"),
			sortProperty: "stationName",
			filterProperty: "stationName",
			width: "100px",
			hAlign: "Center"
		}));
		oTableAS.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ACTIVE"}),
			template: new sap.ui.commons.Image().bindProperty("src", "src"),
			width: "75px",
			hAlign: "Center"
		}));
		oTableAS.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ID STATION"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "idStation"),
			sortProperty: "idStation",
			filterProperty: "idStation",
			width: "0px",
			hAlign: "Center"
		}));
		oTableAS.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ID PLANT"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "idPlant"),
			sortProperty: "idPlant",
			filterProperty: "idPlant",
			width: "0px",
			hAlign: "Center"
		}));
	}

	// ******************************************************************************************************************************************************************
	function createTableAssignStations() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
		// alert(selectedPlant); 
 		oModelAS.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_AssignStations&Param.1="+selectedPlant+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModelAS.getXML());
		createColumnsAssignStations();
		oTableAS.setModel(oModelAS);
		oTableAS.bindRows("/Rowset/Row");
	}
	setTimeout(createTableAssignStations(), 1000);

	// ******************************************************************************************************************************************************************
	function updateTableAssignStationsList() {
		oTableAS.clearSelection();
		var timestamp = new Date().getTime();
 		oModelAS.loadData("/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/get_AssignStations&Param.1="+selectedPlant+"&Param.2="+oModel.getProperty("idClock", oTable.getContextByIndex(oTable.getSelectedIndex()))+"&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTableAS.getModel().refresh(true);
	}
	// ******************************************************************************************************************************************************************
	oMatrixST.createRow( oTableSL,oTableAS );

	var oButtonAddOperatorStations = new sap.ui.commons.Button({
		id : 'B-AddOperatorStations',
		tooltip : "Add Stations",
		text : 'ADD',
		enabled: true
	});
	oButtonAddOperatorStations.attachPress(doAddOperatorStations);
	// ******************************************************************************************************************************************************************
	function doAddOperatorStations() {
		arr_IDStation = [];
		var indices = oTableSL.getSelectedIndices();
		if (indices.length == 0) {
			alert("Please select items to add");
		}
		for (var i = 0; i < indices.length; i++) {
			var idx = indices[i];
			var cxt = oTableSL.getContextByIndex(idx);
			arr_IDStation.push(oModelSL.getProperty("idStation", cxt));
		}
		arr_IDStation.join(',');

		var Param1 = escapeSQLString(arr_IDStation);
		var Param2 = escapeSQLString(plant_ID);
		var Param3 = escapeSQLString(clock_ID);

       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
		 	// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/add_Operator_Station&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					updateTableAssignStationsList();
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}	
	}
	// ******************************************************************************************************************************************************************
	var oButtonRemoveOperatorStations = new sap.ui.commons.Button({
		id : 'B-RemoveOperatorStations',
		tooltip : "Remove Stations",
		text : 'REM',
		enabled: true
	});
	oButtonRemoveOperatorStations.attachPress(doRemOperatorStations);
	// ******************************************************************************************************************************************************************
	function doRemOperatorStations() {
		arr_IDStation = [];
		var indices = oTableAS.getSelectedIndices();
		if (indices.length == 0) {
			alert("Please select items to remove");
		}
		for (var i = 0; i < indices.length; i++) {
			var idx = indices[i];
			var cxt = oTableAS.getContextByIndex(idx);
			arr_IDStation.push(oModelAS.getProperty("idStation", cxt));
		}
		arr_IDStation.join(',');

		var Param1 = escapeSQLString(arr_IDStation);
		var Param2 = escapeSQLString(plant_ID);
		var Param3 = escapeSQLString(clock_ID);

       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
		 	// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/OPERATORS/QUERIES/rem_Operator_Station&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					updateTableAssignStationsList();
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	}
	// ******************************************************************************************************************************************************************
	oMatrixST.createRow( oButtonAddOperatorStations,oButtonRemoveOperatorStations );

	oMatrixS.createRow( oMatrixST );

	var oOverlayContainerStations = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerStations.setHeight('360px');
	oOverlayContainerStations.setWidth('705px');
	oOverlayContainerStations.addContent(oMatrixS);

	// ******************************************************************************************************************************************************************
	function doAssignStations() {
		oCore.byId("L-SOperator").setText("OPERATOR: " + toTitleCase(operator_FNAME) + " " + toTitleCase(operator_LNAME) + " CLOCK ID: " + clock_ID);
		oTableSL.clearSelection();
		oTableAS.clearSelection();
		updateTableAssignStationsList();
		if(!oOverlayContainerStations.isOpen()){
			oOverlayContainerStations.open();
		}
	}
	// ******************************************************************************************************************************************************************
	</script>
</head>
<body onLoad="roleSecurity()">
<input id="user_roles" type="hidden" value="{IllumLoginRoles}" style="display:block;width:1000px;" readonly />
<input id="user_role" type="hidden" value="{ROLE}" style="display:block;width:1000px;" readonly />
<input id="user_name" type="hidden" value="{IllumLoginName}" style="display: block;width:1000px;" readonly />
<input id="user_height" type="hidden" value="{HEIGHT}" style="display: block;width:100px;" readonly />
<input id="user_address" type="hidden" value="{Machine}" style="display:block;width:1000px;" readonly />
<div id="app_header" >
<div id="app_title">OPERATORS</div>
<div id="app_menu"></div>
<div id="page_title">DEFAULT SCREEN</div>
</div>
<div id="mesm_content" ></div>
</body>
</html>