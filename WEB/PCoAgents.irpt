<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>CT MODULE</title>
	<style>
	body {
		background-image: url("Common/img/logo.png");
		background-size: 180px;
		background-repeat: no-repeat;
    		background-attachment: fixed;
    		background-position: right 40px top 30px;
		font-family: Arial;
	}
	#app_header {
 		padding: 10px;
 		padding-left: 40px;
 		padding-top: 15px;
 		padding-bottom: 0px;
		height:80px;
		width:400px;
		text-align: center;
	}
	#app_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		color: #007dc0;
		margin-bottom; 20px;
	}
	#app_menu {
		width:400px;
		text-align: center;
		font-family: Arial,Helvetica,sans-serif;
	}
	#page_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:28px;
		color: #cfcfcf;
	}
	#mesm_content {
 		padding: 30px;
 		padding-top: 40px;
	}

	#__button0, #__button1, #__button2 {
		margin-top:10px;
		margin-left:5px;
		margin-right:5px;
	}
	
	#MatrixT, #MatrixB {
		margin:10px auto;
	}

	#B-Add, #B-Edit, #B-Delete, #B-MvUp, #B-MvDn {
		width:100px;
		height:35px;
		font-size:14px;
	}

	#__cell2, #__cell3, #__cell4, #__cell5, #__cell6 {
		text-align:center;
	}

	#__cell8, #__cell24,#__cell25, #__cell41 {
		text-align:center;
		height: 36px;
	}

	#__cell9, #__cell11, #__cell13, #__cell15, #__cell18, #__cell20, #__cell22, #__cell26, #__cell28, #__cell30, #__cell32, #__cell35, #__cell37, #__cell39 {
		padding:10px;
		padding-right:20px;
		text-align:right;
	}
	#L-MSG, #L-MSGE, #L-plcMSG, #L-plcMSGE, #L-opcMSG, #L-opcMSGE {
		margin-top:8px;
		text-align:right;
	}
	#L-AddAgent, #L-EditAgent {
		margin-top:20px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		height:35px;
		color: #007dc0;
	}
	#B-AddAgent, #B-TstAgent, #B-StartAgent, #B-StopAgent, #B-RestartAgent, #B-EditAgent, #B-TstAgentE, #B-StartAgentE, #B-StopAgentE, #B-RestartAgentE {
		width:100px;
		height:35px;
		font-size:14px;
		margin: 10px;
	}
	#input_port , #input_porte {
		width:60px;
	}
	#i1, #i1e, #iplc1, #iplc1e, #iopc1, #iopc1e {
		margin-top:4px;
	}
	</style>

	<script id="sap-ui-bootstrap"
		src="/sapui5/resources/sap-ui-core.js"
		data-sap-ui-theme="sap_goldreflection"
		data-sap-ui-libs="sap.ui.core,sap.ui.commons,sap.ui.table,sap.ui.ux3"
		data-sap-ui-language="en" >
	</script>
	<script type="text/javascript" src="Common/js/default.js"></script>

	<script type="text/javascript" id="app-init">
	// ******************************************************************************************************************************************************************
	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	// Initialize screen
	var nrRows = 13;
	var selectedIndex =  -1;
	// ******************************************************************************************************************************************************************
	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var recordID = ""; 
	var pcoServerID = "";
	var agentName = "";
	var opcState = "";
	var opcLastGoodResponse = "";
	var opcLastBadResponse = "";
	var opcLastRespMessage = "";
	var plcName = "";
	var plcState = "";
	var plcLastGoodResponse = "";
	var plcLastBadResponse = "";
	var plcLastRespMessage = "";
	var agentActive = "";
	var agentLastGoodResponse = "";
	var agentLastBadResponse = "";
	var ageentLastRespMessage = "";
	var agentACT_src = "";
	var agentSTS_src = "";
	var sortOrder = "";
	var minSortID = "";
	var maxSortID = "";
	var agentCreatedBy = "";
	var agentCreatedOn = "";
	var agentModifiedBy = "";
	var agentModifiedOn = "";
	// ****************************************************************************************************************************************************
	function roleSecurity() {
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "MESM_" + document.getElementById("user_role").value;
		// alert(role2Access);
 		if(myRoles.indexOf(role2Access)<0) {
			window.location.assign("security.irpt");
		 } else {
			var roleString = document.getElementById("user_role").value;
			var roleArray = roleString.split("_");
			level2Access = roleArray[0]; 
				// alert("level : " + level2Access);
			plant2Access =  roleArray[1];
				// alert("plant : " + plant2Access);
			document.getElementById("page_title").innerHTML=role2Access;

			// enable homepage
			oCore.byId("item3-0-3").setEnabled(true);
			// show menus
			oMenuButton1.placeAt("app_menu");
			oMenuButton2.placeAt("app_menu");
			oMenuButton3.placeAt("app_menu");

			var role_ADM = "MESM_ADM_"+plant2Access;
			var role_ENG = "MESM_ENG_"+plant2Access;
			var role_SUP = "MESM_SUP_"+plant2Access;
			var role_OPS = "MESM_OPS_"+plant2Access;

			switch(role2Access) {
			case "MESM_ADM_ALL":

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Shifts Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_ADM:
				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable   Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM PLANT "+plant2Access;
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case "MESM_OPS_ALL":
				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_OPS:
		// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS PLANT "+plant2Access;				
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			default:
				alert("MES Module Role Unknown: " + role2Access);
				break;
			}
		  }
	}

	// ************************************	MENU		******************************************************************************************************************************

	var timestamp = new Date().getTime();

	var jsFile=document.createElement('script');
	jsFile.setAttribute("type","text/javascript");
	jsFile.setAttribute("src", "Common/js/menu.js?ts="+timestamp);
	document.getElementsByTagName("head")[0].appendChild(jsFile);

	// ****************************************************************************************************************************************************
	function createTablePCoAgents() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/get_PCoAgents&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModel.getXML());
		createColumnsPCoAgents();
		oTable.setModel(oModel);
		oTable.bindRows("/Rowset/Row");
	};

	// ****************************************************************************************************************************************************
	function updateTablePCoAgents() {
		oTable.clearSelection();
		var timestamp = new Date().getTime();
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/get_PCoAgents&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTable.getModel().refresh(true);
	};
	// ****************************************************************************************************************************************************
	function createColumnsPCoAgents() {
		//Define the columns and the control templates to be used
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "STATUS"}),
			template: new sap.ui.commons.Image().bindProperty("src", "agentStats"),
			width: "75px",
			hAlign: "Center"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " AGENT"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "agentName"),
			sortProperty: "serverName",
			filterProperty: "serverName",
			width: "150px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " PLC ID"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "plcName"),
			sortProperty: "plcName",
			filterProperty: "plcName",
			width: "75px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "SERVER"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "pcoServerName"),
			sortProperty: "pcoServerName",
			filterProperty: "pcoServerName",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "OPC"}),
			template: new sap.ui.commons.Image().bindProperty("src", "opcStats"),
			width: "40px",
			hAlign: "Center"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "PLC"}),
			template: new sap.ui.commons.Image().bindProperty("src", "plcStats"),
			width: "40px",
			hAlign: "Center"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "MODIFIED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
			sortProperty: "ModifiedBy",
			filterProperty: "ModifiedBy",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "MODIFIED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
			sortProperty: "ModifiedOn",
			filterProperty: "ModifiedOn",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CREATED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
			sortProperty: "CreatedBy",
			filterProperty: "CreatedBy",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CREATED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty: "CreatedOn",
			filterProperty: "CreatedOn",
			width: "125px"
		}));
		oTable.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ACTIVE"}),
			template: new sap.ui.commons.Image().bindProperty("src", "src"),
			width: "75px",
			hAlign: "Center"
		}));
	};
	// ****************************************************************************************************************************************************
	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixT',
		layoutFixed : true,
		width: '1200px',
		columns : 1,
		widths : ['1200px'] 
	});

	//Create an instance of the table control
	var oTable = new sap.ui.table.Table({
		visibleRowCount: nrRows,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1200px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});

	// ******************************************************************************************************************************************************************
	oTable.attachRowSelectionChange(function(oEvent) {
		// Retrieve the selected row
		var selIndex = oTable.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex  >= 0) {
			// Retrieve the selected row
			var selectedRow = oTable.getRows()[selIndex];
			// sap.ui.commons.MessageBox.alert(selectedRow);
			var selectedRowContext = oEvent.getParameter("rowContext");
 	 		recordID = oModel.getProperty("recordID", selectedRowContext);    
			pcoServerID = oModel.getProperty("pcoServerID", selectedRowContext);    
			agentName = oModel.getProperty("agentName", selectedRowContext);    
			opcState = oModel.getProperty("opcState", selectedRowContext);    
			opcLastGoodResponse = oModel.getProperty("opcLastGoodResponse", selectedRowContext);    
			opcLastBadResponse = oModel.getProperty("opcLastBadResponse", selectedRowContext);    
			opcLastRespMessage = oModel.getProperty("opcLastRespMessage", selectedRowContext);    
			plcName = oModel.getProperty("plcName", selectedRowContext);    
			plcState = oModel.getProperty("plcState", selectedRowContext);    
			plcLastGoodResponse = oModel.getProperty("plcLastGoodResponse", selectedRowContext);    
			plcLastBadResponse = oModel.getProperty("plcLastBadResponse", selectedRowContext);  
			plcLastRespMessage = oModel.getProperty("plcLastRespMessage", selectedRowContext);    
			agentActive = oModel.getProperty("agentActive", selectedRowContext);    
			agentLastGoodResponse = oModel.getProperty("agentLastGoodResponse", selectedRowContext);    
			agentLastBadResponse = oModel.getProperty("agentLastBadResponse", selectedRowContext);    
			agentLastRespMessage = oModel.getProperty("agentLastRespMessage", selectedRowContext);    
			agentACT_src = oModel.getProperty("src", selectedRowContext);    
			agentSTS_src = oModel.getProperty("agentStats", selectedRowContext);    
			opcSTS_src = oModel.getProperty("opcStats", selectedRowContext);    
			plcSTS_src = oModel.getProperty("plcStats", selectedRowContext);    
			sortOrder = oModel.getProperty("sortOrder", selectedRowContext);    
			minSortID = oModel.getProperty("minSortID", selectedRowContext);    
			maxSortID = oModel.getProperty("maxSortID", selectedRowContext);    
			agentCreatedBy = oModel.getProperty("CreatedBy", selectedRowContext);    
			agentCreatedOn = oModel.getProperty("CreatedOn", selectedRowContext);    
			agentModifiedBy = oModel.getProperty("ModifiedBy", selectedRowContext);    
			agentModifiedOn = oModel.getProperty("ModifiedOn", selectedRowContext);    
			// alert ("Plant " + plantSAP_ID + " selected");
			oButton1.setEnabled(false); 
			oButton2.setEnabled(true);
			oButton3.setEnabled(true);
			if(sortOrder>minSortID)
				oButton4.setEnabled(true);
			else
				oButton4.setEnabled(false);
			if(sortOrder<maxSortID)
				oButton5.setEnabled(true);
			else
				oButton5.setEnabled(false);
		} else {
			oButton1.setEnabled(true);
			oButton2.setEnabled(false);
			oButton3.setEnabled(false);
			oButton4.setEnabled(false);
			oButton5.setEnabled(false);
			selectedIndex =  -1;
 	 		recordID = ""; 
			pcoServerID = "";
			agentName = "";
			opcState = "";
			opcLastGoodResponse = "";
			opcLastBadResponse = "";
			opcLastRespMessage = "";
			plcName = "";
			plcState = "";
			plcLastGoodResponse = "";
			plcLastBadResponse = "";
			plcLastRespMessage = "";
			agentActive = "";
			agentLastGoodResponse = "";
			agentLastBadResponse = "";
			agentLastRespMessage = "";
			agentACT_src = "";
			agentSTS_src = "";  
			opcSTS_src = "";
			plcSTS_src = "";
			sortOrder = "";
			minSortID = "";
			maxSortID = "";
			agentCreatedBy = "";
			agentCreatedOn = "";
			agentModifiedBy = "";
			agentModifiedOn = "";
			// alert ("No Selection ..");
		}
	});

	var oModel =  new sap.ui.model.xml.XMLModel();
	createTablePCoAgents();
	//Bring the table onto the UI 
	oMatrixT.createRow(oTable);
	// ******************************************************************************************************************************************************************
	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixB',
		layoutFixed : true,
		width: '1200px',
		columns : 7,
		widths : ['225px','150px','150px','150px','150px','150px','225px'] 
	});

	var oButton1 = new sap.ui.commons.Button({
		id : 'B-Add',
		text : 'Add',
		enabled: true
	});
	oButton1.attachPress(doAdd);
	var oButton2 = new sap.ui.commons.Button({
		id : 'B-Edit',
		text : 'Edit',
		enabled: false
	});
	oButton2.attachPress(doEdit);
	var oButton3 = new sap.ui.commons.Button({
		id : 'B-Delete',
		text : 'Delete',
		enabled: false
	});
	oButton3.attachPress(doDelete);
	var oButton4 = new sap.ui.commons.Button({
		id : 'B-MvUp',
		text : 'Move Up',
		enabled: false
	});
	oButton4.attachPress(doMvUp);
	var oButton5 = new sap.ui.commons.Button({
		id : 'B-MvDn',
		text : 'Move Down',
		enabled: false
	});
	oButton5.attachPress(doMvDn);
	oMatrixB.createRow('', oButton1, oButton2, oButton3, oButton4, oButton5, '');
	// ******************************************************************************************************************************************************************
	// Create Add Overlay
	var oMatrixA = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixA',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});

	var oMatrixAF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixAF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['280px','400px'] 
	});

	var oTitleA = new sap.ui.commons.Label({
		id : 'L-AddAgent',
		text : 'ADD PCo AGENT'
	});
	oMatrixA.createRow( oTitleA );

	oLabel_NAME = new sap.ui.commons.Label({
		id : 'L-NAME',
		text : ' AGENT NAME'
	});

	var oInput_NAME = new sap.ui.commons.TextField('input_name');

	oMatrixAF.createRow( oLabel_NAME,oInput_NAME );

	oLabel_PLCNAME = new sap.ui.commons.Label({
		id : 'L-PLCNAME',
		text : ' PLC ID'
	});

	var oInput_PLCNAME = new sap.ui.commons.TextField('input_plcname');

	oMatrixAF.createRow( oLabel_PLCNAME,oInput_PLCNAME );

	oLabel_SERVER = new sap.ui.commons.Label({
		id : 'L-SERVER',
		text : ' PCO SERVER'
	});

       	var oDropdownBox_SERVER = new sap.ui.commons.DropdownBox({
		id : "dbox_server",
		editable : true,
		width : '135px',
		change: function(oEvent){
		 //alert(oEvent.oSource.getSelectedKey());
		}
	});

	// ****************************************************************************************************************************************************
	function updateServers() {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/get_PCoServers&ts="+timestamp+"&Content-Type=text/xml", parseJsonServers);
	
		function parseJsonServers(jsondata){
			oDropdownBox_SERVER.destroyItems();
			item_key = "0";
			item_text = "Please Select ..";
			oItem = new sap.ui.core.ListItem({
				key : item_key,
				text : item_text });
			oItem.setAdditionalText("0");
			oDropdownBox_SERVER.addItem(oItem);
			for (var i=0; i<jsondata.length; i++){
				//alert(jsondata[i]['recordID'] + '   ' + jsondata[i]['typeName']);
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['serverName'];
				oItem = new sap.ui.core.ListItem({
					key : item_key,
					text : item_text });
				oItem.setAdditionalText(jsondata[i]['sortOrder']);
				oDropdownBox_SERVER.addItem(oItem);
			}
		}
	}
	// ****************************************************************************************************************************************************
	oMatrixAF.createRow( oLabel_SERVER,oDropdownBox_SERVER );

	oLabel_ACTIVE = new sap.ui.commons.Label({
		id : 'L-ACTIVE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVE = new sap.ui.commons.CheckBox('checkbox_active',{
		checked : false
	});

	oMatrixAF.createRow( oLabel_ACTIVE,oCheckbox_ACTIVE );

	oMatrixA.createRow( oMatrixAF );

	oLabel_STATUS = new sap.ui.commons.Label({
		id : 'L-STATUS',
		text : ' AGENT STATUS'
	});

	var oImage = new sap.ui.commons.Image("i1");
	oImage.setDecorative(false);

	oLabel_MSG = new sap.ui.commons.Label({
		id : 'L-MSG',
		text : ' MESSAGE'
	});

	var oLayout_A = new sap.ui.layout.HorizontalLayout("Layout1", {
			content: [oImage, oLabel_MSG]
	});

	oMatrixAF.createRow( oLabel_STATUS,oLayout_A );

	oLabel_opcSTATUS = new sap.ui.commons.Label({
		id : 'L-opcSTATUS',
		text : ' OPC STATUS'
	});

	var oImageOPC = new sap.ui.commons.Image("iopc1");
	oImageOPC.setDecorative(false);

	oLabel_opcMSG = new sap.ui.commons.Label({
		id : 'L-opcMSG',
		text : ' OPC MESSAGE'
	});

	var oLayout_Aopc = new sap.ui.layout.HorizontalLayout("Layout1opc", {
			content: [oImageOPC, oLabel_opcMSG]
	});

	oMatrixAF.createRow( oLabel_opcSTATUS,oLayout_Aopc );

	oLabel_plcSTATUS = new sap.ui.commons.Label({
		id : 'L-plcSTATUS',
		text : ' PLC STATUS'
	});

	var oImagePLC = new sap.ui.commons.Image("iplc1");
	oImagePLC.setDecorative(false);

	oLabel_plcMSG = new sap.ui.commons.Label({
		id : 'L-plcMSG',
		text : ' PLC MESSAGE'
	});

	var oLayout_Aplc = new sap.ui.layout.HorizontalLayout("Layout1plc", {
			content: [oImagePLC, oLabel_plcMSG]
	});

	oMatrixAF.createRow( oLabel_plcSTATUS,oLayout_Aplc );

	var oButtonStart = new sap.ui.commons.Button({
		id : 'B-StartAgent',
		text : 'START',
		enabled: true
	});
	oButtonStart.attachPress(doStartAgent);

	var oButtonStop = new sap.ui.commons.Button({
		id : 'B-StopAgent',
		text : 'STOP',
		enabled: true
	});
	oButtonStop.attachPress(doStopAgent);

	var oButtonRestart = new sap.ui.commons.Button({
		id : 'B-RestartAgent',
		text : 'RESTART',
		enabled: true
	});
	oButtonRestart.attachPress(doRestartAgent);

	var oButton6 = new sap.ui.commons.Button({
		id : 'B-TstAgent',
		text : 'TEST',
		enabled: true
	});
	oButton6.attachPress(doTstAgent);

	var oButton7 = new sap.ui.commons.Button({
		id : 'B-AddAgent',
		text : 'SUBMIT',
		enabled: true
	});
	oButton7.attachPress(doAddAgent);

	var oLayout_AB = new sap.ui.layout.HorizontalLayout("Layout2", {
			// content: [oButtonStart, oButtonStop, oButtonRestart, oButton6, oButton7]
			content: [oButton6, oButton7]
	});

	oMatrixA.createRow( oLayout_AB );

	var oOverlayContainerAdd = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerAdd .setHeight('420px');
	oOverlayContainerAdd .setWidth('700px');
	oOverlayContainerAdd.addContent(oMatrixA);
	// ******************************************************************************************************************************************************************
	function doAdd() {
		updateServers();
		if(!oOverlayContainerAdd.isOpen()){
          			oCore.byId("input_name").setValue("");
          			oCore.byId("input_plcname").setValue("");
          			oCore.byId("dbox_server").setSelectedKey(0);
          			oCore.byId("L-MSG").setText("NOT TESTED");
          			oCore.byId("L-opcMSG").setText("NOT AVAILABLE");
          			oCore.byId("L-plcMSG").setText("NOT AVAILABLE");
          			oCore.byId("checkbox_active").setChecked(false);
			oOverlayContainerAdd.open();
		}
	};
	// ******************************************************************************************************************************************************************
	function doStartAgent() {
		alert("BEEP START");
		return;
	}
	// ******************************************************************************************************************************************************************
	function doStopAgent() {
		alert("BEEP STOP");
		return;
	}
	// ******************************************************************************************************************************************************************
	function doRestartAgent() {
		alert("BEEP RESTART");
		return;
	}
	// ******************************************************************************************************************************************************************
	function doTstAgent() {
		var agentStatus_id = -1;
		var agentMessage = "";
		var opcStatus_id = -1;
		var opcMessage = "";
		var plcStatus_id = -1;
		var plcMessage = "";
		var input_NAME = oCore.byId("input_name").getValue();
		var input_PLCNAME = oCore.byId("input_plcname").getValue();
		var input_SERVER = Number(oCore.byId("dbox_server").getSelectedKey());
		if(input_NAME=="") {
			alert("Please Input Agent Name ..");
			oCore.byId("input_name").focus();
		} else {
			if(input_PLCNAME=="") {
				alert("Please Input PLC ID ..");
				oCore.byId("input_plcname").focus();
			} else {
				if(input_SERVER==0) {
					alert("Please Select PCo Server ..");
					oCore.byId("dbox_server").focus();
				} else {
					// all good. Try to test it ..
					var Param1 = escapeSQLString(input_NAME);
					var Param2 = escapeSQLString(input_PLCNAME);
					var Param3 = escapeSQLString(input_SERVER);
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
					getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/tst_PCoAgent_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
					function parseJsonDataSet(jsondata){
						for (var i=0; i<jsondata.length; i++){
							agentStatus = Number(jsondata[i]['AGENT_STATUS']);
							agentMessage = jsondata[i]['AGENT_MESSAGE'];
							opcStatus = Number(jsondata[i]['OPC_STATUS']);
							opcMessage = jsondata[i]['OPC_MESSAGE'];
							plcStatus = Number(jsondata[i]['PLC_STATUS']);
							plcMessage = jsondata[i]['PLC_MESSAGE'];
						}
						if(agentStatus == -1) {
							// Agent Not Tested
								oImage.setSrc("Common/img/blue.png");
								oLabel_MSG.setText(" !! COULD NOT TEST !!");
						} else {
							if (agentStatus == 0) {
								// Agent State  - TRX Cannot Test
								oImage.setSrc("Common/img/blue.png");
								oLabel_MSG.setText(agentMessage);
							} else {
								if (agentStatus == 1) {
									// Agent State  - TRX Started
									oImage.setSrc("Common/img/green.png");
									oLabel_MSG.setText(agentMessage.toUpperCase());
									// update OPC Status
									if(opcStatus==0) {
										oImageOPC.setSrc("Common/img/red.png");
										oLabel_opcMSG.setText(opcMessage.toUpperCase());
									} else {
										oImageOPC.setSrc("Common/img/green.png");
										oLabel_opcMSG.setText(opcMessage.toUpperCase());
									}
									// update PLC Status
									if(plcStatus==0) {
										oImagePLC.setSrc("Common/img/red.png");
										oLabel_plcMSG.setText(plcMessage.toUpperCase());
									} else {
										oImagePLC.setSrc("Common/img/green.png");
										oLabel_plcMSG.setText(plcMessage.toUpperCase());
									}
								} else {
									if (agentStatus == 2) {
										// Agent State  - TRX Stopped
										oImage.setSrc("Common/img/grey.png");
										oLabel_MSG.setText(agentMessage.toUpperCase());
										oImageOPC.setSrc("Common/img/blue.png");
										oLabel_opcMSG.setText(opcMessage.toUpperCase());
										oImagePLC.setSrc("Common/img/blue.png");
										oLabel_plcMSG.setText(plcMessage.toUpperCase());
									} else {
										if (agentStatus == 3) {
											// Agent State  - TRX Faulted
											oImage.setSrc("Common/img/red.png");
											oLabel_MSG.setText(agentMessage.toUpperCase());
										  oImageOPC.setSrc("Common/img/blue.png");
										  oLabel_opcMSG.setText(opcMessage.toUpperCase());
										  oImagePLC.setSrc("Common/img/blue.png");
										  oLabel_plcMSG.setText(plcMessage.toUpperCase());
										} else {
											if (agentStatus == 4) {
											// Agent State  - TRX Unknown
											oImage.setSrc("Common/img/blue.png");
											oLabel_MSG.setText(agentMessage.toUpperCase());
											oImageOPC.setSrc("Common/img/blue.png");
											oLabel_opcMSG.setText(opcMessage.toUpperCase());
											oImagePLC.setSrc("Common/img/blue.png");
											oLabel_plcMSG.setText(plcMessage.toUpperCase());
											} else {
											// Agent State  - TRX Limbo
											oImage.setSrc("Common/img/yellow.png");
											oLabel_MSG.setText(agentMessage.toUpperCase());
											oImageOPC.setSrc("Common/img/blue.png");
											oLabel_opcMSG.setText(opcMessage.toUpperCase());
											oImagePLC.setSrc("Common/img/blue.png");
											oLabel_plcMSG.setText(plcMessage.toUpperCase());
											}
										}
									}
								}
							}
						}	
					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	function doAddAgent() {
		// retrieve values
		var input_NAME = oCore.byId("input_name").getValue();
		var input_PLCNAME = oCore.byId("input_plcname").getValue();
		var input_SERVER = Number(oCore.byId("dbox_server").getSelectedKey());
		var input_userNAME = document.getElementById("user_name").value;
		if (oCore.byId("checkbox_active").getChecked() ) {
			var input_ACTIVE = 1;
		} else {
			var input_ACTIVE = 0;
		}
		if(input_NAME=="") {
			alert("Please Input Agent Name ..");
			oCore.byId("input_name").focus();
		} else {
			if(input_PLCNAME=="") {
				alert("Please Input PLC ID ..");
				oCore.byId("input_plcname").focus();
			} else {
				if(input_SERVER==0) {
					alert("Please Select PCo Server  ..");
					oCore.byId("dbox_server").focus();
				} else {
				// all good. Try to write them ..
					var Param1 = escapeSQLString(input_NAME);
					var Param2 = escapeSQLString(input_PLCNAME);
					var Param3 = escapeSQLString(input_SERVER);
					var Param4 = escapeSQLString(input_ACTIVE);
					var Param5 = escapeSQLString(input_userNAME);
       					var oReqData;
      					if (window.XMLHttpRequest) {
     						oReqData = new XMLHttpRequest();
      					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5);
					 	// alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/add_PCoAgent&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";	
					 	// alert(queryStr);
						oReqData.open("GET", queryStr, true); 
						oReqData.onreadystatechange = function() {
							if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
								// Successful -- rebuild the screen
						 		updateTablePCoAgents();	
						 		oOverlayContainerAdd.close();	
							} else {
								// Not Successful -- alert the user
								alert("Error: " + oReqData.statusText);
							}
						}
						oReqData.send();
       					} else {
          						window.alert("Error creating XmlHttpRequest object.");
       					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	// Create Edit Overlay
	var oMatrixE = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixE',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});

	var oMatrixEF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['245px','435px'] 
	});

	var oTitleE = new sap.ui.commons.Label({
		id : 'L-EditAgent',
		text : 'EDIT PCo AGENT'
	});
	oMatrixE.createRow( oTitleE );


	oLabel_NAMEE = new sap.ui.commons.Label({
		id : 'L-NAMEE',
		text : ' AGENT NAME'
	});

	var oInput_NAMEE = new sap.ui.commons.TextField('input_namee');

	oMatrixEF.createRow( oLabel_NAMEE,oInput_NAMEE );

	oLabel_PLCNAMEE = new sap.ui.commons.Label({
		id : 'L-PLCNAMEE',
		text : ' PLC ID'
	});

	var oInput_PLCNAMEE = new sap.ui.commons.TextField('input_plcnamee');

	oMatrixEF.createRow( oLabel_PLCNAMEE,oInput_PLCNAMEE );

	oLabel_SERVERE = new sap.ui.commons.Label({
		id : 'L-SERVERE',
		text : ' PCO SERVER'
	});

       	var oDropdownBox_SERVERE = new sap.ui.commons.DropdownBox({
		id : "dbox_servere",
		editable : true,
		width : '135px',
		change: function(oEvent){
		 //alert(oEvent.oSource.getSelectedKey());
		}
	});

	// ****************************************************************************************************************************************************
	function updateServersE() {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/get_PCoServers&ts="+timestamp+"&Content-Type=text/xml", parseJsonServersE);
	
		function parseJsonServersE(jsondata){
			oDropdownBox_SERVERE.destroyItems();
			item_key = "0";
			item_text = "Please Select ..";
			oItem = new sap.ui.core.ListItem({
				key : item_key,
				text : item_text });
			oItem.setAdditionalText("0");
			oDropdownBox_SERVERE.addItem(oItem);
			for (var i=0; i<jsondata.length; i++){
				//alert(jsondata[i]['recordID'] + '   ' + jsondata[i]['typeName']);
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['serverName'];
				oItem = new sap.ui.core.ListItem({
					key : item_key,
					text : item_text });
				oItem.setAdditionalText(jsondata[i]['sortOrder']);
				oDropdownBox_SERVERE.addItem(oItem);
			}
			oDropdownBox_SERVERE.setSelectedKey(pcoServerID);
		}
	}
	// ****************************************************************************************************************************************************

	oMatrixEF.createRow( oLabel_SERVERE,oDropdownBox_SERVERE );

	oLabel_ACTIVEE = new sap.ui.commons.Label({
		id : 'L-ACTIVEE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVEE = new sap.ui.commons.CheckBox('checkbox_activee',{
		checked : false
	});

	oMatrixEF.createRow( oLabel_ACTIVEE,oCheckbox_ACTIVEE );

	oMatrixE.createRow( oMatrixEF );

	oLabel_STATUSE = new sap.ui.commons.Label({
		id : 'L-STATUSE',
		text : ' AGENT STATUS'
	});

	var oImageE = new sap.ui.commons.Image("i1e");
	oImageE.setDecorative(false);

	oLabel_MSGE = new sap.ui.commons.Label({
		id : 'L-MSGE',
		text : ' MESSAGE'
	});

	var oLayout_AE = new sap.ui.layout.HorizontalLayout("Layout1e", {
			content: [oImageE, oLabel_MSGE]
	});

	oMatrixEF.createRow( oLabel_STATUSE,oLayout_AE );

	oLabel_opcSTATUSE = new sap.ui.commons.Label({
		id : 'L-opcSTATUSE',
		text : ' OPC STATUS'
	});

	var oImageOPCE = new sap.ui.commons.Image("iopc1e");
	oImageOPCE.setDecorative(false);

	oLabel_opcMSGE = new sap.ui.commons.Label({
		id : 'L-opcMSGE',
		text : ' OPC MESSAGE'
	});

	var oLayout_AopcE = new sap.ui.layout.HorizontalLayout("Layout1opce", {
			content: [oImageOPCE, oLabel_opcMSGE]
	});

	oMatrixEF.createRow( oLabel_opcSTATUSE,oLayout_AopcE );

	oLabel_plcSTATUSE = new sap.ui.commons.Label({
		id : 'L-plcSTATUSE',
		text : ' PLC STATUS'
	});

	var oImagePLCE = new sap.ui.commons.Image("iplc1e");
	oImagePLCE.setDecorative(false);

	oLabel_plcMSGE = new sap.ui.commons.Label({
		id : 'L-plcMSGE',
		text : ' PLC MESSAGE'
	});

	var oLayout_AplcE = new sap.ui.layout.HorizontalLayout("Layout1plce", {
			content: [oImagePLCE, oLabel_plcMSGE]
	});

	oMatrixEF.createRow( oLabel_plcSTATUSE,oLayout_AplcE );


	var oButtonStartE = new sap.ui.commons.Button({
		id : 'B-StartAgentE',
		text : 'START',
		enabled: true
	});
	oButtonStartE.attachPress(doStartAgentE);

	var oButtonStopE = new sap.ui.commons.Button({
		id : 'B-StopAgentE',
		text : 'STOP',
		enabled: true
	});
	oButtonStopE.attachPress(doStopAgentE);

	var oButtonRestartE = new sap.ui.commons.Button({
		id : 'B-RestartAgentE',
		text : 'RESTART',
		enabled: true
	});
	oButtonRestartE.attachPress(doRestartAgentE);

	var oButton8 = new sap.ui.commons.Button({
		id : 'B-TstAgentE',
		text : 'TEST',
		enabled: true
	});
	oButton8.attachPress(doTstAgentE);

	var oButton9 = new sap.ui.commons.Button({
		id : 'B-EditAgent',
		text : 'SUBMIT',
		enabled: true
	});
	oButton9.attachPress(doEditAgent);

	var oLayout_ABE = new sap.ui.layout.HorizontalLayout("Layout4", {
			content: [oButtonStartE, oButtonStopE, oButtonRestartE, oButton8, oButton9]
	});

	oMatrixE.createRow( oLayout_ABE );

	var oOverlayContainerEdit = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerEdit .setHeight('420px');
	oOverlayContainerEdit .setWidth('700px');
	oOverlayContainerEdit.addContent(oMatrixE);
	// ******************************************************************************************************************************************************************
	function doStartAgentE() {
		var agentStatus_id = -1;
		var agentMessage = "";
		var opcStatus_id = -1;
		var opcMessage = "";
		var plcStatus_id = -1;
		var plcMessage = "";
		var input_ID = recordID;
		var Param1 = escapeSQLString(input_ID);
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/PCoAgent_Start_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
		function parseJsonDataSet(jsondata){
			for (var i=0; i<jsondata.length; i++){
				agentStatus = Number(jsondata[i]['AGENT_STATUS']);
				agentMessage = jsondata[i]['AGENT_MESSAGE'];
				opcStatus = Number(jsondata[i]['OPC_STATUS']);
				opcMessage = jsondata[i]['OPC_MESSAGE'];
				plcStatus = Number(jsondata[i]['PLC_STATUS']);
				plcMessage = jsondata[i]['PLC_MESSAGE'];
			}
			if(agentStatus == -1) {
				// Agent Not Tested
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(" !! COULD NOT TEST !!");
			} else {
				if (agentStatus == 0) {
					// Agent State  - TRX Cannot Test
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(agentMessage);
				} else {
					if (agentStatus == 1) {
						// Agent State  - TRX Started
						oImageE.setSrc("Common/img/green.png");
						oLabel_MSGE.setText(agentMessage.toUpperCase());
						// update OPC Status
						if(opcStatus==0) {
							oImageOPCE.setSrc("Common/img/red.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						} else {
							oImageOPCE.setSrc("Common/img/green.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						}
						// update PLC Status
						if(plcStatus==0) {
							oImagePLCE.setSrc("Common/img/red.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							oImagePLCE.setSrc("Common/img/green.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						}
					} else {
						if (agentStatus == 2) {
							// Agent State  - TRX Stopped
							oImageE.setSrc("Common/img/grey.png");
							oLabel_MSGE.setText(agentMessage.toUpperCase());
							oImageOPCE.setSrc("Common/img/blue.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
							oImagePLCE.setSrc("Common/img/blue.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							if (agentStatus == 3) {
								// Agent State  - TRX Faulted
								oImageE.setSrc("Common/img/red.png");
								oLabel_MSGE.setText(agentMessage.toUpperCase());
								oImageOPCE.setSrc("Common/img/blue.png");
								oLabel_opcMSGE.setText(opcMessage.toUpperCase());
								oImagePLCE.setSrc("Common/img/blue.png");
								oLabel_plcMSGE.setText(plcMessage.toUpperCase());
							} else {
								if (agentStatus == 4) {
									// Agent State  - TRX Unknown
									oImageE.setSrc("Common/img/blue.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								} else {
									// Agent State  - TRX Limbo
									oImageE.setSrc("Common/img/yellow.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								}
							}
						}
					}
				}
			}	
		}
	};
	// ******************************************************************************************************************************************************************
	function doStopAgentE() {
		var agentStatus_id = -1;
		var agentMessage = "";
		var opcStatus_id = -1;
		var opcMessage = "";
		var plcStatus_id = -1;
		var plcMessage = "";
		var input_ID = recordID;
		var Param1 = escapeSQLString(input_ID);
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/PCoAgent_Stop_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
		function parseJsonDataSet(jsondata){
			for (var i=0; i<jsondata.length; i++){
				agentStatus = Number(jsondata[i]['AGENT_STATUS']);
				agentMessage = jsondata[i]['AGENT_MESSAGE'];
				opcStatus = Number(jsondata[i]['OPC_STATUS']);
				opcMessage = jsondata[i]['OPC_MESSAGE'];
				plcStatus = Number(jsondata[i]['PLC_STATUS']);
				plcMessage = jsondata[i]['PLC_MESSAGE'];
			}
			if(agentStatus == -1) {
				// Agent Not Tested
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(" !! COULD NOT TEST !!");
			} else {
				if (agentStatus == 0) {
					// Agent State  - TRX Cannot Test
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(agentMessage);
				} else {
					if (agentStatus == 1) {
						// Agent State  - TRX Started
						oImageE.setSrc("Common/img/green.png");
						oLabel_MSGE.setText(agentMessage.toUpperCase());
						// update OPC Status
						if(opcStatus==0) {
							oImageOPCE.setSrc("Common/img/red.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						} else {
							oImageOPCE.setSrc("Common/img/green.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						}
						// update PLC Status
						if(plcStatus==0) {
							oImagePLCE.setSrc("Common/img/red.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							oImagePLCE.setSrc("Common/img/green.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						}
					} else {
						if (agentStatus == 2) {
							// Agent State  - TRX Stopped
							oImageE.setSrc("Common/img/grey.png");
							oLabel_MSGE.setText(agentMessage.toUpperCase());
							oImageOPCE.setSrc("Common/img/blue.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
							oImagePLCE.setSrc("Common/img/blue.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							if (agentStatus == 3) {
								// Agent State  - TRX Faulted
								oImageE.setSrc("Common/img/red.png");
								oLabel_MSGE.setText(agentMessage.toUpperCase());
								oImageOPCE.setSrc("Common/img/blue.png");
								oLabel_opcMSGE.setText(opcMessage.toUpperCase());
								oImagePLCE.setSrc("Common/img/blue.png");
								oLabel_plcMSGE.setText(plcMessage.toUpperCase());
							} else {
								if (agentStatus == 4) {
									// Agent State  - TRX Unknown
									oImageE.setSrc("Common/img/blue.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								} else {
									// Agent State  - TRX Limbo
									oImageE.setSrc("Common/img/yellow.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								}
							}
						}
					}
				}
			}	
		}
	};
	// ******************************************************************************************************************************************************************
	function doRestartAgentE() {
		var agentStatus_id = -1;
		var agentMessage = "";
		var opcStatus_id = -1;
		var opcMessage = "";
		var plcStatus_id = -1;
		var plcMessage = "";
		var input_ID = recordID;
		var Param1 = escapeSQLString(input_ID);
		var timestamp = new Date().getTime();
		var paramStr = "Param.1="+encodeURIComponent(Param1);
		getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/PCoAgent_Restart_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
		function parseJsonDataSet(jsondata){
			for (var i=0; i<jsondata.length; i++){
				agentStatus = Number(jsondata[i]['AGENT_STATUS']);
				agentMessage = jsondata[i]['AGENT_MESSAGE'];
				opcStatus = Number(jsondata[i]['OPC_STATUS']);
				opcMessage = jsondata[i]['OPC_MESSAGE'];
				plcStatus = Number(jsondata[i]['PLC_STATUS']);
				plcMessage = jsondata[i]['PLC_MESSAGE'];
			}
			if(agentStatus == -1) {
				// Agent Not Tested
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(" !! COULD NOT TEST !!");
			} else {
				if (agentStatus == 0) {
					// Agent State  - TRX Cannot Test
					oImageE.setSrc("Common/img/blue.png");
					oLabel_MSGE.setText(agentMessage);
				} else {
					if (agentStatus == 1) {
						// Agent State  - TRX Started
						oImageE.setSrc("Common/img/green.png");
						oLabel_MSGE.setText(agentMessage.toUpperCase());
						// update OPC Status
						if(opcStatus==0) {
							oImageOPCE.setSrc("Common/img/red.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						} else {
							oImageOPCE.setSrc("Common/img/green.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
						}
						// update PLC Status
						if(plcStatus==0) {
							oImagePLCE.setSrc("Common/img/red.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							oImagePLCE.setSrc("Common/img/green.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						}
					} else {
						if (agentStatus == 2) {
							// Agent State  - TRX Stopped
							oImageE.setSrc("Common/img/grey.png");
							oLabel_MSGE.setText(agentMessage.toUpperCase());
							oImageOPCE.setSrc("Common/img/blue.png");
							oLabel_opcMSGE.setText(opcMessage.toUpperCase());
							oImagePLCE.setSrc("Common/img/blue.png");
							oLabel_plcMSGE.setText(plcMessage.toUpperCase());
						} else {
							if (agentStatus == 3) {
								// Agent State  - TRX Faulted
								oImageE.setSrc("Common/img/red.png");
								oLabel_MSGE.setText(agentMessage.toUpperCase());
								oImageOPCE.setSrc("Common/img/blue.png");
								oLabel_opcMSGE.setText(opcMessage.toUpperCase());
								oImagePLCE.setSrc("Common/img/blue.png");
								oLabel_plcMSGE.setText(plcMessage.toUpperCase());
							} else {
								if (agentStatus == 4) {
									// Agent State  - TRX Unknown
									oImageE.setSrc("Common/img/blue.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								} else {
									// Agent State  - TRX Limbo
									oImageE.setSrc("Common/img/yellow.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									oImageOPCE.setSrc("Common/img/blue.png");
									oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									oImagePLCE.setSrc("Common/img/blue.png");
									oLabel_plcMSGE.setText(plcMessage.toUpperCase());
								}
							}
						}
					}
				}
			}	
		}
	};
	// ******************************************************************************************************************************************************************
	function doEdit() {
		updateServersE();
		if(!oOverlayContainerEdit.isOpen()){
          			oCore.byId("input_namee").setValue(agentName);
          			oCore.byId("input_plcnamee").setValue(plcName);
          			oCore.byId("dbox_servere").setSelectedKey(pcoServerID);
			if(agentActive==1)
          			oCore.byId("checkbox_activee").setChecked(true);
			else
          			oCore.byId("checkbox_activee").setChecked(false);

			oImageE.setSrc(agentSTS_src);
			oImageOPCE.setSrc(opcSTS_src);
			oImagePLCE.setSrc(plcSTS_src);

			if(agentLastRespMessage=="---") {
				oLabel_MSGE.setText(" NOT TESTED");
			} else {
				oLabel_MSGE.setText(agentLastRespMessage);
			}
			if(opcLastRespMessage=="---") {
				oLabel_opcMSGE.setText(" NOT AVAILABLE");
			} else {
				oLabel_opcMSGE.setText(opcLastRespMessage.toUpperCase());
			}
			if(plcLastRespMessage=="---") {
				oLabel_plcMSGE.setText(" NOT AVAILABLE");
			} else {
				oLabel_plcMSGE.setText(plcLastRespMessage.toUpperCase());
			}

			oOverlayContainerEdit.open();
		}
	};
	// ******************************************************************************************************************************************************************
	function doTstAgentE() {
		var agentStatus_id = -1;
		var agentMessage = "";
		var opcStatus_id = -1;
		var opcMessage = "";
		var plcStatus_id = -1;
		var plcMessage = "";
		var input_NAME = oCore.byId("input_namee").getValue();
		var input_PLCNAME = oCore.byId("input_plcnamee").getValue();
		var input_SERVER = Number(oCore.byId("dbox_servere").getSelectedKey());
		if(input_NAME=="") {
			alert("Please Input Agent Name ..");
			oCore.byId("input_namee").focus();
		} else {
			if(input_PLCNAME=="") {
				alert("Please Input PLC ID ..");
				oCore.byId("input_plcnamee").focus();
			} else {
				if(input_SERVER==0) {
					alert("Please Select PCo Server ..");
					oCore.byId("dbox_servere").focus();
				} else {
					// all good. Try to test it ..
					var Param1 = escapeSQLString(input_NAME);
					var Param2 = escapeSQLString(input_PLCNAME);
					var Param3 = escapeSQLString(input_SERVER);
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
					getData("/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/tst_PCoAgent_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
					function parseJsonDataSet(jsondata){
						for (var i=0; i<jsondata.length; i++){
							agentStatus = Number(jsondata[i]['AGENT_STATUS']);
							agentMessage = jsondata[i]['AGENT_MESSAGE'];
							opcStatus = Number(jsondata[i]['OPC_STATUS']);
							opcMessage = jsondata[i]['OPC_MESSAGE'];
							plcStatus = Number(jsondata[i]['PLC_STATUS']);
							plcMessage = jsondata[i]['PLC_MESSAGE'];
						}
						if(agentStatus == -1) {
							// Agent Not Tested
								oImageE.setSrc("Common/img/blue.png");
								oLabel_MSGE.setText(" !! COULD NOT TEST !!");
						} else {
							if (agentStatus == 0) {
								// Agent State  - TRX Cannot Test
								oImageE.setSrc("Common/img/blue.png");
								oLabel_MSGE.setText(agentMessage);
							} else {
								if (agentStatus == 1) {
									// Agent State  - TRX Started
									oImageE.setSrc("Common/img/green.png");
									oLabel_MSGE.setText(agentMessage.toUpperCase());
									// update OPC Status
									if(opcStatus==0) {
										oImageOPCE.setSrc("Common/img/red.png");
										oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									} else {
										oImageOPCE.setSrc("Common/img/green.png");
										oLabel_opcMSGE.setText(opcMessage.toUpperCase());
									}
									// update PLC Status
									if(plcStatus==0) {
										oImagePLCE.setSrc("Common/img/red.png");
										oLabel_plcMSGE.setText(plcMessage.toUpperCase());
									} else {
										oImagePLCE.setSrc("Common/img/green.png");
										oLabel_plcMSGE.setText(plcMessage.toUpperCase());
									}
								} else {
									if (agentStatus == 2) {
										// Agent State  - TRX Stopped
										oImageE.setSrc("Common/img/grey.png");
										oLabel_MSGE.setText(agentMessage.toUpperCase());
										oImageOPCE.setSrc("Common/img/blue.png");
										oLabel_opcMSGE.setText(opcMessage.toUpperCase());
										oImagePLCE.setSrc("Common/img/blue.png");
										oLabel_plcMSGE.setText(plcMessage.toUpperCase());
									} else {
										if (agentStatus == 3) {
											// Agent State  - TRX Faulted
											oImageE.setSrc("Common/img/red.png");
											oLabel_MSGE.setText(agentMessage.toUpperCase());
										  oImageOPCE.setSrc("Common/img/blue.png");
										  oLabel_opcMSGE.setText(opcMessage.toUpperCase());
										  oImagePLCE.setSrc("Common/img/blue.png");
										  oLabel_plcMSGE.setText(plcMessage.toUpperCase());
										} else {
											if (agentStatus == 4) {
											// Agent State  - TRX Unknown
											oImageE.setSrc("Common/img/blue.png");
											oLabel_MSGE.setText(agentMessage.toUpperCase());
											oImageOPCE.setSrc("Common/img/blue.png");
											oLabel_opcMSGE.setText(opcMessage.toUpperCase());
											oImagePLCE.setSrc("Common/img/blue.png");
											oLabel_plcMSGE.setText(plcMessage.toUpperCase());
											} else {
											// Agent State  - TRX Limbo
											oImageE.setSrc("Common/img/yellow.png");
											oLabel_MSGE.setText(agentMessage.toUpperCase());
											oImageOPCE.setSrc("Common/img/blue.png");
											oLabel_opcMSGE.setText(opcMessage.toUpperCase());
											oImagePLCE.setSrc("Common/img/blue.png");
											oLabel_plcMSGE.setText(plcMessage.toUpperCase());
											}
										}
									}
								}
							}
						}	
					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	function doEditAgent() {
		// retrieve values
		var input_RECID = recordID;
		var input_NAME = oCore.byId("input_namee").getValue();
		var input_PLCNAME = oCore.byId("input_plcnamee").getValue();
		var input_SERVER = Number(oCore.byId("dbox_servere").getSelectedKey());
		var input_userNAME = document.getElementById("user_name").value;
		if (oCore.byId("checkbox_activee").getChecked() ) {
			var input_ACTIVE = 1;
		} else {
			var input_ACTIVE = 0;
		}
		if(input_NAME=="") {
			alert("Please Input Agent Name ..");
			oCore.byId("input_namee").focus();
		} else {
			if(input_PLCNAME=="") {
				alert("Please Input PLC ID ..");
				oCore.byId("input_plcnamee").focus();
			} else {
				if(input_SERVER==0) {
					alert("Please Select PCo Server ..");
					oCore.byId("dbox_servere").focus();
				} else {
				// all good. Try to write them ..
					var Param1 = escapeSQLString(input_RECID);
					var Param2 = escapeSQLString(input_NAME);
					var Param3 = escapeSQLString(input_PLCNAME);
					var Param4 = escapeSQLString(input_SERVER);
					var Param5 = escapeSQLString(input_ACTIVE);
					var Param6 = escapeSQLString(input_userNAME);
       					var oReqData;
      					if (window.XMLHttpRequest) {
     						oReqData = new XMLHttpRequest();
      					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6);
					 	// alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/upd_PCoAgent&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
					 	// alert(queryStr);
						oReqData.open("GET", queryStr, true); 
						oReqData.onreadystatechange = function() {
							if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
								// Successful -- rebuild the screen
						 		updateTablePCoAgents();	
						 		oOverlayContainerEdit.close();	
							} else {
								// Not Successful -- alert the user
									alert("Error: " + oReqData.statusText);	
							}
						}
						oReqData.send();
       					} else {
          						window.alert("Error creating XmlHttpRequest object.");
       					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	function doDelete() {
		// retrieve values
		var Param1 = recordID;
       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1);  
			// alert(paramStr);
			var queryStr = 	"/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/del_PCoAgent&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					// Successful -- rebuild the screen
					updateTablePCoAgents();	
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	};
	// ******************************************************************************************************************************************************************
	function doMvUp() {
		// retrieve values
		var Param1 = recordID;
       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1);  
			// alert(paramStr);
			var queryStr = 	"/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/mvUp_PCoAgent&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					// Successful -- rebuild the screen
					updateTablePCoAgents();	
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	};
	// ******************************************************************************************************************************************************************
	function doMvDn() {
		// retrieve values
		var Param1 = recordID;
       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1);  
			// alert(paramStr);
			var queryStr = 	"/XMII/Illuminator?QueryTemplate=MESM/PCOAGENTS/QUERIES/mvDn_PCoAgent&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					// Successful -- rebuild the screen
					updateTablePCoAgents();	
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	};
	// ******************************************************************************************************************************************************************
	</script>
</head>

<body onLoad="roleSecurity()">

<input id="user_roles" type="hidden" value="{IllumLoginRoles}" style="display:block;width:1000px;" readonly />
<input id="user_role" type="hidden" value="{ROLE}" style="display:block;width:1000px;" readonly />
<input id="user_name" type="hidden" value="{IllumLoginName}" style="display: block;width:1000px;" readonly />
<input id="user_height" type="hidden" value="{HEIGHT}" style="display: block;width:100px;" readonly />
<input id="user_address" type="hidden" value="{Machine}" style="display:block;width:1000px;" readonly />
<div id="app_header" >
<div id="app_title">PCO AGENTS</div>
<div id="app_menu"></div>
<div id="page_title">DEFAULT SCREEN</div>
</div>
<div id="mesm_content" ></div>
</body>
</html>