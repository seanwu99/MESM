<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<title>CT MODULE</title>
	<style>
	body {
		background-image: url("Common/img/logo.png");
		background-size: 180px;
		background-repeat: no-repeat;
    		background-attachment: fixed;
    		background-position: right 40px top 30px;
		font-family: Arial;
	}
	#app_header {
 		padding: 10px;
 		padding-left: 40px;
 		padding-top: 15px;
 		padding-bottom: 0px;
		height:80px;
		width:400px;
		text-align: center;
	}
	#app_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		color: #007dc0;
		margin-bottom; 20px;
	}
	#app_menu {
		width:400px;
		text-align: center;
		font-family: Arial,Helvetica,sans-serif;
	}
	#page_title {
		width:400px;
		text-align: center;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:28px;
		color: #cfcfcf;
	}
	#mesm_content {
 		padding: 30px;
 		padding-top: 40px;
	}

	#__button0, #__button1, #__button2 {
		margin-top:10px;
		margin-left:5px;
		margin-right:5px;
	}
	
	#__cell1, #__cell2, #__cell3 {
		text-align:center;
	}

	#MatrixT, #MatrixB , #MatrixA {
		margin:10px auto;
	}

	#B-Add, #B-Edit, #B-Delete {
		width:100px;
		height:35px;
		font-size:14px;
	}

	#L-AddLabel, #L-EditLabel {
		margin-top:15px;
		padding:5px;
		font-family: "Arial Black",Arial,Helvetica,sans-serif;
		font-size:32px;
		height:35px;
		color: #007dc0;
	}
	
	 #__cell5 {
		text-align:center;
		height: 36px;
	}

	 #__cell6,#__cell8,#__cell10,#__cell12,#__cell14{
		padding:10px;
		padding-right:20px;
		text-align:right;
	}

	#B-AddLabel, #B-EditLabel,#B-TestLabel , #B-TestEditLabel{
		margin-top:0px;
		width:100px;
		height:35px;
		font-size:14px;
	}

	 #__cell17 , #__cell18{
		text-align:center;
		height: 36px;
	}

	 #__cell22 {
		text-align:center;
		height: 36px;
	}

	 #__cell23, #__cell25, #__cell27, #__cell29, #__cell31{
		padding:10px;
		padding-right:20px;
		text-align:right;
	}

	 #__cell35,#__cell36 {
		text-align:center;
		height: 36px;
	}
	</style>

	<script id="sap-ui-bootstrap"
		src="/sapui5/resources/sap-ui-core.js"
		data-sap-ui-theme="sap_goldreflection"
		data-sap-ui-libs="sap.ui.core,sap.ui.commons,sap.ui.table,sap.ui.ux3"
		data-sap-ui-language="en" >
	</script>
	<script type="text/javascript" src="Common/js/default.js"></script>
	<script type="text/javascript" id="app-init">
	// ******************************************************************************************************************************************************************
	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	// Initialize screen
	var nrRows = 10;
	var selectedIndex =  -1;
	// ******************************************************************************************************************************************************************
	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var selectedPlant = 0;
	// ******************************************************************************************************************************************************************
	// selected row data
	var selected_recordID = 0;
	var selected_LabelName = "";
	var selected_LabelLocation = "";
	var selected_LabelTemplate = "";
	var selected_LabelTemplateID = 0;
	var selected_LabelActive = 1;
	var selected_LabelType = 0;

	// ******************************************************************************************************************************************************************
	function roleSecurity() {
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "MESM_" + document.getElementById("user_role").value;
		// alert(role2Access);
 		if(myRoles.indexOf(role2Access)<0) {
			window.location.assign("security.irpt");
		 } else {
			var roleString = document.getElementById("user_role").value;
			var roleArray = roleString.split("_");
			level2Access = roleArray[0]; 
				// alert("level : " + level2Access);
			plant2Access =  roleArray[1];
				// alert("plant : " + plant2Access);
			document.getElementById("page_title").innerHTML=role2Access;
			//alert(plant2Access);
			selectedPlant = plant2Access; 

			createTableLabels();

			// enable homepage
			oCore.byId("item3-0-3").setEnabled(true);
			// show menus
			oMenuButton1.placeAt("app_menu");
			oMenuButton2.placeAt("app_menu");
			oMenuButton3.placeAt("app_menu");

			var role_ADM = "MESM_ADM_"+plant2Access;
			var role_OPS = "MESM_OPS_"+plant2Access;

			switch(role2Access) {
			case "MESM_ADM_ALL":

				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Shifts Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_ADM:
				// enable Cfg Hierarchy
					oCore.byId("item1-0-1").setEnabled(true);
				// enable Cfg Memory Maps
					oCore.byId("item1-0-3").setEnabled(true);
				// enable Cfg Connectivity
					oCore.byId("item1-0-4").setEnabled(true);
				// enable Master Data
					oCore.byId("item1-0-5").setEnabled(true);

				// SPC
				// enable SPC home page
					oCore.byId("item1-0-6").setEnabled(true);
				// enable Plants submenu
					oCore.byId("item1-0-7").setEnabled(true);
				// enable  Stations submenu
					oCore.byId("item1-0-8").setEnabled(true);
				// enable Part submenu
					oCore.byId("item1-0-9").setEnabled(true);
				// enable   Datapoints submenu
					oCore.byId("item1-0-10").setEnabled(true);
				// enable Operators submenu
					oCore.byId("item1-0-11").setEnabled(true);
				// enable Subscriptions submenu
					oCore.byId("item1-0-12").setEnabled(true);

				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				// enable Equipment Hierarchy
					oCore.byId("item1-4-1").setEnabled(true);
				// enable Cfg Hierarchy Levels
					oCore.byId("item1-4-2").setEnabled(true);

				// enable Cfg Memory Maps
					oCore.byId("item1-5-1").setEnabled(true);
				// enable Cfg Tag Types
					oCore.byId("item1-5-2").setEnabled(true);
				// enable Cfg Tag Functions
					oCore.byId("item1-5-3").setEnabled(true);
				// enable Cfg Tag Groups
					oCore.byId("item1-5-4").setEnabled(true);
				// enable Cfg Memory Map Transactions
					oCore.byId("item1-5-5").setEnabled(true);

				// enable Cfg Shop Floor Computers
					oCore.byId("item1-6-1").setEnabled(true);
				// enable Cfg Shop Floor Printers
					oCore.byId("item1-6-2").setEnabled(true);
				// enable Cfg PCo Servers
					oCore.byId("item1-6-3").setEnabled(true);
				// enable Cfg PCo Agents
					oCore.byId("item1-6-4").setEnabled(true);
				// enable Cfg Sql Servers
					oCore.byId("item1-6-5").setEnabled(true);
				// enable Cfg Operators
					oCore.byId("item1-6-6").setEnabled(true);
				// enable Cfg File Servers
					oCore.byId("item1-6-7").setEnabled(true);
				// enable Cfg File Agents
					oCore.byId("item1-6-8").setEnabled(true);

				// Enable UOM Maintenance
					oCore.byId("item1-7-1").setEnabled(true);
				// Enable Product Maintenance
					oCore.byId("item1-7-2").setEnabled(true);
				// Enable BOM Maintenance
					oCore.byId("item1-7-3").setEnabled(true);
				// Enable Routing Maintenance
					oCore.byId("item1-7-4").setEnabled(true);

				// SPC
				// enable Plants  Maintenance
					oCore.byId("item1-8-1").setEnabled(true);
				// enable Import Plants
					oCore.byId("item1-8-2").setEnabled(true);
				// enable Export Plants
					oCore.byId("item1-8-3").setEnabled(true);

				// enable Stations   Maintenance
					oCore.byId("item1-9-1").setEnabled(true);
				// enable Import Stations
					oCore.byId("item1-9-2").setEnabled(true);
				// enable Export Stations
					oCore.byId("item1-9-3").setEnabled(true);

				// enable Parts Maintenance
					oCore.byId("item1-10-1").setEnabled(true);
				// enable Import Parts
					oCore.byId("item1-10-2").setEnabled(true);
				// enable Export Parts
					oCore.byId("item1-10-3").setEnabled(true);

				// enable Datapoints HDR
					oCore.byId("item1-11-1").setEnabled(true);
				// enable Datapoints SPC
					oCore.byId("item1-11-2").setEnabled(true);
				// enable Import Datapoints
					oCore.byId("item1-11-3").setEnabled(true);
				// enable Export Datapoints
					oCore.byId("item1-11-4").setEnabled(true);

				// enable Operatord Maintenance
					oCore.byId("item1-12-1").setEnabled(true);
				// enable Import Operators
					oCore.byId("item1-12-2").setEnabled(true);
				// enable  Export Operators
					oCore.byId("item1-12-3").setEnabled(true);
										
				// enable Subscriptions Maintenance 
					oCore.byId("item1-13-1").setEnabled(true);
				// enable Import Subscriptions
					oCore.byId("item1-13-2").setEnabled(true);
				// enable Export Subscriptions
					oCore.byId("item1-13-3").setEnabled(true);
	
				// update screen
				document.getElementById("page_title").innerHTML="ADM PLANT "+plant2Access;
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case "MESM_OPS_ALL":
				// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS ALL PLANTS";
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			case role_OPS:
		// enable WO Management
					oCore.byId("item2-0-1").setEnabled(true);
				// enable Carrier Station Dashboard
					oCore.byId("item2-0-2").setEnabled(true);
				// enable Assembly Station Dashboard
					oCore.byId("item2-0-3").setEnabled(true);

				// SPC
				// enable SPC Dashboard
					oCore.byId("item2-0-4").setEnabled(true);
				// enable Saved File Charts
					//	oCore.byId("item2-0-5").setEnabled(true);
				// enable  PC History Logs
					//	oCore.byId("item2-0-6").setEnabled(true);

				// enable Production Status Report
					oCore.byId("item3-0-1").setEnabled(true);
				// enable Item Traceability Report
					oCore.byId("item3-0-2").setEnabled(true);
				// enable Connector Diagnostics
					oCore.byId("item3-0-3").setEnabled(true);

				// SPC
				// enable Daily Activity
					oCore.byId("item3-0-4").setEnabled(true);
				// enable Weekly Activity
					oCore.byId("item3-0-5").setEnabled(true);
				// enable onthly Activity
					oCore.byId("item3-0-6").setEnabled(true);

				document.getElementById("page_title").innerHTML="OPS PLANT "+plant2Access;				
				oMatrixT.placeAt('mesm_content');
				oMatrixB.placeAt('mesm_content');
				break;
			default:
				alert("MES Module Role Unknown: " + role2Access);
				break;
			}
		  }
	}

	// ************************************	MENU		******************************************************************************************************************************

	var timestamp = new Date().getTime();

	var jsFile=document.createElement('script');
	jsFile.setAttribute("type","text/javascript");
	jsFile.setAttribute("src", "Common/js/menu.js?ts="+timestamp);
	document.getElementsByTagName("head")[0].appendChild(jsFile);

	// ******************************************************************************************************************************************************************
	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixT',
		layoutFixed : true,
		width: '1200px',
		columns : 1,
		widths : ['1200px'] 
	});

	// ******************************************************************************************************************************************************************
	function createTableLabels() {
		// Bind the table rows to this model
		var timestamp = new Date().getTime();
		// alert(thePlant); 
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/get_Labels&ts="+timestamp+"&Content-Type=text/xml","",false);
		// alert(oModel.getXML());
		createColumnsLabels();
		oTableLabels.setModel(oModel);
		oTableLabels.bindRows("/Rowset/Row");
	}

	// ******************************************************************************************************************************************************************
	function updateTableLabels() {
		oTableLabels.clearSelection();
		var timestamp = new Date().getTime();
		// alert(thePlant); 
 		oModel.loadData("/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/get_Labels&ts="+timestamp+"&Content-Type=text/xml","",false);
		oTableLabels.getModel().refresh(true);
	}

	// ******************************************************************************************************************************************************************
	function createColumnsLabels() {
		//Define the columns and the control templates to be used
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "NAME"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "labelName"),
			sortProperty: "labelName",
			filterProperty: "labelName",
			width: "120px",
			hAlign: "Center"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "LOFTWARE FOLDER"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "labelLocation"),
			sortProperty: "labelLocation",
			filterProperty: "labelLocation",
			width: "300px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "TEMPLATE"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "labelTemplate"),
			sortProperty: "labelTemplate",
			filterProperty: "labelTemplate",
			width: "190px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " MODIFIED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
			sortProperty: "ModifiedBy",
			filterProperty: "ModifiedBy",
			width: "100px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "MODIFIED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
			sortProperty: "ModifiedOn",
			filterProperty: "ModifiedOn",
			width: "145px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: " CREATED BY"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
			sortProperty: "CreatedBy",
			filterProperty: "CreatedBy",
			width: "100px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "CREATED ON"}),
			template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty: "CreatedOn",
			filterProperty: "CreatedOn",
			width: "145px"
		}));
		oTableLabels.addColumn(new sap.ui.table.Column({
			label: new sap.ui.commons.Label({text: "ACTIVE"}),
			template: new sap.ui.commons.Image().bindProperty("src", "src"),
			width: "75px",
			hAlign: "Center"
		}));
	}

	// ******************************************************************************************************************************************************************
	//Create an instance of the table control
	var oTableLabels = new sap.ui.table.Table({
		visibleRowCount: nrRows,
		visibleRowCountMode: sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow: 0,
		width: "1200px",
		selectionBehavior: sap.ui.table.SelectionBehavior.Row,
		selectionMode: sap.ui.table.SelectionMode.Single
	});

	// ******************************************************************************************************************************************************************
	oTableLabels.attachRowSelectionChange(function(oEvent) {
		// Retrieve the selected row
		var selIndex = oTableLabels.getSelectedIndex();
		selectedIndex = selIndex;
		if (selIndex  >= 0) {
			oButton1.setEnabled(false); 
			oButton2.setEnabled(true);
			oButton3.setEnabled(true);
			// Retrieve the selected row
			var selectedRow = oTableLabels.getRows()[selIndex];
			// sap.ui.commons.MessageBox.alert(selectedRow);
			var selectedRowContext = oEvent.getParameter("rowContext");
			selected_recordID =  oModel.getProperty("recordID", selectedRowContext);
			selected_LabelName =  oModel.getProperty("labelName", selectedRowContext);
			selected_LabelLocation =  oModel.getProperty("labelLocation", selectedRowContext);
			selected_LabelTemplate =  oModel.getProperty("labelTemplate", selectedRowContext);
			selected_LabelTemplateID =  oModel.getProperty("labelTemplate", selectedRowContext);
			selected_LabelActive =  oModel.getProperty("labelActive", selectedRowContext);
			selected_LabelType = oModel.getProperty("labelType", selectedRowContext);
		} else {
			oButton1.setEnabled(true);
			oButton2.setEnabled(false);
			oButton3.setEnabled(false);
			selectedIndex =  -1;
			selected_recordID = 0;
			selected_LabelName = "";
			selected_LabelLocation = "";
			selected_LabelTemplate = "";
			selected_LabelTemplateID = 0;
			selected_LabelActive=0;
			selected_LabelType =0;
			// alert ("No Selection ..");
		}
	});
	// ******************************************************************************************************************************************************************

	var oModel =  new sap.ui.model.xml.XMLModel();

	//Bring the table onto the UI 
	var oCellTable = new sap.ui.commons.layout.MatrixLayoutCell({
		id : 'Cell-Table',
		colSpan : 4 });
	oCellTable.addContent(oTableLabels);

	oMatrixT.createRow(oCellTable);

// *****************	Matrix Buttons	*********************************************************************************************

	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixB',
		layoutFixed : true,
		width: '1200px',
		columns : 5,
		widths : ['150px','200px','200px','200px','150px'] 
	});

	var oButton1 = new sap.ui.commons.Button({
		id : 'B-Add',
		tooltip : "AddLabel",
		text : 'Add',
		enabled: true
	});
	oButton1.attachPress(doAdd);

	var oButton2 = new sap.ui.commons.Button({
		id : 'B-Edit',
		tooltip : "Edit Label",
		text : 'Edit',
		enabled: false
	});
	oButton2.attachPress(doEdit);

	var oButton3 = new sap.ui.commons.Button({
		id : 'B-Delete',
		tooltip : "Delete Label",
		text : 'Delete',
		enabled: false
	});
	oButton3.attachPress(doDelete);
	oMatrixB.createRow('', oButton1, oButton2, oButton3, '');

	// ******************************************************************************************************************************************************************

	var oMatrixA = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixA',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['690px'] 
	});

	var oMatrixAF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixAF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['295px','385px'] 
	});

	var oTitleA = new sap.ui.commons.Label({
		id : 'L-AddLabel',
		text : 'ADD LABEL'
	});

	oMatrixA.createRow( oTitleA );

   	oL_LabelNameA = new sap.ui.commons.Label({
		id : 'L-LabelNameA',
		text : ' LABEL NAME'
	});

	var oTF_LabelNameA = new sap.ui.commons.TextField({
		id : 'TF-LabelNameA',
		tooltip : 'Label Name',
		editable : true,
		visible : true,
		width : '200px' 
	});

	oMatrixAF.createRow( oL_LabelNameA,oTF_LabelNameA );

	oL_LabelLocationA = new sap.ui.commons.Label({
		id : 'L-LabelLocationA',
		text : ' LOFTWARE FOLDER'
	});

	var oTF_LabelLocationA = new sap.ui.commons.TextField({
		id : 'TF-LabelLocationA',
		tooltip : 'Loftware Folder',
		editable : true,
		visible : true,
		width : '290px' 
	});

	oMatrixAF.createRow( oL_LabelLocationA,oTF_LabelLocationA );

	oL_LabelTemplateA = new sap.ui.commons.Label({
		id : 'L-LabeltemplateA',
		text : ' LABEL TEMPLATE'
	});

	var oDropBoxSelTemplateA = new sap.ui.commons.DropdownBox({
		id : "SelTemplateA",
		tooltip : 'Selected Template',
		editable : true,
		width : '200px', 
		change: function(oEvent){
			 //alert(oEvent.oSource.getSelectedItemId());
		}
	})

	// ******************************************************************************************************************************************************************
	function getLabelFiles(){
		var timestamp = new Date().getTime();
		var url_pdf_data = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/getLabelsFilesList_xAcute&ts="+timestamp+"&Content-Type=text/xml";
	//	alert(url_pdf_data);	
		getData(url_pdf_data, parseJsonDataTemplateFiles);
	}

	// ******************************************************************************************************************************************************************
	function parseJsonDataTemplateFiles (jsondata){
		var oModel = new sap.ui.model.json.JSONModel({odata: jsondata});
		oDropBoxSelTemplateA.setModel(oModel);
		var oItem = new sap.ui.core.ListItem();
		oItem.bindProperty("key",  "KEY");
		oItem.bindProperty("text",  "TEXT");
		oDropBoxSelTemplateA.bindItems("/odata", oItem);
	}

	// ******************************************************************************************************************************************************************

	oMatrixAF.createRow( oL_LabelTemplateA,oDropBoxSelTemplateA );

	oL_LabelTypeA = new sap.ui.commons.Label({
		id : 'L-LabelTypeA',
		text : ' LABEL TYPE'
	});

	var oDropBoxSelTypeA = new sap.ui.commons.DropdownBox({
		id : "SelTypeA",
		tooltip : 'Selected Type',
		editable : true,
		width : '200px', 
		change: function(oEvent){
			 //alert(oEvent.oSource.getSelectedItemId());
		}
	})

	// ******************************************************************************************************************************************************************
	function getLabelTypeListA(){
		var timestamp = new Date().getTime();
		var url_pdf_data = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/get_LabelTypeList&ts="+timestamp+"&Content-Type=text/xml";
		//alert(url_rl_data);	
		getData(url_pdf_data, parseJsonDataLabelTypeListA);
	}

	// ******************************************************************************************************************************************************************
	function parseJsonDataLabelTypeListA (jsondata){
		var oModel = new sap.ui.model.json.JSONModel({odata: jsondata});
		oDropBoxSelTypeA.setModel(oModel);
		var oItem = new sap.ui.core.ListItem();
		oItem.bindProperty("key",  "labelType");
		oItem.bindProperty("text",  "labelDescription");
		oDropBoxSelTypeA.bindItems("/odata", oItem);
		//oDropBoxSelTypeE .setSelectedKey(selected_LabelType );
	}

	oMatrixAF.createRow( oL_LabelTypeA,oDropBoxSelTypeA );

	oL_ActiveA = new sap.ui.commons.Label({
		id : 'L-ActiveA',
		text : ' ACTIVE'
	});

	var oCbox_ActiveA = new sap.ui.commons.CheckBox('CB_ActiveA',{
		checked : false
	});

	oMatrixAF.createRow( oL_ActiveA,oCbox_ActiveA );
	 oMatrixA.createRow( oMatrixAF );

	var oMatrixAB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixAB',
		layoutFixed : true,
		width: '690px',
		columns : 4,
		widths : ['170px','175px','175px','170px'] 
	});

	var oButton4 = new sap.ui.commons.Button({
		id : 'B-AddLabel',
		text : 'SUBMIT',
		enabled: true
	});
	oButton4.attachPress(doAddLabel);

	var oButton5 = new sap.ui.commons.Button({
		id : 'B-TestLabel',
		text : 'TEST',
		enabled: true
	});
	oButton5.attachPress(testLabel);

	oMatrixAB.createRow( "",oButton5 ,oButton4,"");

	oMatrixA.createRow( oMatrixAB);

	var oOverlayContainerAdd = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerAdd .setHeight('360px');
	oOverlayContainerAdd .setWidth('700px');
	oOverlayContainerAdd.addContent(oMatrixA);
	
	// ******************************************************************************************************************************************************************
	function doAdd() {
		if(!oOverlayContainerAdd.isOpen()){
			getLabelFiles();
			 getLabelTypeListA();
          			oCore.byId("TF-LabelNameA").setValue("");
        			oCore.byId("TF-LabelLocationA").setValue("");
          			oCore.byId("CB_ActiveA").setChecked(false);
			oOverlayContainerAdd.open();
		}
	};

	// ******************************************************************************************************************************************************************
	function doAddLabel() {
		// retrieve values
		var input_LabelName = oCore.byId("TF-LabelNameA").getValue();
		var input_LabelLocation = oCore.byId("TF-LabelLocationA").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateA.getSelectedKey();
		var input_LabelType = oDropBoxSelTypeA.getSelectedKey();
		if (oCore.byId("CB_ActiveA").getChecked() ) {
			input_LabelActive = 1;
		} else {
			input_LabelActive = 0;
		}
		var input_userNAME = document.getElementById("user_name").value;
		if(input_LabelName=="") {
			alert("Please Input Label Name ..");
			oCore.byId("TF-LabelNameA").focus();
		} else {
			if(input_LabelLocation=="") {
				alert("Please Input Operator Label Location ..");
				oCore.byId("TF-LabelLocationA").focus();
			} else {
				if(input_LabelTemplate=="") {
					alert("Please Select Label Template ..");
					oCore.byId("SelTemplateA").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_LabelName);
					var Param2 = escapeSQLString(input_LabelLocation);
					var Param3 = escapeSQLString(input_LabelTemplate);
					var Param4 = escapeSQLString(input_LabelActive);
					var Param5 = escapeSQLString(input_userNAME);
					var Param6 = escapeSQLString(input_LabelType);
       					var oReqData;
      					if (window.XMLHttpRequest) {
     	     					oReqData = new XMLHttpRequest();
      					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6);
						 //alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/add_Label&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
						 // alert(queryStr);
						oReqData.open("GET", queryStr, true); 
						oReqData.onreadystatechange = function() {
							if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
								// Successful -- rebuild the screen
							 	updateTableLabels();	
							 	oOverlayContainerAdd.close();	
							} else {
								// Not Successful -- alert the user
								alert("Error: " + oReqData.statusText);
							}
						}
						oReqData.send();
       					} else {
          						window.alert("Error creating XmlHttpRequest object.");
       					}
				}
			}
		}
	};

	// ******************************************************************************************************************************************************************
	function testLabel(){
		var input_LabelName = oCore.byId("TF-LabelNameA").getValue();
		var input_LabelLocation = oCore.byId("TF-LabelLocationA").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateA.getSelectedKey();
		if(input_LabelName=="") {
			alert("Please Input Operator Label Name ..");
			oCore.byId("TF-LabelNameA").focus();
		} else {
			if(input_LabelLocation=="") {
				alert("Please Input Operator Label Location ..");
				oCore.byId("TF-LabelLocationA").focus();
			} else {
				if(input_LabelTemplate=="") {
					alert("Please Select Label Template ..");
					oCore.byId("SelTemplateA").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_LabelName);
					var Param2 = escapeSQLString(input_LabelTemplate);
					var Param3 = escapeSQLString(input_LabelLocation);
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
					//	alert(paramStr);
					getData("/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/testUploadLabelFilePCo_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
				
					function parseJsonDataSet(jsondata){
						for (var i=0; i<jsondata.length; i++){
							status_id = jsondata[i]['STATUS'];
							status_text = jsondata[i]['MESSAGE'];
							alert(status_text);
						}
					}
				}
			}
		}
	}

	// ******************************************************************************************************************************************************************
	function testLabel_old(){
		var input_LabelName = oCore.byId("TF-LabelNameA").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateA.getSelectedKey();
		var input_LabelLocation = oCore.byId("TF-LabelLocationA").getValue();
		if(input_LabelLocation=="") {
			alert("Please Input Operator Label Location ..");
			oCore.byId("TF-LabelLocationA").focus();
		} else {
			if(input_LabelTemplate=="") {
				alert("Please Select Label Template ..");
				oCore.byId("SelTemplateA").focus();
			} else {
				// all good. Try to write them ..
				var Param1 = escapeSQLString(input_LabelName);
				var Param2 = escapeSQLString(input_LabelTemplate);
				var Param3 = escapeSQLString(input_LabelLocation);
				if (window.XMLHttpRequest) {
     	     				oReqData = new XMLHttpRequest();
      				}
				if (oReqData != null) {
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
					var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/testUploadLabelFilePCo_xAcute&"+paramStr+"&ts="+timestamp+"&OutputParameter=OUTPUT&Content-Type=text/xml";
					// alert(queryStr);
					oReqData.open("GET", queryStr, true); 
					oReqData.onreadystatechange = function() {
						if (oReqData.readyState == 4) 
						if (oReqData.status == 200) {
							// Successful -- rebuild the screen
							var xmlDOC = oReqData.responseXML;
							var trxMessage = xmlDOC.getElementsByTagName("OUTPUT")[0].childNodes[0].nodeValue;
							alert(trxMessage);
						} else {
							alert("Error: " + oReqData.statusText);
						}
					}
					oReqData.send();
       				} else {
          					window.alert("Error creating XmlHttpRequest object.");
       				}
			}
		}
	}

	// ******************************************************************************************************************************************************************
	var oMatrixE = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixE',
		layoutFixed : true,
		width: '690px',
		columns : 1,
		widths : ['700px'] 
	});

	var oMatrixEF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEF',
		layoutFixed : true,
		width: '690px',
		columns : 2,
		widths : ['295px','385px'] 
	});

	var oTitleE = new sap.ui.commons.Label({
		id : 'L-EditLabel',
		text : 'EDIT LABEL'
	});
	oMatrixE.createRow( oTitleE );

   	oL_LabelNameE = new sap.ui.commons.Label({
		id : 'L-LabelNameE',
		text : ' LABEL NAME'
	});

	var oTF_LabelNameE = new sap.ui.commons.TextField({
		id : 'TF-LabelNameE',
		tooltip : 'Label Name',
		editable : true,
		visible : true,
		width : '200px' 
	});

	oMatrixEF.createRow( oL_LabelNameE,oTF_LabelNameE);

	oL_LabelLocationE = new sap.ui.commons.Label({
		id : 'L-LabelLocationE',
		text : ' LOFTWARE FOLDER'
	});

	var oTF_LabelLocationE= new sap.ui.commons.TextField({
		id : 'TF-LabelLocationE',
		tooltip : 'Loftware Folder',
		editable : true,
		visible : true,
		width : '290px' 
	});

	oMatrixEF.createRow( oL_LabelLocationE,oTF_LabelLocationE );

	oL_LabelTemplateE = new sap.ui.commons.Label({
		id : 'L-LabeltemplateE',
		text : ' LABEL TEMPLATE'
	});

	var oDropBoxSelTemplateE = new sap.ui.commons.DropdownBox({
		id : "SelTemplateE",
		tooltip : 'Selected Template',
		editable : true,
		width : '200px', 
		change: function(oEvent){
			 //alert(oEvent.oSource.getSelectedItemId());
		}
	})

	// ******************************************************************************************************************************************************************
	function getLabelFilesE(){
		var timestamp = new Date().getTime();
		var url_pdf_data = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/getLabelsFilesList_xAcute&ts="+timestamp+"&Content-Type=text/xml";
		//alert(url_rl_data);	
		getData(url_pdf_data, parseJsonDataTemplateFilesE);
	}

	// ******************************************************************************************************************************************************************
	function parseJsonDataTemplateFilesE (jsondata){
		var oModel = new sap.ui.model.json.JSONModel({odata: jsondata});
		oDropBoxSelTemplateE.setModel(oModel);
		var oItem = new sap.ui.core.ListItem();
		oItem.bindProperty("key",  "KEY");
		oItem.bindProperty("text",  "TEXT");
		oDropBoxSelTemplateE.bindItems("/odata", oItem);

		oDropBoxSelTemplateE.setSelectedKey(selected_LabelTemplateID );
	}

	// ******************************************************************************************************************************************************************
	oMatrixEF.createRow( oL_LabelTemplateE,oDropBoxSelTemplateE );

	oL_LabelTypeE = new sap.ui.commons.Label({
		id : 'L-LabelTypeE',
		text : ' LABEL TYPE'
	});

	var oDropBoxSelTypeE = new sap.ui.commons.DropdownBox({
		id : "SelTypeE",
		tooltip : 'Selected Type',
		editable : true,
		width : '200px', 
		change: function(oEvent){
			 //alert(oEvent.oSource.getSelectedItemId());
		}
	})

	// ******************************************************************************************************************************************************************
	function getLabelTypeListE(){
		var timestamp = new Date().getTime();
		var url_pdf_data = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/get_LabelTypeList&ts="+timestamp+"&Content-Type=text/xml";
		//alert(url_rl_data);	
		getData(url_pdf_data, parseJsonDataLabelTypeListE);
	}

	// ******************************************************************************************************************************************************************
	function parseJsonDataLabelTypeListE (jsondata){
		var oModel = new sap.ui.model.json.JSONModel({odata: jsondata});
		oDropBoxSelTypeE.setModel(oModel);
		var oItem = new sap.ui.core.ListItem();
		oItem.bindProperty("key",  "labelType");
		oItem.bindProperty("text",  "labelDescription");
		oDropBoxSelTypeE.bindItems("/odata", oItem);
		oDropBoxSelTypeE .setSelectedKey(selected_LabelType );
	}

	// ******************************************************************************************************************************************************************

	oMatrixEF.createRow( oL_LabelTypeE,oDropBoxSelTypeE );

	oL_ActiveE = new sap.ui.commons.Label({
		id : 'L-ActiveE',
		text : ' ACTIVE'
	});

	var oCbox_ActiveE = new sap.ui.commons.CheckBox('CB_ActiveE',{
		checked : false
	});

	oMatrixEF.createRow( oL_ActiveE,oCbox_ActiveE );

	oMatrixE.createRow( oMatrixEF );

	var oMatrixEB = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEB',
		layoutFixed : true,
		width: '690px',
		columns : 4,
		widths : ['170px','175px','175px','170px'] 
	});

	var oButton6 = new sap.ui.commons.Button({
		id : 'B-EditLabel',
		tooltip : "Submit Label Data",
		text : 'SUBMIT',
		enabled: true
	});
	oButton6.attachPress(doEditLabel);

	var oButton7 = new sap.ui.commons.Button({
		id : 'B-TestEditLabel',
		tooltip : "Test Label Data",
		text : 'TEST',
		enabled: true
	});
	oButton7.attachPress(testLabelE);

	oMatrixEB.createRow( "",oButton7 ,oButton6,"");

	oMatrixE.createRow( oMatrixEB );

	var oOverlayContainerEdit = new sap.ui.ux3.OverlayDialog({openButtonVisible: false});
	oOverlayContainerEdit .setHeight('360px');
	oOverlayContainerEdit .setWidth('700px');
	oOverlayContainerEdit.addContent(oMatrixE);

	// ******************************************************************************************************************************************************************
	function doEdit() {
		if(!oOverlayContainerEdit.isOpen()){
			getLabelFilesE();
			 getLabelTypeListE();
          			oCore.byId("TF-LabelNameE").setValue(selected_LabelName);
        			oCore.byId("TF-LabelLocationE").setValue(selected_LabelLocation);
			//alert(selected_LabelActive);
			if (selected_LabelActive ==1){	
				oCore.byId("CB_ActiveE").setChecked(true) ;
			}
			else{
          				oCore.byId("CB_ActiveE").setChecked(false) ;
			}
			oOverlayContainerEdit.open();
		}
	};

	// ******************************************************************************************************************************************************************
	function doEditLabel() {
		// retrieve values
		var input_LabelName = oCore.byId("TF-LabelNameE").getValue();
		var input_LabelLocation = oCore.byId("TF-LabelLocationE").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateE.getSelectedKey();
		var input_LabelType = oDropBoxSelTypeE.getSelectedKey();
		if (oCore.byId("CB_ActiveE").getChecked() ) {
			input_LabelActive = 1;
		} else {
			input_LabelActive = 0;
		}
		var input_userNAME = document.getElementById("user_name").value;
		if(input_LabelName=="") {
			alert("Please Input Label Name ..");
			oCore.byId("TF-LabelNameA").focus();
		} else {
			if(input_LabelLocation=="") {
				alert("Please Input Operator Label Location ..");
				oCore.byId("TF-LabelLocationA").focus();
			} else {
				if(input_LabelTemplate=="") {
					alert("Please Select Label Template ..");
					oCore.byId("SelTemplateA").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_LabelName);
					var Param2 = escapeSQLString(input_LabelLocation);
					var Param3 = escapeSQLString(input_LabelTemplate);
					var Param4 = escapeSQLString(input_LabelActive);
					var Param5 = escapeSQLString(input_userNAME);
					var Param6 = escapeSQLString(selected_recordID);
					var Param7 = escapeSQLString(input_LabelType);
       					var oReqData;
      					if (window.XMLHttpRequest) {
     	     					oReqData = new XMLHttpRequest();
      					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3)+"&Param.4="+encodeURIComponent(Param4)+"&Param.5="+encodeURIComponent(Param5)+"&Param.6="+encodeURIComponent(Param6)+"&Param.7="+encodeURIComponent(Param7);
					 	//	alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/edit_Label&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
						oReqData.open("GET", queryStr, true); 
						oReqData.onreadystatechange = function() {
						if (oReqData.readyState == 4) 
							if (oReqData.status == 200) {
								// Successful -- rebuild the screen
						 		updateTableLabels();	
						 		oOverlayContainerEdit.close();	
							} else {
								// Not Successful -- alert the user
								alert("Error: " + oReqData.statusText);
							}
						}
						oReqData.send();
       					} else {
          						window.alert("Error creating XmlHttpRequest object.");
       					}
				}
			}
		}
	};

	// ******************************************************************************************************************************************************************
	function testLabelE(){
		var input_LabelName = oCore.byId("TF-LabelNameE").getValue();
		var input_LabelLocation = oCore.byId("TF-LabelLocationE").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateE.getSelectedKey();
		if(input_LabelName=="") {
			alert("Please Input Operator Label Name ..");
			oCore.byId("TF-LabelNameE").focus();
		} else {
			if(input_LabelLocation=="") {
				alert("Please Input Operator Label Location ..");
				oCore.byId("TF-LabelLocationE").focus();
			} else {
				if(input_LabelTemplate=="") {
					alert("Please Select Label Template ..");
					oCore.byId("SelTemplateE").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_LabelName);
					var Param2 = escapeSQLString(input_LabelTemplate);
					var Param3 = escapeSQLString(input_LabelLocation);
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2)+"&Param.3="+encodeURIComponent(Param3);
					//	alert(paramStr);
					getData("/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/testUploadLabelFilePCo_xAcute&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml", parseJsonDataSet);
				
					function parseJsonDataSet(jsondata){
						for (var i=0; i<jsondata.length; i++){
							status_id = jsondata[i]['STATUS'];
							status_text = jsondata[i]['MESSAGE'];
							alert(status_text);
						}
					}
				}
			}
		}
	}

	// ******************************************************************************************************************************************************************
	function testLabelE_old(){
		var input_LabelName = oCore.byId("TF-LabelNameE").getValue();
		var input_LabelLocation = oCore.byId("TF-LabelLocationE").getValue();
		var input_LabelTemplate = oDropBoxSelTemplateE.getSelectedKey();
		if(input_LabelLocation=="") {
			alert("Please Input Operator Label Location ..");
			oCore.byId("TF-LabelLocationE").focus();
		} else {
			if(input_LabelTemplate=="") {
				alert("Please Select Label Template ..");
				oCore.byId("SelTemplateE").focus();
			} else {
				// all good. Try to write them ..
				var Param1 = escapeSQLString(input_LabelName);
				var Param2 = escapeSQLString(input_LabelTemplate);
				var Param3 = escapeSQLString(input_LabelLocation);
				if (window.XMLHttpRequest) {
     	     				oReqData = new XMLHttpRequest();
      				}
				if (oReqData != null) {
					var timestamp = new Date().getTime();
					var paramStr = "Param.1="+encodeURIComponent(Param1)+"&Param.2="+encodeURIComponent(Param2) +"&Param.3="+encodeURIComponent(Param3);
					var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/TRANSACTIONS/testUploadLabelFilePCo_xAcute&"+paramStr+"&ts="+timestamp+"&OutputParameter=OUTPUT&Content-Type=text/xml";
					//	alert(queryStr);
					oReqData.open("GET", queryStr, true); 
					oReqData.onreadystatechange = function() {
						if (oReqData.readyState == 4) 
						if (oReqData.status == 200) {
							// Successful -- rebuild the screen
							var xmlDOC = oReqData.responseXML;
							var trxMessage = xmlDOC.getElementsByTagName("OUTPUT")[0].childNodes[0].nodeValue;
							alert(trxMessage);
						} else {
							alert("Error: " + oReqData.statusText);
						}
					}
					oReqData.send();
       				} else {
          					window.alert("Error creating XmlHttpRequest object.");
       				}
			}
		}
	}

	// ******************************************************************************************************************************************************************
	function doDelete() {
		// Retrieve the selected row
		var Param1 = escapeSQLString(selected_recordID);
       		var oReqData;
      		if (window.XMLHttpRequest) {
     	     		oReqData = new XMLHttpRequest();
      		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1="+encodeURIComponent(Param1);	
			// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=MESM/LABELS/QUERIES/del_Label&"+paramStr+"&ts="+timestamp+"&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true); 
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4) 
				if (oReqData.status == 200) {
					// Successful -- rebuild the screen
					updateTableLabels();	
				} else {
					alert("Error: " + oReqData.statusText);
				}
			}
			oReqData.send();
       		} else {
          			window.alert("Error creating XmlHttpRequest object.");
       		}
	};

	</script>
</head>

<body onLoad="roleSecurity()">

<input id="user_roles" type="hidden" value="{IllumLoginRoles}" style="display:block;width:1000px;" readonly />
<input id="user_role" type="hidden" value="{ROLE}" style="display:block;width:1000px;" readonly />
<input id="user_name" type="hidden" value="{IllumLoginName}" style="display: block;width:1000px;" readonly />
<input id="user_height" type="hidden" value="{HEIGHT}" style="display: block;width:100px;" readonly />
<input id="user_address" type="hidden" value="{Machine}" style="display:block;width:1000px;" readonly />
<div id="app_header" >
<div id="app_title">LABEL MGMT</div>
<div id="app_menu"></div>
<div id="page_title">DEFAULT SCREEN</div>
</div>
<div id="mesm_content" ></div>

</body>

</html>